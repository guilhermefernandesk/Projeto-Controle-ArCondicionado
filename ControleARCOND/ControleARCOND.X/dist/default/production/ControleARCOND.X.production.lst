

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 23:12:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4520 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  0024A4                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for desenhoInit@F21
   103  0024A4  00                 	db	0
   104  0024A5  00                 	db	0
   105  0024A6  00                 	db	0
   106  0024A7  0E                 	db	14
   107  0024A8  0E                 	db	14
   108  0024A9  0E                 	db	14
   109  0024AA  0E                 	db	14
   110  0024AB  00                 	db	0
   111                           
   112                           ;initializer for desenhoInit@F19
   113  0024AC  00                 	db	0
   114  0024AD  0E                 	db	14
   115  0024AE  0E                 	db	14
   116  0024AF  0E                 	db	14
   117  0024B0  0E                 	db	14
   118  0024B1  0E                 	db	14
   119  0024B2  0E                 	db	14
   120  0024B3  00                 	db	0
   121                           
   122                           	psect	idataBANK0
   123  00242E                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for desenhoInit@F29
   127  00242E  00                 	db	0
   128  00242F  00                 	db	0
   129  002430  13                 	db	19
   130  002431  1A                 	db	26
   131  002432  04                 	db	4
   132  002433  0B                 	db	11
   133  002434  19                 	db	25
   134  002435  00                 	db	0
   135                           
   136                           ;initializer for desenhoInit@F27
   137  002436  02                 	db	2
   138  002437  04                 	db	4
   139  002438  08                 	db	8
   140  002439  04                 	db	4
   141  00243A  02                 	db	2
   142  00243B  04                 	db	4
   143  00243C  08                 	db	8
   144  00243D  00                 	db	0
   145                           
   146                           ;initializer for desenhoInit@F25
   147  00243E  00                 	db	0
   148  00243F  00                 	db	0
   149  002440  00                 	db	0
   150  002441  00                 	db	0
   151  002442  00                 	db	0
   152  002443  0E                 	db	14
   153  002444  0E                 	db	14
   154  002445  00                 	db	0
   155                           
   156                           ;initializer for desenhoInit@F23
   157  002446  00                 	db	0
   158  002447  00                 	db	0
   159  002448  00                 	db	0
   160  002449  00                 	db	0
   161  00244A  0E                 	db	14
   162  00244B  0E                 	db	14
   163  00244C  0E                 	db	14
   164  00244D  00                 	db	0
   165                           
   166                           	psect	smallconst
   167  000600                     __psmallconst:
   168                           	callstack 0
   169  000600  00                 	db	0
   170  000601                     _valor:
   171                           	callstack 0
   172  000601  3F                 	db	63
   173  000602  06                 	db	6
   174  000603  5B                 	db	91
   175  000604  4F                 	db	79
   176  000605  66                 	db	102
   177  000606  6D                 	db	109
   178  000607  7D                 	db	125
   179  000608  07                 	db	7
   180  000609  7F                 	db	127
   181  00060A  6F                 	db	111
   182  00060B  77                 	db	119
   183  00060C  7C                 	db	124
   184  00060D  39                 	db	57
   185  00060E  5E                 	db	94
   186  00060F  79                 	db	121
   187  000610  71                 	db	113
   188  000611  00                 	db	0
   189  000612                     __end_of_valor:
   190                           	callstack 0
   191  000612  55                 	db	85
   192  000613  4C                 	db	76
   193  000614  44                 	db	68
   194  000615  52                 	db	82
   195  000616  53                 	db	83
   196  000617  58                 	db	88
   197  000618  41                 	db	65
   198  000619  42                 	db	66
   199  00061A  59                 	db	89
   200  00061B  73                 	db	115
   201  00061C                     __end_of_charKey:
   202                           	callstack 0
   203  0000                     _T2CON	set	4042
   204  0000                     _CCP2CON	set	4026
   205  0000                     _CCPR2L	set	4027
   206  0000                     _PR2	set	4043
   207  0000                     _ADRESL	set	4035
   208  0000                     _ADRESH	set	4036
   209  0000                     _ADCON2	set	4032
   210  0000                     _ADCON0	set	4034
   211  0000                     _T0CON	set	4053
   212  0000                     _TMR0L	set	4054
   213  0000                     _TMR0H	set	4055
   214  0000                     _INTCON	set	4082
   215  0000                     _ADCON1	set	4033
   216  0000                     _TRISE	set	3990
   217  0000                     _TRISD	set	3989
   218  0000                     _TRISC	set	3988
   219  0000                     _TRISB	set	3987
   220  0000                     _TRISA	set	3986
   221  0000                     _PORTE	set	3972
   222  0000                     _PORTD	set	3971
   223  0000                     _PORTC	set	3970
   224  0000                     _PORTB	set	3969
   225  0000                     _PORTA	set	3968
   226  00061C                     STR_5:
   227  00061C  54                 	db	84	;'T'
   228  00061D  69                 	db	105	;'i'
   229  00061E  6D                 	db	109	;'m'
   230  00061F  65                 	db	101	;'e'
   231  000620  72                 	db	114	;'r'
   232  000621  20                 	db	32
   233  000622  4F                 	db	79	;'O'
   234  000623  46                 	db	70	;'F'
   235  000624  46                 	db	70	;'F'
   236  000625  00                 	db	0
   237  000626                     STR_8:
   238  000626  54                 	db	84	;'T'
   239  000627  69                 	db	105	;'i'
   240  000628  6D                 	db	109	;'m'
   241  000629  65                 	db	101	;'e'
   242  00062A  72                 	db	114	;'r'
   243  00062B  20                 	db	32
   244  00062C  4F                 	db	79	;'O'
   245  00062D  4E                 	db	78	;'N'
   246  00062E  00                 	db	0
   247  00062F                     STR_6:
   248  00062F  4D                 	db	77	;'M'
   249  000630  6F                 	db	111	;'o'
   250  000631  64                 	db	100	;'d'
   251  000632  6F                 	db	111	;'o'
   252  000633  3A                 	db	58	;':'
   253  000634  00                 	db	0
   254  000635                     STR_21:
   255  000635  41                 	db	65	;'A'
   256  000636  75                 	db	117	;'u'
   257  000637  74                 	db	116	;'t'
   258  000638  6F                 	db	111	;'o'
   259  000639  00                 	db	0
   260  00063A                     STR_23:
   261  00063A  20                 	db	32
   262  00063B  20                 	db	32
   263  00063C  20                 	db	32
   264  00063D  00                 	db	0
   265  00063E                     STR_22:
   266  00063E  2A                 	db	42
   267  00063F  00                 	db	0
   268  000640                     STR_7:
   269  000640  43                 	db	67	;'C'
   270  000641  00                 	db	0
   271  000642                     STR_1:
   272  000642  7C                 	db	124
   273  000643  00                 	db	0
   274  000644  00                 	db	0	; dummy byte at the end
   275  0000                     
   276                           ; #config settings
   277                           
   278                           	psect	cinit
   279  001FF2                     __pcinit:
   280                           	callstack 0
   281  001FF2                     start_initialization:
   282                           	callstack 0
   283  001FF2                     __initialization:
   284                           	callstack 0
   285                           
   286                           ; Initialize objects allocated to BANK0 (32 bytes)
   287                           ; load TBLPTR registers with __pidataBANK0
   288  001FF2  0E2E               	movlw	low __pidataBANK0
   289  001FF4  6EF6               	movwf	tblptrl,c
   290  001FF6  0E24               	movlw	high __pidataBANK0
   291  001FF8  6EF7               	movwf	tblptrh,c
   292  001FFA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   293  001FFC  6EF8               	movwf	tblptru,c
   294  001FFE  EE00  F080         	lfsr	0,__pdataBANK0
   295  002002  EE10 F020          	lfsr	1,32
   296  002006                     copy_data0:
   297  002006  0009               	tblrd		*+
   298  002008  CFF5 FFEE          	movff	tablat,postinc0
   299  00200C  50E5               	movf	postdec1,w,c
   300  00200E  50E1               	movf	fsr1l,w,c
   301  002010  E1FA               	bnz	copy_data0
   302                           
   303                           ; Initialize objects allocated to COMRAM (16 bytes)
   304                           ; load TBLPTR registers with __pidataCOMRAM
   305  002012  0EA4               	movlw	low __pidataCOMRAM
   306  002014  6EF6               	movwf	tblptrl,c
   307  002016  0E24               	movlw	high __pidataCOMRAM
   308  002018  6EF7               	movwf	tblptrh,c
   309  00201A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   310  00201C  6EF8               	movwf	tblptru,c
   311  00201E  EE00  F05F         	lfsr	0,__pdataCOMRAM
   312  002022  EE10 F010          	lfsr	1,16
   313  002026                     copy_data1:
   314  002026  0009               	tblrd		*+
   315  002028  CFF5 FFEE          	movff	tablat,postinc0
   316  00202C  50E5               	movf	postdec1,w,c
   317  00202E  50E1               	movf	fsr1l,w,c
   318  002030  E1FA               	bnz	copy_data1
   319                           
   320                           ; Clear objects allocated to COMRAM (13 bytes)
   321  002032  EE00  F06F         	lfsr	0,__pbssCOMRAM
   322  002036  0E0D               	movlw	13
   323  002038                     clear_0:
   324  002038  6AEE               	clrf	postinc0,c
   325  00203A  06E8               	decf	wreg,f,c
   326  00203C  E1FD               	bnz	clear_0
   327  00203E                     end_of_initialization:
   328                           	callstack 0
   329  00203E                     __end_of__initialization:
   330                           	callstack 0
   331  00203E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   332  002040  6EF8               	movwf	tblptru,c
   333  002042  0100               	movlb	0
   334  002044  EF23  F003         	goto	_main	;jump to C main() function
   335                           
   336                           	psect	bssCOMRAM
   337  00006F                     __pbssCOMRAM:
   338                           	callstack 0
   339  00006F                     kpDebounce@oldRead:
   340                           	callstack 0
   341  00006F                     	ds	2
   342  000071                     kpDebounce@newRead:
   343                           	callstack 0
   344  000071                     	ds	2
   345  000073                     _keys:
   346                           	callstack 0
   347  000073                     	ds	2
   348  000075                     _started:
   349                           	callstack 0
   350  000075                     	ds	1
   351  000076                     _v3:
   352                           	callstack 0
   353  000076                     	ds	1
   354  000077                     _v2:
   355                           	callstack 0
   356  000077                     	ds	1
   357  000078                     _v1:
   358                           	callstack 0
   359  000078                     	ds	1
   360  000079                     _v0:
   361                           	callstack 0
   362  000079                     	ds	1
   363  00007A                     _display:
   364                           	callstack 0
   365  00007A                     	ds	1
   366  00007B                     kpDebounce@tempo:
   367                           	callstack 0
   368  00007B                     	ds	1
   369                           
   370                           	psect	dataCOMRAM
   371  00005F                     __pdataCOMRAM:
   372                           	callstack 0
   373  00005F                     desenhoInit@F21:
   374                           	callstack 0
   375  00005F                     	ds	8
   376  000067                     desenhoInit@F19:
   377                           	callstack 0
   378  000067                     	ds	8
   379                           
   380                           	psect	dataBANK0
   381  000080                     __pdataBANK0:
   382                           	callstack 0
   383  000080                     desenhoInit@F29:
   384                           	callstack 0
   385  000080                     	ds	8
   386  000088                     desenhoInit@F27:
   387                           	callstack 0
   388  000088                     	ds	8
   389  000090                     desenhoInit@F25:
   390                           	callstack 0
   391  000090                     	ds	8
   392  000098                     desenhoInit@F23:
   393                           	callstack 0
   394  000098                     	ds	8
   395                           
   396                           	psect	cstackCOMRAM
   397  000001                     __pcstackCOMRAM:
   398                           	callstack 0
   399  000001                     ?_digitalRead:
   400                           	callstack 0
   401  000001                     ?_kpRead:
   402                           	callstack 0
   403  000001                     ?_adcRead:
   404                           	callstack 0
   405  000001                     ?___wmul:
   406                           	callstack 0
   407  000001                     ?___awdiv:
   408                           	callstack 0
   409  000001                     ?___lwdiv:
   410                           	callstack 0
   411  000001                     ?___aldiv:
   412                           	callstack 0
   413  000001                     digitalWrite@pin:
   414                           	callstack 0
   415  000001                     digitalRead@pin:
   416                           	callstack 0
   417  000001                     pinMode@pin:
   418                           	callstack 0
   419  000001                     delayMicro@a:
   420                           	callstack 0
   421  000001                     delayMili@a:
   422                           	callstack 0
   423  000001                     timerReset@tempo:
   424                           	callstack 0
   425  000001                     adcRead@channel:
   426                           	callstack 0
   427  000001                     atraso_ms@num:
   428                           	callstack 0
   429  000001                     ___wmul@multiplier:
   430                           	callstack 0
   431  000001                     ___awdiv@dividend:
   432                           	callstack 0
   433  000001                     ___lwdiv@dividend:
   434                           	callstack 0
   435  000001                     ___aldiv@dividend:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x0
   439  000001                     	ds	2
   440  000003                     ??_digitalRead:
   441  000003                     ??_delayMili:
   442  000003                     digitalWrite@value:
   443                           	callstack 0
   444  000003                     pinMode@type:
   445                           	callstack 0
   446  000003                     timerReset@ciclos:
   447                           	callstack 0
   448  000003                     adcRead@ADvalor:
   449                           	callstack 0
   450  000003                     atraso_ms@i:
   451                           	callstack 0
   452  000003                     ___wmul@multiplicand:
   453                           	callstack 0
   454  000003                     ___awdiv@divisor:
   455                           	callstack 0
   456  000003                     ___lwdiv@divisor:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2
   460  000003                     	ds	1
   461  000004                     delayMili@i:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x3
   465  000004                     	ds	1
   466  000005                     ??_digitalWrite:
   467  000005                     ??_pinMode:
   468  000005                     atraso_ms@j:
   469                           	callstack 0
   470  000005                     ___awdiv@counter:
   471                           	callstack 0
   472  000005                     ___wmul@product:
   473                           	callstack 0
   474  000005                     ___lwdiv@quotient:
   475                           	callstack 0
   476  000005                     ___aldiv@divisor:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x4
   480  000005                     	ds	1
   481  000006                     atraso_ms@k:
   482                           	callstack 0
   483  000006                     ___awdiv@sign:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x5
   487  000006                     	ds	1
   488  000007                     ___lwdiv@counter:
   489                           	callstack 0
   490  000007                     soWrite@value:
   491                           	callstack 0
   492  000007                     ___awdiv@quotient:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x6
   496  000007                     	ds	1
   497  000008                     ??_pwmSet:
   498  000008                     ?___lwmod:
   499                           	callstack 0
   500  000008                     ___lwmod@dividend:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x7
   504  000008                     	ds	1
   505  000009                     ?___awmod:
   506                           	callstack 0
   507  000009                     soWrite@i:
   508                           	callstack 0
   509  000009                     ___aldiv@counter:
   510                           	callstack 0
   511  000009                     ___awmod@dividend:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x8
   515  000009                     	ds	1
   516  00000A                     ??_kpDebounce:
   517  00000A                     ??_ssdUpdate:
   518  00000A                     pwmSet@porcento:
   519                           	callstack 0
   520  00000A                     ___aldiv@sign:
   521                           	callstack 0
   522  00000A                     pushNibble@rs:
   523                           	callstack 0
   524  00000A                     pushByte@rs:
   525                           	callstack 0
   526  00000A                     ___lwmod@divisor:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x9
   530  00000A                     	ds	1
   531  00000B                     pwmSet@val:
   532                           	callstack 0
   533  00000B                     ___awmod@divisor:
   534                           	callstack 0
   535  00000B                     ___aldiv@quotient:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0xA
   539  00000B                     	ds	1
   540  00000C                     ??_pushByte:
   541  00000C                     pushNibble@value:
   542                           	callstack 0
   543  00000C                     ___lwmod@counter:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0xB
   547  00000C                     	ds	1
   548  00000D                     pushByte@value:
   549                           	callstack 0
   550  00000D                     ___awmod@counter:
   551                           	callstack 0
   552  00000D                     kpDebounce@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xC
   556  00000D                     	ds	1
   557  00000E                     lcdCommand@value:
   558                           	callstack 0
   559  00000E                     lcdChar@value:
   560                           	callstack 0
   561  00000E                     ___awmod@sign:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0xD
   565  00000E                     	ds	1
   566  00000F                     ?___almod:
   567                           	callstack 0
   568  00000F                     lcdPosition@line:
   569                           	callstack 0
   570  00000F                     lcdString@msg:
   571                           	callstack 0
   572  00000F                     pwmFrequency@freq:
   573                           	callstack 0
   574  00000F                     ___almod@dividend:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0xE
   578  00000F                     	ds	2
   579  000011                     ??_lcdString:
   580  000011                     lcdPosition@col:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x10
   584  000011                     	ds	2
   585  000013                     lcdString@i:
   586                           	callstack 0
   587  000013                     ___almod@divisor:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x12
   591  000013                     	ds	2
   592  000015                     velocidade@vel:
   593                           	callstack 0
   594  000015                     modo@m:
   595                           	callstack 0
   596  000015                     desenhoInit@v100:
   597                           	callstack 0
   598                           
   599                           ; 8 bytes @ 0x14
   600  000015                     	ds	2
   601  000017                     ??_modo:
   602  000017                     ___almod@counter:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x16
   606  000017                     	ds	1
   607  000018                     ___almod@sign:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x17
   611  000018                     	ds	1
   612  000019                     ssdDigit@pos:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x18
   616  000019                     	ds	1
   617  00001A                     ssdDigit@val:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x19
   621  00001A                     	ds	3
   622  00001D                     desenhoInit@v75:
   623                           	callstack 0
   624                           
   625                           ; 8 bytes @ 0x1C
   626  00001D                     	ds	8
   627  000025                     desenhoInit@v50:
   628                           	callstack 0
   629                           
   630                           ; 8 bytes @ 0x24
   631  000025                     	ds	8
   632  00002D                     desenhoInit@v25:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0x2C
   636  00002D                     	ds	8
   637  000035                     desenhoInit@aquecer:
   638                           	callstack 0
   639                           
   640                           ; 8 bytes @ 0x34
   641  000035                     	ds	8
   642  00003D                     desenhoInit@vent:
   643                           	callstack 0
   644                           
   645                           ; 8 bytes @ 0x3C
   646  00003D                     	ds	8
   647  000045                     desenhoInit@i:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x44
   651  000045                     	ds	2
   652  000047                     ??_main:
   653                           
   654                           ; 1 bytes @ 0x46
   655  000047                     	ds	2
   656  000049                     _main$1284:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x48
   660  000049                     	ds	4
   661  00004D                     _main$1285:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x4C
   665  00004D                     	ds	4
   666  000051                     main@vel:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x50
   670  000051                     	ds	2
   671  000053                     main@d:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x52
   675  000053                     	ds	2
   676  000055                     main@controle:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x54
   680  000055                     	ds	2
   681  000057                     main@m:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x56
   685  000057                     	ds	2
   686  000059                     main@slot:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x58
   690  000059                     	ds	1
   691  00005A                     main@temp:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x59
   695  00005A                     	ds	1
   696  00005B                     main@v:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x5A
   700  00005B                     	ds	2
   701  00005D                     main@tecla:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x5C
   705  00005D                     	ds	2
   706                           
   707 ;;
   708 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   709 ;;
   710 ;; *************** function _main *****************
   711 ;; Defined at:
   712 ;;		line 24 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  tecla           2   92[COMRAM] unsigned int 
   717 ;;  v               2   90[COMRAM] unsigned int 
   718 ;;  m               2   86[COMRAM] int 
   719 ;;  controle        2   84[COMRAM] int 
   720 ;;  d               2   82[COMRAM] int 
   721 ;;  vel             2   80[COMRAM] int 
   722 ;;  temp            1   89[COMRAM] unsigned char 
   723 ;;  slot            1   88[COMRAM] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   733 ;;      Params:         0       0       0       0       0       0       0
   734 ;;      Locals:        22       0       0       0       0       0       0
   735 ;;      Temps:          2       0       0       0       0       0       0
   736 ;;      Totals:        24       0       0       0       0       0       0
   737 ;;Total ram usage:       24 bytes
   738 ;; Hardware stack levels required when called: 7
   739 ;; This function calls:
   740 ;;		___aldiv
   741 ;;		___almod
   742 ;;		___awdiv
   743 ;;		___awmod
   744 ;;		___lwdiv
   745 ;;		___lwmod
   746 ;;		_adcInit
   747 ;;		_adcRead
   748 ;;		_atraso_ms
   749 ;;		_desenhoInit
   750 ;;		_desenhoOff
   751 ;;		_desenhoOn
   752 ;;		_kpDebounce
   753 ;;		_kpInit
   754 ;;		_kpRead
   755 ;;		_lcdChar
   756 ;;		_lcdInit
   757 ;;		_lcdPosition
   758 ;;		_modo
   759 ;;		_pwmInit
   760 ;;		_pwmSet
   761 ;;		_ssdDigit
   762 ;;		_ssdInit
   763 ;;		_ssdUpdate
   764 ;;		_timerInit
   765 ;;		_timerReset
   766 ;;		_timerWait
   767 ;;		_velocidade
   768 ;; This function is called by:
   769 ;;		Startup code after reset
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text0
   774  000646                     __ptext0:
   775                           	callstack 0
   776  000646                     _main:
   777                           	callstack 24
   778  000646                     
   779                           ;main.c: 25:     unsigned int tecla;;main.c: 26:     char temp = 16;
   780  000646  0E10               	movlw	16
   781  000648  6E5A               	movwf	main@temp^0,c
   782                           
   783                           ;main.c: 27:     char slot = 0;
   784  00064A  0E00               	movlw	0
   785  00064C  6E59               	movwf	main@slot^0,c
   786                           
   787                           ;main.c: 28:     unsigned int v=0;
   788  00064E  0E00               	movlw	0
   789  000650  6E5C               	movwf	(main@v+1)^0,c
   790  000652  0E00               	movlw	0
   791  000654  6E5B               	movwf	main@v^0,c
   792                           
   793                           ;main.c: 29:     int m = 0;
   794  000656  0E00               	movlw	0
   795  000658  6E58               	movwf	(main@m+1)^0,c
   796  00065A  0E00               	movlw	0
   797  00065C  6E57               	movwf	main@m^0,c
   798                           
   799                           ;main.c: 30:     int controle = 0;
   800  00065E  0E00               	movlw	0
   801  000660  6E56               	movwf	(main@controle+1)^0,c
   802  000662  0E00               	movlw	0
   803  000664  6E55               	movwf	main@controle^0,c
   804                           
   805                           ;main.c: 31:     int vel;;main.c: 32:     int d = 0;
   806  000666  0E00               	movlw	0
   807  000668  6E54               	movwf	(main@d+1)^0,c
   808  00066A  0E00               	movlw	0
   809  00066C  6E53               	movwf	main@d^0,c
   810  00066E                     
   811                           ;main.c: 34:     lcdInit();
   812  00066E  EC1A  F00E         	call	_lcdInit	;wreg free
   813  000672                     
   814                           ;main.c: 35:     kpInit();
   815  000672  EC4A  F011         	call	_kpInit	;wreg free
   816  000676                     
   817                           ;main.c: 36:     ssdInit();
   818  000676  EC24  F010         	call	_ssdInit	;wreg free
   819  00067A                     
   820                           ;main.c: 37:     timerInit();
   821  00067A  EC67  F012         	call	_timerInit	;wreg free
   822  00067E                     
   823                           ;main.c: 38:     adcInit();
   824  00067E  ECC9  F010         	call	_adcInit	;wreg free
   825  000682                     
   826                           ;main.c: 39:     desenhoInit();
   827  000682  ECDF  F005         	call	_desenhoInit	;wreg free
   828  000686                     
   829                           ;main.c: 40:     pwmInit();
   830  000686  EC45  F012         	call	_pwmInit	;wreg free
   831  00068A                     l3217:
   832                           
   833                           ;main.c: 43:         timerReset(30000);
   834  00068A  0E75               	movlw	117
   835  00068C  6E02               	movwf	(timerReset@tempo+1)^0,c
   836  00068E  0E30               	movlw	48
   837  000690  6E01               	movwf	timerReset@tempo^0,c
   838  000692  ECF5  F011         	call	_timerReset	;wreg free
   839                           
   840                           ;main.c: 44:         switch(slot){
   841  000696  EFB2  F005         	goto	l3361
   842  00069A                     l3219:
   843                           
   844                           ;main.c: 46:                 if(controle != 0){
   845  00069A  5055               	movf	main@controle^0,w,c
   846  00069C  1056               	iorwf	(main@controle+1)^0,w,c
   847  00069E  B4D8               	btfsc	status,2,c
   848  0006A0  EF54  F003         	goto	u3031
   849  0006A4  EF56  F003         	goto	u3030
   850  0006A8                     u3031:
   851  0006A8  EFA7  F003         	goto	l3253
   852  0006AC                     u3030:
   853  0006AC                     
   854                           ;main.c: 48:                     if(v==600){
   855  0006AC  0E58               	movlw	88
   856  0006AE  185B               	xorwf	main@v^0,w,c
   857  0006B0  E107               	bnz	u3041
   858  0006B2  0E02               	movlw	2
   859  0006B4  185C               	xorwf	(main@v+1)^0,w,c
   860  0006B6  A4D8               	btfss	status,2,c
   861  0006B8  EF60  F003         	goto	u3041
   862  0006BC  EF62  F003         	goto	u3040
   863  0006C0                     u3041:
   864  0006C0  EF9E  F003         	goto	l3249
   865  0006C4                     u3040:
   866  0006C4                     
   867                           ;main.c: 49:                         controle = 0;
   868  0006C4  0E00               	movlw	0
   869  0006C6  6E56               	movwf	(main@controle+1)^0,c
   870  0006C8  0E00               	movlw	0
   871  0006CA  6E55               	movwf	main@controle^0,c
   872                           
   873                           ;main.c: 50:                         v = 0;
   874  0006CC  0E00               	movlw	0
   875  0006CE  6E5C               	movwf	(main@v+1)^0,c
   876  0006D0  0E00               	movlw	0
   877  0006D2  6E5B               	movwf	main@v^0,c
   878  0006D4                     
   879                           ;main.c: 51:                         desenhoOff();
   880  0006D4  EC06  F012         	call	_desenhoOff	;wreg free
   881  0006D8                     
   882                           ;main.c: 52:                         pwmSet(100);
   883  0006D8  0E64               	movlw	100
   884  0006DA  EC06  F00F         	call	_pwmSet
   885  0006DE                     
   886                           ;main.c: 53:                         atraso_ms(1000);
   887  0006DE  0E03               	movlw	3
   888  0006E0  6E02               	movwf	(atraso_ms@num+1)^0,c
   889  0006E2  0EE8               	movlw	232
   890  0006E4  6E01               	movwf	atraso_ms@num^0,c
   891  0006E6  EC3C  F00F         	call	_atraso_ms	;wreg free
   892  0006EA                     
   893                           ;main.c: 54:                         pwmSet(0);
   894  0006EA  0E00               	movlw	0
   895  0006EC  EC06  F00F         	call	_pwmSet
   896  0006F0                     
   897                           ;main.c: 55:                         atraso_ms(1000);
   898  0006F0  0E03               	movlw	3
   899  0006F2  6E02               	movwf	(atraso_ms@num+1)^0,c
   900  0006F4  0EE8               	movlw	232
   901  0006F6  6E01               	movwf	atraso_ms@num^0,c
   902  0006F8  EC3C  F00F         	call	_atraso_ms	;wreg free
   903  0006FC                     
   904                           ;main.c: 56:                         pwmSet(100);
   905  0006FC  0E64               	movlw	100
   906  0006FE  EC06  F00F         	call	_pwmSet
   907  000702                     
   908                           ;main.c: 57:                         atraso_ms(1000);
   909  000702  0E03               	movlw	3
   910  000704  6E02               	movwf	(atraso_ms@num+1)^0,c
   911  000706  0EE8               	movlw	232
   912  000708  6E01               	movwf	atraso_ms@num^0,c
   913  00070A  EC3C  F00F         	call	_atraso_ms	;wreg free
   914  00070E                     
   915                           ;main.c: 58:                         pwmSet(0);
   916  00070E  0E00               	movlw	0
   917  000710  EC06  F00F         	call	_pwmSet
   918  000714                     
   919                           ;main.c: 59:                         atraso_ms(1000);
   920  000714  0E03               	movlw	3
   921  000716  6E02               	movwf	(atraso_ms@num+1)^0,c
   922  000718  0EE8               	movlw	232
   923  00071A  6E01               	movwf	atraso_ms@num^0,c
   924  00071C  EC3C  F00F         	call	_atraso_ms	;wreg free
   925  000720                     
   926                           ;main.c: 60:                         pwmSet(100);
   927  000720  0E64               	movlw	100
   928  000722  EC06  F00F         	call	_pwmSet
   929  000726                     
   930                           ;main.c: 61:                         atraso_ms(1000);
   931  000726  0E03               	movlw	3
   932  000728  6E02               	movwf	(atraso_ms@num+1)^0,c
   933  00072A  0EE8               	movlw	232
   934  00072C  6E01               	movwf	atraso_ms@num^0,c
   935  00072E  EC3C  F00F         	call	_atraso_ms	;wreg free
   936  000732                     
   937                           ;main.c: 62:                         pwmSet(0);
   938  000732  0E00               	movlw	0
   939  000734  EC06  F00F         	call	_pwmSet
   940                           
   941                           ;main.c: 63:                     }
   942  000738  EFA7  F003         	goto	l3253
   943  00073C                     l3249:
   944                           
   945                           ;main.c: 65:                         v--;
   946  00073C  065B               	decf	main@v^0,f,c
   947  00073E  A0D8               	btfss	status,0,c
   948  000740  065C               	decf	(main@v+1)^0,f,c
   949  000742                     
   950                           ;main.c: 66:                         atraso_ms(100);
   951  000742  0E00               	movlw	0
   952  000744  6E02               	movwf	(atraso_ms@num+1)^0,c
   953  000746  0E64               	movlw	100
   954  000748  6E01               	movwf	atraso_ms@num^0,c
   955  00074A  EC3C  F00F         	call	_atraso_ms	;wreg free
   956  00074E                     l3253:
   957                           
   958                           ;main.c: 69:                 slot = 1;
   959  00074E  0E01               	movlw	1
   960  000750  6E59               	movwf	main@slot^0,c
   961                           
   962                           ;main.c: 70:             break;
   963  000752  EFD7  F005         	goto	l3363
   964  000756                     l3255:
   965                           
   966                           ;main.c: 73:                 ssdDigit(((v/600) %10), 3);
   967  000756  0E03               	movlw	3
   968  000758  6E19               	movwf	ssdDigit@pos^0,c
   969  00075A  0E02               	movlw	2
   970  00075C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   971  00075E  0E58               	movlw	88
   972  000760  6E03               	movwf	___lwdiv@divisor^0,c
   973  000762  C05B  F001         	movff	main@v,___lwdiv@dividend
   974  000766  C05C  F002         	movff	main@v+1,___lwdiv@dividend+1
   975  00076A  ECCC  F00E         	call	___lwdiv	;wreg free
   976  00076E  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   977  000772  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   978  000776  0E00               	movlw	0
   979  000778  6E0B               	movwf	(___lwmod@divisor+1)^0,c
   980  00077A  0E0A               	movlw	10
   981  00077C  6E0A               	movwf	___lwmod@divisor^0,c
   982  00077E  EC6E  F00F         	call	___lwmod	;wreg free
   983  000782  5008               	movf	?___lwmod^0,w,c
   984  000784  ECCD  F00F         	call	_ssdDigit
   985                           
   986                           ;main.c: 74:                 ssdDigit(((v/6000)%6), 2);
   987  000788  0E02               	movlw	2
   988  00078A  6E19               	movwf	ssdDigit@pos^0,c
   989  00078C  0E17               	movlw	23
   990  00078E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   991  000790  0E70               	movlw	112
   992  000792  6E03               	movwf	___lwdiv@divisor^0,c
   993  000794  C05B  F001         	movff	main@v,___lwdiv@dividend
   994  000798  C05C  F002         	movff	main@v+1,___lwdiv@dividend+1
   995  00079C  ECCC  F00E         	call	___lwdiv	;wreg free
   996  0007A0  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   997  0007A4  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   998  0007A8  0E00               	movlw	0
   999  0007AA  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1000  0007AC  0E06               	movlw	6
  1001  0007AE  6E0A               	movwf	___lwmod@divisor^0,c
  1002  0007B0  EC6E  F00F         	call	___lwmod	;wreg free
  1003  0007B4  5008               	movf	?___lwmod^0,w,c
  1004  0007B6  ECCD  F00F         	call	_ssdDigit
  1005                           
  1006                           ;main.c: 75:                 ssdDigit((((v/36000)%24)%10), 1);
  1007  0007BA  0E18               	movlw	24
  1008  0007BC  6E13               	movwf	___almod@divisor^0,c
  1009  0007BE  0E00               	movlw	0
  1010  0007C0  6E14               	movwf	(___almod@divisor+1)^0,c
  1011  0007C2  0E00               	movlw	0
  1012  0007C4  6E15               	movwf	(___almod@divisor+2)^0,c
  1013  0007C6  0E00               	movlw	0
  1014  0007C8  6E16               	movwf	(___almod@divisor+3)^0,c
  1015  0007CA  0EA0               	movlw	160
  1016  0007CC  6E05               	movwf	___aldiv@divisor^0,c
  1017  0007CE  0E8C               	movlw	140
  1018  0007D0  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1019  0007D2  0E00               	movlw	0
  1020  0007D4  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1021  0007D6  0E00               	movlw	0
  1022  0007D8  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1023  0007DA  C05B  F001         	movff	main@v,___aldiv@dividend
  1024  0007DE  C05C  F002         	movff	main@v+1,___aldiv@dividend+1
  1025  0007E2  6A03               	clrf	(___aldiv@dividend+2)^0,c
  1026  0007E4  6A04               	clrf	(___aldiv@dividend+3)^0,c
  1027  0007E6  EC62  F00C         	call	___aldiv	;wreg free
  1028  0007EA  C001  F00F         	movff	?___aldiv,___almod@dividend
  1029  0007EE  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  1030  0007F2  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  1031  0007F6  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  1032  0007FA  ECE8  F00C         	call	___almod	;wreg free
  1033  0007FE  C00F  F049         	movff	?___almod,_main$1284
  1034  000802  C010  F04A         	movff	?___almod+1,_main$1284+1
  1035  000806  C011  F04B         	movff	?___almod+2,_main$1284+2
  1036  00080A  C012  F04C         	movff	?___almod+3,_main$1284+3
  1037                           
  1038                           ;main.c: 75:                 ssdDigit((((v/36000)%24)%10), 1);
  1039  00080E  0E01               	movlw	1
  1040  000810  6E19               	movwf	ssdDigit@pos^0,c
  1041  000812  C049  F00F         	movff	_main$1284,___almod@dividend
  1042  000816  C04A  F010         	movff	_main$1284+1,___almod@dividend+1
  1043  00081A  C04B  F011         	movff	_main$1284+2,___almod@dividend+2
  1044  00081E  C04C  F012         	movff	_main$1284+3,___almod@dividend+3
  1045  000822  0E0A               	movlw	10
  1046  000824  6E13               	movwf	___almod@divisor^0,c
  1047  000826  0E00               	movlw	0
  1048  000828  6E14               	movwf	(___almod@divisor+1)^0,c
  1049  00082A  0E00               	movlw	0
  1050  00082C  6E15               	movwf	(___almod@divisor+2)^0,c
  1051  00082E  0E00               	movlw	0
  1052  000830  6E16               	movwf	(___almod@divisor+3)^0,c
  1053  000832  ECE8  F00C         	call	___almod	;wreg free
  1054  000836  500F               	movf	?___almod^0,w,c
  1055  000838  ECCD  F00F         	call	_ssdDigit
  1056                           
  1057                           ;main.c: 76:                 ssdDigit((((v/36000)%24)/10), 0);
  1058  00083C  0E18               	movlw	24
  1059  00083E  6E13               	movwf	___almod@divisor^0,c
  1060  000840  0E00               	movlw	0
  1061  000842  6E14               	movwf	(___almod@divisor+1)^0,c
  1062  000844  0E00               	movlw	0
  1063  000846  6E15               	movwf	(___almod@divisor+2)^0,c
  1064  000848  0E00               	movlw	0
  1065  00084A  6E16               	movwf	(___almod@divisor+3)^0,c
  1066  00084C  0EA0               	movlw	160
  1067  00084E  6E05               	movwf	___aldiv@divisor^0,c
  1068  000850  0E8C               	movlw	140
  1069  000852  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1070  000854  0E00               	movlw	0
  1071  000856  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1072  000858  0E00               	movlw	0
  1073  00085A  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1074  00085C  C05B  F001         	movff	main@v,___aldiv@dividend
  1075  000860  C05C  F002         	movff	main@v+1,___aldiv@dividend+1
  1076  000864  6A03               	clrf	(___aldiv@dividend+2)^0,c
  1077  000866  6A04               	clrf	(___aldiv@dividend+3)^0,c
  1078  000868  EC62  F00C         	call	___aldiv	;wreg free
  1079  00086C  C001  F00F         	movff	?___aldiv,___almod@dividend
  1080  000870  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  1081  000874  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  1082  000878  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  1083  00087C  ECE8  F00C         	call	___almod	;wreg free
  1084  000880  C00F  F04D         	movff	?___almod,_main$1285
  1085  000884  C010  F04E         	movff	?___almod+1,_main$1285+1
  1086  000888  C011  F04F         	movff	?___almod+2,_main$1285+2
  1087  00088C  C012  F050         	movff	?___almod+3,_main$1285+3
  1088                           
  1089                           ;main.c: 76:                 ssdDigit((((v/36000)%24)/10), 0);
  1090  000890  0E00               	movlw	0
  1091  000892  6E19               	movwf	ssdDigit@pos^0,c
  1092  000894  C04D  F001         	movff	_main$1285,___aldiv@dividend
  1093  000898  C04E  F002         	movff	_main$1285+1,___aldiv@dividend+1
  1094  00089C  C04F  F003         	movff	_main$1285+2,___aldiv@dividend+2
  1095  0008A0  C050  F004         	movff	_main$1285+3,___aldiv@dividend+3
  1096  0008A4  0E0A               	movlw	10
  1097  0008A6  6E05               	movwf	___aldiv@divisor^0,c
  1098  0008A8  0E00               	movlw	0
  1099  0008AA  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1100  0008AC  0E00               	movlw	0
  1101  0008AE  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1102  0008B0  0E00               	movlw	0
  1103  0008B2  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1104  0008B4  EC62  F00C         	call	___aldiv	;wreg free
  1105  0008B8  5001               	movf	?___aldiv^0,w,c
  1106  0008BA  ECCD  F00F         	call	_ssdDigit
  1107  0008BE                     
  1108                           ;main.c: 77:                 slot = 2;
  1109  0008BE  0E02               	movlw	2
  1110  0008C0  6E59               	movwf	main@slot^0,c
  1111                           
  1112                           ;main.c: 78:             break;
  1113  0008C2  EFD7  F005         	goto	l3363
  1114  0008C6                     l3259:
  1115                           
  1116                           ;main.c: 81:                 lcdPosition(0,0);
  1117  0008C6  0E00               	movlw	0
  1118  0008C8  6E10               	movwf	(lcdPosition@line+1)^0,c
  1119  0008CA  0E00               	movlw	0
  1120  0008CC  6E0F               	movwf	lcdPosition@line^0,c
  1121  0008CE  0E00               	movlw	0
  1122  0008D0  6E12               	movwf	(lcdPosition@col+1)^0,c
  1123  0008D2  0E00               	movlw	0
  1124  0008D4  6E11               	movwf	lcdPosition@col^0,c
  1125  0008D6  EC2D  F011         	call	_lcdPosition	;wreg free
  1126                           
  1127                           ;main.c: 82:                 lcdChar(((temp/10)%10) + 48);
  1128  0008DA  0E00               	movlw	0
  1129  0008DC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1130  0008DE  0E0A               	movlw	10
  1131  0008E0  6E03               	movwf	___awdiv@divisor^0,c
  1132  0008E2  C05A  F001         	movff	main@temp,___awdiv@dividend
  1133  0008E6  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1134  0008E8  EC5E  F00D         	call	___awdiv	;wreg free
  1135  0008EC  C001  F009         	movff	?___awdiv,___awmod@dividend
  1136  0008F0  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1137  0008F4  0E00               	movlw	0
  1138  0008F6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1139  0008F8  0E0A               	movlw	10
  1140  0008FA  6E0B               	movwf	___awmod@divisor^0,c
  1141  0008FC  EC74  F00E         	call	___awmod	;wreg free
  1142  000900  5009               	movf	?___awmod^0,w,c
  1143  000902  0F30               	addlw	48
  1144  000904  EC27  F012         	call	_lcdChar
  1145                           
  1146                           ;main.c: 83:                 lcdChar ((temp %10) + 48);
  1147  000908  C05A  F009         	movff	main@temp,___awmod@dividend
  1148  00090C  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1149  00090E  0E00               	movlw	0
  1150  000910  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1151  000912  0E0A               	movlw	10
  1152  000914  6E0B               	movwf	___awmod@divisor^0,c
  1153  000916  EC74  F00E         	call	___awmod	;wreg free
  1154  00091A  5009               	movf	?___awmod^0,w,c
  1155  00091C  0F30               	addlw	48
  1156  00091E  EC27  F012         	call	_lcdChar
  1157  000922                     
  1158                           ;main.c: 84:                 slot = 3;
  1159  000922  0E03               	movlw	3
  1160  000924  6E59               	movwf	main@slot^0,c
  1161                           
  1162                           ;main.c: 85:             break;
  1163  000926  EFD7  F005         	goto	l3363
  1164  00092A                     l3263:
  1165                           
  1166                           ;main.c: 88:                 kpDebounce();
  1167  00092A  ECC7  F00B         	call	_kpDebounce	;wreg free
  1168                           
  1169                           ;main.c: 89:                 if (kpRead() != tecla) {
  1170  00092E  EC62  F012         	call	_kpRead	;wreg free
  1171  000932  505D               	movf	main@tecla^0,w,c
  1172  000934  1801               	xorwf	?_kpRead^0,w,c
  1173  000936  E109               	bnz	u3050
  1174  000938  505E               	movf	(main@tecla+1)^0,w,c
  1175  00093A  1802               	xorwf	(?_kpRead+1)^0,w,c
  1176  00093C  B4D8               	btfsc	status,2,c
  1177  00093E  EFA3  F004         	goto	u3051
  1178  000942  EFA5  F004         	goto	u3050
  1179  000946                     u3051:
  1180  000946  EF90  F005         	goto	l3345
  1181  00094A                     u3050:
  1182  00094A                     
  1183                           ;main.c: 90:                     tecla = kpRead();
  1184  00094A  EC62  F012         	call	_kpRead	;wreg free
  1185  00094E  C001  F05D         	movff	?_kpRead,main@tecla
  1186  000952  C002  F05E         	movff	?_kpRead+1,main@tecla+1
  1187  000956                     
  1188                           ;main.c: 92:                     if (((tecla) & (1<<(0)))) {
  1189  000956  A05D               	btfss	main@tecla^0,0,c
  1190  000958  EFB0  F004         	goto	u3061
  1191  00095C  EFB2  F004         	goto	u3060
  1192  000960                     u3061:
  1193  000960  EFCA  F004         	goto	l453
  1194  000964                     u3060:
  1195  000964                     
  1196                           ;main.c: 93:                         pwmSet(100);
  1197  000964  0E64               	movlw	100
  1198  000966  EC06  F00F         	call	_pwmSet
  1199  00096A                     
  1200                           ;main.c: 94:                         atraso_ms(50);
  1201  00096A  0E00               	movlw	0
  1202  00096C  6E02               	movwf	(atraso_ms@num+1)^0,c
  1203  00096E  0E32               	movlw	50
  1204  000970  6E01               	movwf	atraso_ms@num^0,c
  1205  000972  EC3C  F00F         	call	_atraso_ms	;wreg free
  1206  000976                     
  1207                           ;main.c: 95:                         pwmSet(0);
  1208  000976  0E00               	movlw	0
  1209  000978  EC06  F00F         	call	_pwmSet
  1210  00097C                     
  1211                           ;main.c: 96:                         if(temp != 30){
  1212  00097C  0E1E               	movlw	30
  1213  00097E  185A               	xorwf	main@temp^0,w,c
  1214  000980  B4D8               	btfsc	status,2,c
  1215  000982  EFC5  F004         	goto	u3071
  1216  000986  EFC7  F004         	goto	u3070
  1217  00098A                     u3071:
  1218  00098A  EF90  F005         	goto	l3345
  1219  00098E                     u3070:
  1220  00098E                     
  1221                           ;main.c: 97:                             temp++;
  1222  00098E  2A5A               	incf	main@temp^0,f,c
  1223  000990  EF90  F005         	goto	l3345
  1224  000994                     l453:
  1225  000994  A25D               	btfss	main@tecla^0,1,c
  1226  000996  EFCF  F004         	goto	u3081
  1227  00099A  EFD1  F004         	goto	u3080
  1228  00099E                     u3081:
  1229  00099E  EFF6  F004         	goto	l456
  1230  0009A2                     u3080:
  1231  0009A2                     
  1232                           ;main.c: 102:                         pwmSet(100);
  1233  0009A2  0E64               	movlw	100
  1234  0009A4  EC06  F00F         	call	_pwmSet
  1235  0009A8                     
  1236                           ;main.c: 103:                         atraso_ms(50);
  1237  0009A8  0E00               	movlw	0
  1238  0009AA  6E02               	movwf	(atraso_ms@num+1)^0,c
  1239  0009AC  0E32               	movlw	50
  1240  0009AE  6E01               	movwf	atraso_ms@num^0,c
  1241  0009B0  EC3C  F00F         	call	_atraso_ms	;wreg free
  1242  0009B4                     
  1243                           ;main.c: 104:                         pwmSet(0);
  1244  0009B4  0E00               	movlw	0
  1245  0009B6  EC06  F00F         	call	_pwmSet
  1246  0009BA                     
  1247                           ;main.c: 105:                         desenhoOn();
  1248  0009BA  EC7B  F011         	call	_desenhoOn	;wreg free
  1249  0009BE                     
  1250                           ;main.c: 106:                         controle = 1;
  1251  0009BE  0E00               	movlw	0
  1252  0009C0  6E56               	movwf	(main@controle+1)^0,c
  1253  0009C2  0E01               	movlw	1
  1254  0009C4  6E55               	movwf	main@controle^0,c
  1255  0009C6                     
  1256                           ;main.c: 107:                         if(d==0){
  1257  0009C6  5053               	movf	main@d^0,w,c
  1258  0009C8  1054               	iorwf	(main@d+1)^0,w,c
  1259  0009CA  A4D8               	btfss	status,2,c
  1260  0009CC  EFEA  F004         	goto	u3091
  1261  0009D0  EFEC  F004         	goto	u3090
  1262  0009D4                     u3091:
  1263  0009D4  EF90  F005         	goto	l3345
  1264  0009D8                     u3090:
  1265  0009D8                     
  1266                           ;main.c: 108:                             v+=600;
  1267  0009D8  0E58               	movlw	88
  1268  0009DA  265B               	addwf	main@v^0,f,c
  1269  0009DC  0E02               	movlw	2
  1270  0009DE  225C               	addwfc	(main@v+1)^0,f,c
  1271  0009E0                     
  1272                           ;main.c: 109:                             d=1;
  1273  0009E0  0E00               	movlw	0
  1274  0009E2  6E54               	movwf	(main@d+1)^0,c
  1275  0009E4  0E01               	movlw	1
  1276  0009E6  6E53               	movwf	main@d^0,c
  1277  0009E8  EF90  F005         	goto	l3345
  1278  0009EC                     l456:
  1279  0009EC  A45D               	btfss	main@tecla^0,2,c
  1280  0009EE  EFFB  F004         	goto	u3101
  1281  0009F2  EFFD  F004         	goto	u3100
  1282  0009F6                     u3101:
  1283  0009F6  EF15  F005         	goto	l459
  1284  0009FA                     u3100:
  1285  0009FA                     
  1286                           ;main.c: 114:                         pwmSet(100);
  1287  0009FA  0E64               	movlw	100
  1288  0009FC  EC06  F00F         	call	_pwmSet
  1289  000A00                     
  1290                           ;main.c: 115:                         atraso_ms(50);
  1291  000A00  0E00               	movlw	0
  1292  000A02  6E02               	movwf	(atraso_ms@num+1)^0,c
  1293  000A04  0E32               	movlw	50
  1294  000A06  6E01               	movwf	atraso_ms@num^0,c
  1295  000A08  EC3C  F00F         	call	_atraso_ms	;wreg free
  1296  000A0C                     
  1297                           ;main.c: 116:                         pwmSet(0);
  1298  000A0C  0E00               	movlw	0
  1299  000A0E  EC06  F00F         	call	_pwmSet
  1300  000A12                     
  1301                           ;main.c: 117:                         if(temp != 15){
  1302  000A12  0E0F               	movlw	15
  1303  000A14  185A               	xorwf	main@temp^0,w,c
  1304  000A16  B4D8               	btfsc	status,2,c
  1305  000A18  EF10  F005         	goto	u3111
  1306  000A1C  EF12  F005         	goto	u3110
  1307  000A20                     u3111:
  1308  000A20  EF90  F005         	goto	l3345
  1309  000A24                     u3110:
  1310  000A24                     
  1311                           ;main.c: 118:                             temp--;
  1312  000A24  065A               	decf	main@temp^0,f,c
  1313  000A26  EF90  F005         	goto	l3345
  1314  000A2A                     l459:
  1315  000A2A  A65D               	btfss	main@tecla^0,3,c
  1316  000A2C  EF1A  F005         	goto	u3121
  1317  000A30  EF1C  F005         	goto	u3120
  1318  000A34                     u3121:
  1319  000A34  EF30  F005         	goto	l462
  1320  000A38                     u3120:
  1321  000A38                     
  1322                           ;main.c: 123:                         pwmSet(100);
  1323  000A38  0E64               	movlw	100
  1324  000A3A  EC06  F00F         	call	_pwmSet
  1325  000A3E                     
  1326                           ;main.c: 124:                         atraso_ms(50);
  1327  000A3E  0E00               	movlw	0
  1328  000A40  6E02               	movwf	(atraso_ms@num+1)^0,c
  1329  000A42  0E32               	movlw	50
  1330  000A44  6E01               	movwf	atraso_ms@num^0,c
  1331  000A46  EC3C  F00F         	call	_atraso_ms	;wreg free
  1332  000A4A                     
  1333                           ;main.c: 125:                         pwmSet(0);
  1334  000A4A  0E00               	movlw	0
  1335  000A4C  EC06  F00F         	call	_pwmSet
  1336  000A50                     
  1337                           ;main.c: 126:                         desenhoOff();
  1338  000A50  EC06  F012         	call	_desenhoOff	;wreg free
  1339  000A54                     
  1340                           ;main.c: 127:                         controle = 0;
  1341  000A54  0E00               	movlw	0
  1342  000A56  6E56               	movwf	(main@controle+1)^0,c
  1343  000A58  0E00               	movlw	0
  1344  000A5A  6E55               	movwf	main@controle^0,c
  1345                           
  1346                           ;main.c: 128:                     }
  1347  000A5C  EF90  F005         	goto	l3345
  1348  000A60                     l462:
  1349  000A60  A85D               	btfss	main@tecla^0,4,c
  1350  000A62  EF35  F005         	goto	u3131
  1351  000A66  EF37  F005         	goto	u3130
  1352  000A6A                     u3131:
  1353  000A6A  EF57  F005         	goto	l464
  1354  000A6E                     u3130:
  1355  000A6E                     
  1356                           ;main.c: 131:                         pwmSet(100);
  1357  000A6E  0E64               	movlw	100
  1358  000A70  EC06  F00F         	call	_pwmSet
  1359  000A74                     
  1360                           ;main.c: 132:                         atraso_ms(50);
  1361  000A74  0E00               	movlw	0
  1362  000A76  6E02               	movwf	(atraso_ms@num+1)^0,c
  1363  000A78  0E32               	movlw	50
  1364  000A7A  6E01               	movwf	atraso_ms@num^0,c
  1365  000A7C  EC3C  F00F         	call	_atraso_ms	;wreg free
  1366  000A80                     
  1367                           ;main.c: 133:                         pwmSet(0);
  1368  000A80  0E00               	movlw	0
  1369  000A82  EC06  F00F         	call	_pwmSet
  1370  000A86                     
  1371                           ;main.c: 134:                         if(m == 3){
  1372  000A86  0E03               	movlw	3
  1373  000A88  1857               	xorwf	main@m^0,w,c
  1374  000A8A  1058               	iorwf	(main@m+1)^0,w,c
  1375  000A8C  A4D8               	btfss	status,2,c
  1376  000A8E  EF4B  F005         	goto	u3141
  1377  000A92  EF4D  F005         	goto	u3140
  1378  000A96                     u3141:
  1379  000A96  EF53  F005         	goto	l3325
  1380  000A9A                     u3140:
  1381  000A9A                     
  1382                           ;main.c: 135:                             m = 0;
  1383  000A9A  0E00               	movlw	0
  1384  000A9C  6E58               	movwf	(main@m+1)^0,c
  1385  000A9E  0E00               	movlw	0
  1386  000AA0  6E57               	movwf	main@m^0,c
  1387                           
  1388                           ;main.c: 136:                         }
  1389  000AA2  EF90  F005         	goto	l3345
  1390  000AA6                     l3325:
  1391                           
  1392                           ;main.c: 138:                           m++;
  1393  000AA6  4A57               	infsnz	main@m^0,f,c
  1394  000AA8  2A58               	incf	(main@m+1)^0,f,c
  1395  000AAA  EF90  F005         	goto	l3345
  1396  000AAE                     l464:
  1397  000AAE  AA5D               	btfss	main@tecla^0,5,c
  1398  000AB0  EF5C  F005         	goto	u3151
  1399  000AB4  EF5E  F005         	goto	u3150
  1400  000AB8                     u3151:
  1401  000AB8  EF70  F005         	goto	l468
  1402  000ABC                     u3150:
  1403  000ABC                     
  1404                           ;main.c: 143:                         pwmSet(100);
  1405  000ABC  0E64               	movlw	100
  1406  000ABE  EC06  F00F         	call	_pwmSet
  1407  000AC2                     
  1408                           ;main.c: 144:                         atraso_ms(50);
  1409  000AC2  0E00               	movlw	0
  1410  000AC4  6E02               	movwf	(atraso_ms@num+1)^0,c
  1411  000AC6  0E32               	movlw	50
  1412  000AC8  6E01               	movwf	atraso_ms@num^0,c
  1413  000ACA  EC3C  F00F         	call	_atraso_ms	;wreg free
  1414  000ACE                     
  1415                           ;main.c: 145:                         pwmSet(0);
  1416  000ACE  0E00               	movlw	0
  1417  000AD0  EC06  F00F         	call	_pwmSet
  1418  000AD4                     
  1419                           ;main.c: 146:                         v+=3000;
  1420  000AD4  0EB8               	movlw	184
  1421  000AD6  265B               	addwf	main@v^0,f,c
  1422  000AD8  0E0B               	movlw	11
  1423  000ADA  225C               	addwfc	(main@v+1)^0,f,c
  1424                           
  1425                           ;main.c: 147:                     }
  1426  000ADC  EF90  F005         	goto	l3345
  1427  000AE0                     l468:
  1428  000AE0  AE5D               	btfss	main@tecla^0,7,c
  1429  000AE2  EF75  F005         	goto	u3161
  1430  000AE6  EF77  F005         	goto	u3160
  1431  000AEA                     u3161:
  1432  000AEA  EF90  F005         	goto	l3345
  1433  000AEE                     u3160:
  1434  000AEE                     
  1435                           ;main.c: 150:                         pwmSet(100);
  1436  000AEE  0E64               	movlw	100
  1437  000AF0  EC06  F00F         	call	_pwmSet
  1438  000AF4                     
  1439                           ;main.c: 151:                         atraso_ms(50);
  1440  000AF4  0E00               	movlw	0
  1441  000AF6  6E02               	movwf	(atraso_ms@num+1)^0,c
  1442  000AF8  0E32               	movlw	50
  1443  000AFA  6E01               	movwf	atraso_ms@num^0,c
  1444  000AFC  EC3C  F00F         	call	_atraso_ms	;wreg free
  1445  000B00                     
  1446                           ;main.c: 152:                         pwmSet(0);
  1447  000B00  0E00               	movlw	0
  1448  000B02  EC06  F00F         	call	_pwmSet
  1449  000B06                     
  1450                           ;main.c: 153:                         if(v != 0){
  1451  000B06  505B               	movf	main@v^0,w,c
  1452  000B08  105C               	iorwf	(main@v+1)^0,w,c
  1453  000B0A  B4D8               	btfsc	status,2,c
  1454  000B0C  EF8A  F005         	goto	u3171
  1455  000B10  EF8C  F005         	goto	u3170
  1456  000B14                     u3171:
  1457  000B14  EF90  F005         	goto	l3345
  1458  000B18                     u3170:
  1459  000B18                     
  1460                           ;main.c: 154:                             v-=3000;
  1461  000B18  0EB8               	movlw	184
  1462  000B1A  5E5B               	subwf	main@v^0,f,c
  1463  000B1C  0E0B               	movlw	11
  1464  000B1E  5A5C               	subwfb	(main@v+1)^0,f,c
  1465  000B20                     l3345:
  1466                           
  1467                           ;main.c: 158:                 slot = 4;
  1468  000B20  0E04               	movlw	4
  1469  000B22  6E59               	movwf	main@slot^0,c
  1470                           
  1471                           ;main.c: 159:             break;
  1472  000B24  EFD7  F005         	goto	l3363
  1473  000B28                     l3347:
  1474                           
  1475                           ;main.c: 162:                 vel = adcRead(0);
  1476  000B28  0E00               	movlw	0
  1477  000B2A  6E02               	movwf	(adcRead@channel+1)^0,c
  1478  000B2C  0E00               	movlw	0
  1479  000B2E  6E01               	movwf	adcRead@channel^0,c
  1480  000B30  EC7A  F010         	call	_adcRead	;wreg free
  1481  000B34  C001  F051         	movff	?_adcRead,main@vel
  1482  000B38  C002  F052         	movff	?_adcRead+1,main@vel+1
  1483  000B3C                     
  1484                           ;main.c: 163:                 velocidade(vel);
  1485  000B3C  C051  F015         	movff	main@vel,velocidade@vel
  1486  000B40  C052  F016         	movff	main@vel+1,velocidade@vel+1
  1487  000B44  EC97  F009         	call	_velocidade	;wreg free
  1488  000B48                     
  1489                           ;main.c: 164:                 slot = 5;
  1490  000B48  0E05               	movlw	5
  1491  000B4A  6E59               	movwf	main@slot^0,c
  1492                           
  1493                           ;main.c: 165:             break;
  1494  000B4C  EFD7  F005         	goto	l3363
  1495  000B50                     l3353:
  1496                           
  1497                           ;main.c: 168:                 modo(m);
  1498  000B50  C057  F015         	movff	main@m,modo@m
  1499  000B54  C058  F016         	movff	main@m+1,modo@m+1
  1500  000B58  ECC0  F00D         	call	_modo	;wreg free
  1501  000B5C                     l3355:
  1502                           
  1503                           ;main.c: 169:                 slot = 0;
  1504  000B5C  0E00               	movlw	0
  1505  000B5E  6E59               	movwf	main@slot^0,c
  1506                           
  1507                           ;main.c: 170:             break;
  1508  000B60  EFD7  F005         	goto	l3363
  1509  000B64                     l3361:
  1510  000B64  5059               	movf	main@slot^0,w,c
  1511  000B66  6E47               	movwf	??_main^0,c
  1512  000B68  6A48               	clrf	(??_main+1)^0,c
  1513                           
  1514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1515                           ; Switch size 1, requested type "simple"
  1516                           ; Number of cases is 1, Range of values is 0 to 0
  1517                           ; switch strategies available:
  1518                           ; Name         Instructions Cycles
  1519                           ; simple_byte            4     3 (average)
  1520                           ;	Chosen strategy is simple_byte
  1521  000B6A  5048               	movf	(??_main+1)^0,w,c
  1522  000B6C  0A00               	xorlw	0	; case 0
  1523  000B6E  B4D8               	btfsc	status,2,c
  1524  000B70  EFBC  F005         	goto	l3383
  1525  000B74  EFAE  F005         	goto	l3355
  1526  000B78                     l3383:
  1527                           
  1528                           ; Switch size 1, requested type "simple"
  1529                           ; Number of cases is 6, Range of values is 0 to 5
  1530                           ; switch strategies available:
  1531                           ; Name         Instructions Cycles
  1532                           ; simple_byte           19    10 (average)
  1533                           ;	Chosen strategy is simple_byte
  1534  000B78  5047               	movf	??_main^0,w,c
  1535  000B7A  0A00               	xorlw	0	; case 0
  1536  000B7C  B4D8               	btfsc	status,2,c
  1537  000B7E  EF4D  F003         	goto	l3219
  1538  000B82  0A01               	xorlw	1	; case 1
  1539  000B84  B4D8               	btfsc	status,2,c
  1540  000B86  EFAB  F003         	goto	l3255
  1541  000B8A  0A03               	xorlw	3	; case 2
  1542  000B8C  B4D8               	btfsc	status,2,c
  1543  000B8E  EF63  F004         	goto	l3259
  1544  000B92  0A01               	xorlw	1	; case 3
  1545  000B94  B4D8               	btfsc	status,2,c
  1546  000B96  EF95  F004         	goto	l3263
  1547  000B9A  0A07               	xorlw	7	; case 4
  1548  000B9C  B4D8               	btfsc	status,2,c
  1549  000B9E  EF94  F005         	goto	l3347
  1550  000BA2  0A01               	xorlw	1	; case 5
  1551  000BA4  B4D8               	btfsc	status,2,c
  1552  000BA6  EFA8  F005         	goto	l3353
  1553  000BAA  EFAE  F005         	goto	l3355
  1554  000BAE                     l3363:
  1555                           
  1556                           ;main.c: 176:         ssdUpdate();
  1557  000BAE  EC5C  F00A         	call	_ssdUpdate	;wreg free
  1558  000BB2                     
  1559                           ;main.c: 177:         timerWait();
  1560  000BB2  EC5A  F012         	call	_timerWait	;wreg free
  1561                           
  1562                           ;main.c: 178:     }
  1563  000BB6  EF45  F003         	goto	l3217
  1564  000BBA  EF00  F000         	goto	start
  1565  000BBE                     __end_of_main:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _velocidade *****************
  1569 ;; Defined at:
  1570 ;;		line 5 in file "velocidade.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  vel             2   20[COMRAM] int 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1584 ;;      Params:         2       0       0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0
  1587 ;;      Totals:         2       0       0       0       0       0       0
  1588 ;;Total ram usage:        2 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 6
  1591 ;; This function calls:
  1592 ;;		_lcdChar
  1593 ;;		_lcdPosition
  1594 ;;		_lcdString
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text1
  1601  00132E                     __ptext1:
  1602                           	callstack 0
  1603  00132E                     _velocidade:
  1604                           	callstack 24
  1605  00132E                     
  1606                           ;velocidade.c: 6:     lcdPosition(1,0);
  1607  00132E  0E00               	movlw	0
  1608  001330  6E10               	movwf	(lcdPosition@line+1)^0,c
  1609  001332  0E01               	movlw	1
  1610  001334  6E0F               	movwf	lcdPosition@line^0,c
  1611  001336  0E00               	movlw	0
  1612  001338  6E12               	movwf	(lcdPosition@col+1)^0,c
  1613  00133A  0E00               	movlw	0
  1614  00133C  6E11               	movwf	lcdPosition@col^0,c
  1615  00133E  EC2D  F011         	call	_lcdPosition	;wreg free
  1616  001342                     
  1617                           ;velocidade.c: 8:         if(vel>768){
  1618  001342  BE16               	btfsc	(velocidade@vel+1)^0,7,c
  1619  001344  EFAC  F009         	goto	u2661
  1620  001348  0415               	decf	velocidade@vel^0,w,c
  1621  00134A  0E03               	movlw	3
  1622  00134C  5816               	subwfb	(velocidade@vel+1)^0,w,c
  1623  00134E  A0D8               	btfss	status,0,c
  1624  001350  EFAC  F009         	goto	u2661
  1625  001354  EFAE  F009         	goto	u2660
  1626  001358                     u2661:
  1627  001358  EFBA  F009         	goto	l2959
  1628  00135C                     u2660:
  1629  00135C                     
  1630                           ;velocidade.c: 9:             lcdChar(3);
  1631  00135C  0E03               	movlw	3
  1632  00135E  EC27  F012         	call	_lcdChar
  1633                           
  1634                           ;velocidade.c: 10:             lcdChar(2);
  1635  001362  0E02               	movlw	2
  1636  001364  EC27  F012         	call	_lcdChar
  1637                           
  1638                           ;velocidade.c: 11:             lcdChar(1);
  1639  001368  0E01               	movlw	1
  1640  00136A  EC27  F012         	call	_lcdChar
  1641                           
  1642                           ;velocidade.c: 12:             lcdChar(0);
  1643  00136E  0E00               	movlw	0
  1644  001370  EC27  F012         	call	_lcdChar
  1645  001374                     l2959:
  1646                           
  1647                           ;velocidade.c: 14:         if(vel>512 && vel<768){
  1648  001374  BE16               	btfsc	(velocidade@vel+1)^0,7,c
  1649  001376  EFC5  F009         	goto	u2671
  1650  00137A  0415               	decf	velocidade@vel^0,w,c
  1651  00137C  0E02               	movlw	2
  1652  00137E  5816               	subwfb	(velocidade@vel+1)^0,w,c
  1653  001380  A0D8               	btfss	status,0,c
  1654  001382  EFC5  F009         	goto	u2671
  1655  001386  EFC7  F009         	goto	u2670
  1656  00138A                     u2671:
  1657  00138A  EFE2  F009         	goto	l2967
  1658  00138E                     u2670:
  1659  00138E  BE16               	btfsc	(velocidade@vel+1)^0,7,c
  1660  001390  EFD3  F009         	goto	u2680
  1661  001394  0E03               	movlw	3
  1662  001396  5C16               	subwf	(velocidade@vel+1)^0,w,c
  1663  001398  B0D8               	btfsc	status,0,c
  1664  00139A  EFD1  F009         	goto	u2681
  1665  00139E  EFD3  F009         	goto	u2680
  1666  0013A2                     u2681:
  1667  0013A2  EFE2  F009         	goto	l2967
  1668  0013A6                     u2680:
  1669  0013A6                     
  1670                           ;velocidade.c: 15:             lcdChar(3);
  1671  0013A6  0E03               	movlw	3
  1672  0013A8  EC27  F012         	call	_lcdChar
  1673                           
  1674                           ;velocidade.c: 16:             lcdChar(2);
  1675  0013AC  0E02               	movlw	2
  1676  0013AE  EC27  F012         	call	_lcdChar
  1677                           
  1678                           ;velocidade.c: 17:             lcdChar(1);
  1679  0013B2  0E01               	movlw	1
  1680  0013B4  EC27  F012         	call	_lcdChar
  1681  0013B8                     
  1682                           ;velocidade.c: 18:             lcdString(" ");
  1683  0013B8  0E3C               	movlw	low (STR_23+2)
  1684  0013BA  6E0F               	movwf	lcdString@msg^0,c
  1685  0013BC  0E06               	movlw	high (STR_23+2)
  1686  0013BE  6E10               	movwf	(lcdString@msg+1)^0,c
  1687  0013C0  EC4F  F010         	call	_lcdString	;wreg free
  1688  0013C4                     l2967:
  1689                           
  1690                           ;velocidade.c: 20:         if(vel>256 && vel<512){
  1691  0013C4  BE16               	btfsc	(velocidade@vel+1)^0,7,c
  1692  0013C6  EFED  F009         	goto	u2691
  1693  0013CA  0415               	decf	velocidade@vel^0,w,c
  1694  0013CC  0E01               	movlw	1
  1695  0013CE  5816               	subwfb	(velocidade@vel+1)^0,w,c
  1696  0013D0  A0D8               	btfss	status,0,c
  1697  0013D2  EFED  F009         	goto	u2691
  1698  0013D6  EFEF  F009         	goto	u2690
  1699  0013DA                     u2691:
  1700  0013DA  EF0D  F00A         	goto	l2977
  1701  0013DE                     u2690:
  1702  0013DE  BE16               	btfsc	(velocidade@vel+1)^0,7,c
  1703  0013E0  EFFB  F009         	goto	u2700
  1704  0013E4  0E02               	movlw	2
  1705  0013E6  5C16               	subwf	(velocidade@vel+1)^0,w,c
  1706  0013E8  B0D8               	btfsc	status,0,c
  1707  0013EA  EFF9  F009         	goto	u2701
  1708  0013EE  EFFB  F009         	goto	u2700
  1709  0013F2                     u2701:
  1710  0013F2  EF0D  F00A         	goto	l2977
  1711  0013F6                     u2700:
  1712  0013F6                     
  1713                           ;velocidade.c: 21:             lcdChar(3);
  1714  0013F6  0E03               	movlw	3
  1715  0013F8  EC27  F012         	call	_lcdChar
  1716                           
  1717                           ;velocidade.c: 22:             lcdChar(2);
  1718  0013FC  0E02               	movlw	2
  1719  0013FE  EC27  F012         	call	_lcdChar
  1720  001402                     
  1721                           ;velocidade.c: 23:             lcdString(" ");
  1722  001402  0E3C               	movlw	low (STR_23+2)
  1723  001404  6E0F               	movwf	lcdString@msg^0,c
  1724  001406  0E06               	movlw	high (STR_23+2)
  1725  001408  6E10               	movwf	(lcdString@msg+1)^0,c
  1726  00140A  EC4F  F010         	call	_lcdString	;wreg free
  1727  00140E                     
  1728                           ;velocidade.c: 24:             lcdString(" ");
  1729  00140E  0E3C               	movlw	low (STR_23+2)
  1730  001410  6E0F               	movwf	lcdString@msg^0,c
  1731  001412  0E06               	movlw	high (STR_23+2)
  1732  001414  6E10               	movwf	(lcdString@msg+1)^0,c
  1733  001416  EC4F  F010         	call	_lcdString	;wreg free
  1734  00141A                     l2977:
  1735                           
  1736                           ;velocidade.c: 26:         if(vel>0 && vel<256){
  1737  00141A  BE16               	btfsc	(velocidade@vel+1)^0,7,c
  1738  00141C  EF18  F00A         	goto	u2711
  1739  001420  5016               	movf	(velocidade@vel+1)^0,w,c
  1740  001422  E108               	bnz	u2710
  1741  001424  0415               	decf	velocidade@vel^0,w,c
  1742  001426  A0D8               	btfss	status,0,c
  1743  001428  EF18  F00A         	goto	u2711
  1744  00142C  EF1A  F00A         	goto	u2710
  1745  001430                     u2711:
  1746  001430  EF3A  F00A         	goto	l2989
  1747  001434                     u2710:
  1748  001434  BE16               	btfsc	(velocidade@vel+1)^0,7,c
  1749  001436  EF25  F00A         	goto	u2720
  1750  00143A  0416               	decf	(velocidade@vel+1)^0,w,c
  1751  00143C  B0D8               	btfsc	status,0,c
  1752  00143E  EF23  F00A         	goto	u2721
  1753  001442  EF25  F00A         	goto	u2720
  1754  001446                     u2721:
  1755  001446  EF3A  F00A         	goto	l2989
  1756  00144A                     u2720:
  1757  00144A                     
  1758                           ;velocidade.c: 27:             lcdChar(3);
  1759  00144A  0E03               	movlw	3
  1760  00144C  EC27  F012         	call	_lcdChar
  1761  001450                     
  1762                           ;velocidade.c: 28:             lcdString(" ");
  1763  001450  0E3C               	movlw	low (STR_23+2)
  1764  001452  6E0F               	movwf	lcdString@msg^0,c
  1765  001454  0E06               	movlw	high (STR_23+2)
  1766  001456  6E10               	movwf	(lcdString@msg+1)^0,c
  1767  001458  EC4F  F010         	call	_lcdString	;wreg free
  1768  00145C                     
  1769                           ;velocidade.c: 29:             lcdString(" ");
  1770  00145C  0E3C               	movlw	low (STR_23+2)
  1771  00145E  6E0F               	movwf	lcdString@msg^0,c
  1772  001460  0E06               	movlw	high (STR_23+2)
  1773  001462  6E10               	movwf	(lcdString@msg+1)^0,c
  1774  001464  EC4F  F010         	call	_lcdString	;wreg free
  1775  001468                     
  1776                           ;velocidade.c: 30:             lcdString(" ");
  1777  001468  0E3C               	movlw	low (STR_23+2)
  1778  00146A  6E0F               	movwf	lcdString@msg^0,c
  1779  00146C  0E06               	movlw	high (STR_23+2)
  1780  00146E  6E10               	movwf	(lcdString@msg+1)^0,c
  1781  001470  EC4F  F010         	call	_lcdString	;wreg free
  1782  001474                     l2989:
  1783                           
  1784                           ;velocidade.c: 32:         if(vel == 0){
  1785  001474  5015               	movf	velocidade@vel^0,w,c
  1786  001476  1016               	iorwf	(velocidade@vel+1)^0,w,c
  1787  001478  A4D8               	btfss	status,2,c
  1788  00147A  EF41  F00A         	goto	u2731
  1789  00147E  EF43  F00A         	goto	u2730
  1790  001482                     u2731:
  1791  001482  EF5B  F00A         	goto	l490
  1792  001486                     u2730:
  1793  001486                     
  1794                           ;velocidade.c: 33:             lcdString(" ");
  1795  001486  0E3C               	movlw	low (STR_23+2)
  1796  001488  6E0F               	movwf	lcdString@msg^0,c
  1797  00148A  0E06               	movlw	high (STR_23+2)
  1798  00148C  6E10               	movwf	(lcdString@msg+1)^0,c
  1799  00148E  EC4F  F010         	call	_lcdString	;wreg free
  1800                           
  1801                           ;velocidade.c: 34:             lcdString(" ");
  1802  001492  0E3C               	movlw	low (STR_23+2)
  1803  001494  6E0F               	movwf	lcdString@msg^0,c
  1804  001496  0E06               	movlw	high (STR_23+2)
  1805  001498  6E10               	movwf	(lcdString@msg+1)^0,c
  1806  00149A  EC4F  F010         	call	_lcdString	;wreg free
  1807                           
  1808                           ;velocidade.c: 35:             lcdString(" ");
  1809  00149E  0E3C               	movlw	low (STR_23+2)
  1810  0014A0  6E0F               	movwf	lcdString@msg^0,c
  1811  0014A2  0E06               	movlw	high (STR_23+2)
  1812  0014A4  6E10               	movwf	(lcdString@msg+1)^0,c
  1813  0014A6  EC4F  F010         	call	_lcdString	;wreg free
  1814                           
  1815                           ;velocidade.c: 36:             lcdString(" ");
  1816  0014AA  0E3C               	movlw	low (STR_23+2)
  1817  0014AC  6E0F               	movwf	lcdString@msg^0,c
  1818  0014AE  0E06               	movlw	high (STR_23+2)
  1819  0014B0  6E10               	movwf	(lcdString@msg+1)^0,c
  1820  0014B2  EC4F  F010         	call	_lcdString	;wreg free
  1821  0014B6                     l490:
  1822  0014B6  0012               	return		;funcret
  1823  0014B8                     __end_of_velocidade:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _timerWait *****************
  1827 ;; Defined at:
  1828 ;;		line 31 in file "timer.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		None
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1842 ;;      Params:         0       0       0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text2
  1856  0024B4                     __ptext2:
  1857                           	callstack 0
  1858  0024B4                     _timerWait:
  1859                           	callstack 30
  1860  0024B4                     l352:
  1861  0024B4  A4F2               	btfss	242,2,c	;volatile
  1862  0024B6  EF5F  F012         	goto	u2601
  1863  0024BA  EF61  F012         	goto	u2600
  1864  0024BE                     u2601:
  1865  0024BE  EF5A  F012         	goto	l352
  1866  0024C2                     u2600:
  1867  0024C2  0012               	return		;funcret
  1868  0024C4                     __end_of_timerWait:
  1869                           	callstack 0
  1870                           
  1871 ;; *************** function _timerReset *****************
  1872 ;; Defined at:
  1873 ;;		line 37 in file "timer.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  tempo           2    0[COMRAM] unsigned int 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  ciclos          2    2[COMRAM] unsigned int 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1887 ;;      Params:         2       0       0       0       0       0       0
  1888 ;;      Locals:         2       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0
  1890 ;;      Totals:         4       0       0       0       0       0       0
  1891 ;;Total ram usage:        4 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text3
  1901  0023EA                     __ptext3:
  1902                           	callstack 0
  1903  0023EA                     _timerReset:
  1904                           	callstack 30
  1905  0023EA                     
  1906                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1907  0023EA  90D8               	bcf	status,0,c
  1908  0023EC  3401               	rlcf	timerReset@tempo^0,w,c
  1909  0023EE  6E03               	movwf	timerReset@ciclos^0,c
  1910  0023F0  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1911  0023F2  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1912  0023F4                     
  1913                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1914  0023F4  1E03               	comf	timerReset@ciclos^0,f,c
  1915  0023F6  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1916  0023F8                     
  1917                           ;timer.c: 47:     ciclos -=50;
  1918  0023F8  0E32               	movlw	50
  1919  0023FA  5E03               	subwf	timerReset@ciclos^0,f,c
  1920  0023FC  0E00               	movlw	0
  1921  0023FE  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1922  002400                     
  1923                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1924  002400  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1925  002402  6ED7               	movwf	215,c	;volatile
  1926  002404                     
  1927                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1928  002404  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1929  002408                     
  1930                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1931  002408  94F2               	bcf	242,2,c	;volatile
  1932  00240A  0012               	return		;funcret
  1933  00240C                     __end_of_timerReset:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _timerInit *****************
  1937 ;; Defined at:
  1938 ;;		line 55 in file "timer.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1952 ;;      Params:         0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text4
  1966  0024CE                     __ptext4:
  1967                           	callstack 0
  1968  0024CE                     _timerInit:
  1969                           	callstack 30
  1970  0024CE                     
  1971                           ;timer.c: 57:  T0CON = 0b00001000;
  1972  0024CE  0E08               	movlw	8
  1973  0024D0  6ED5               	movwf	213,c	;volatile
  1974  0024D2                     
  1975                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1976  0024D2  8ED5               	bsf	213,7,c	;volatile
  1977  0024D4  0012               	return		;funcret
  1978  0024D6                     __end_of_timerInit:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _ssdUpdate *****************
  1982 ;; Defined at:
  1983 ;;		line 50 in file "ssd.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1997 ;;      Params:         0       0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0
  1999 ;;      Temps:          2       0       0       0       0       0       0
  2000 ;;      Totals:         2       0       0       0       0       0       0
  2001 ;;Total ram usage:        2 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 3
  2004 ;; This function calls:
  2005 ;;		_digitalWrite
  2006 ;;		_soWrite
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text5
  2013  0014B8                     __ptext5:
  2014                           	callstack 0
  2015  0014B8                     _ssdUpdate:
  2016                           	callstack 27
  2017  0014B8                     
  2018                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  2019  0014B8  0E00               	movlw	0
  2020  0014BA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2021  0014BC  0E18               	movlw	24
  2022  0014BE  6E01               	movwf	digitalWrite@pin^0,c
  2023  0014C0  0E00               	movlw	0
  2024  0014C2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2025  0014C4  0E00               	movlw	0
  2026  0014C6  6E03               	movwf	digitalWrite@value^0,c
  2027  0014C8  EC49  F007         	call	_digitalWrite	;wreg free
  2028                           
  2029                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  2030  0014CC  0E00               	movlw	0
  2031  0014CE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2032  0014D0  0E19               	movlw	25
  2033  0014D2  6E01               	movwf	digitalWrite@pin^0,c
  2034  0014D4  0E00               	movlw	0
  2035  0014D6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2036  0014D8  0E00               	movlw	0
  2037  0014DA  6E03               	movwf	digitalWrite@value^0,c
  2038  0014DC  EC49  F007         	call	_digitalWrite	;wreg free
  2039                           
  2040                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  2041  0014E0  0E00               	movlw	0
  2042  0014E2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2043  0014E4  0E1A               	movlw	26
  2044  0014E6  6E01               	movwf	digitalWrite@pin^0,c
  2045  0014E8  0E00               	movlw	0
  2046  0014EA  6E04               	movwf	(digitalWrite@value+1)^0,c
  2047  0014EC  0E00               	movlw	0
  2048  0014EE  6E03               	movwf	digitalWrite@value^0,c
  2049  0014F0  EC49  F007         	call	_digitalWrite	;wreg free
  2050                           
  2051                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  2052  0014F4  0E00               	movlw	0
  2053  0014F6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2054  0014F8  0E1B               	movlw	27
  2055  0014FA  6E01               	movwf	digitalWrite@pin^0,c
  2056  0014FC  0E00               	movlw	0
  2057  0014FE  6E04               	movwf	(digitalWrite@value+1)^0,c
  2058  001500  0E00               	movlw	0
  2059  001502  6E03               	movwf	digitalWrite@value^0,c
  2060  001504  EC49  F007         	call	_digitalWrite	;wreg free
  2061                           
  2062                           ;ssd.c: 60:     soWrite(0x00);
  2063  001508  0E00               	movlw	0
  2064  00150A  6E08               	movwf	(soWrite@value+1)^0,c
  2065  00150C  0E00               	movlw	0
  2066  00150E  6E07               	movwf	soWrite@value^0,c
  2067  001510  ECA2  F010         	call	_soWrite	;wreg free
  2068                           
  2069                           ;ssd.c: 62:     switch (display)
  2070  001514  EFF4  F00A         	goto	l2789
  2071  001518                     l2761:
  2072                           
  2073                           ;ssd.c: 65:             soWrite(valor[v0]);
  2074  001518  0E01               	movlw	low _valor
  2075  00151A  2479               	addwf	_v0^0,w,c
  2076  00151C  6EF6               	movwf	tblptrl,c
  2077  00151E  6AF7               	clrf	tblptrh,c
  2078  001520  0E06               	movlw	high _valor
  2079  001522  22F7               	addwfc	tblptrh,f,c
  2080  001524                     	if	0	;There are less than 3 active tblptr bytes
  2081  001524                     	endif
  2082  001524  0008               	tblrd		*
  2083  001526  50F5               	movf	tablat,w,c
  2084  001528  6E07               	movwf	soWrite@value^0,c
  2085  00152A  6A08               	clrf	(soWrite@value+1)^0,c
  2086  00152C  ECA2  F010         	call	_soWrite	;wreg free
  2087  001530                     
  2088                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  2089  001530  0E00               	movlw	0
  2090  001532  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2091  001534  0E18               	movlw	24
  2092  001536  6E01               	movwf	digitalWrite@pin^0,c
  2093  001538  0E00               	movlw	0
  2094  00153A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2095  00153C  0E01               	movlw	1
  2096  00153E  6E03               	movwf	digitalWrite@value^0,c
  2097  001540  EC49  F007         	call	_digitalWrite	;wreg free
  2098  001544                     
  2099                           ;ssd.c: 67:             display = 1;
  2100  001544  0E01               	movlw	1
  2101  001546  6E7A               	movwf	_display^0,c
  2102                           
  2103                           ;ssd.c: 68:             break;
  2104  001548  EF11  F00B         	goto	l266
  2105  00154C                     l2767:
  2106                           
  2107                           ;ssd.c: 71:             soWrite(valor[v1]);
  2108  00154C  0E01               	movlw	low _valor
  2109  00154E  2478               	addwf	_v1^0,w,c
  2110  001550  6EF6               	movwf	tblptrl,c
  2111  001552  6AF7               	clrf	tblptrh,c
  2112  001554  0E06               	movlw	high _valor
  2113  001556  22F7               	addwfc	tblptrh,f,c
  2114  001558                     	if	0	;There are less than 3 active tblptr bytes
  2115  001558                     	endif
  2116  001558  0008               	tblrd		*
  2117  00155A  50F5               	movf	tablat,w,c
  2118  00155C  6E07               	movwf	soWrite@value^0,c
  2119  00155E  6A08               	clrf	(soWrite@value+1)^0,c
  2120  001560  ECA2  F010         	call	_soWrite	;wreg free
  2121  001564                     
  2122                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  2123  001564  0E00               	movlw	0
  2124  001566  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2125  001568  0E19               	movlw	25
  2126  00156A  6E01               	movwf	digitalWrite@pin^0,c
  2127  00156C  0E00               	movlw	0
  2128  00156E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2129  001570  0E01               	movlw	1
  2130  001572  6E03               	movwf	digitalWrite@value^0,c
  2131  001574  EC49  F007         	call	_digitalWrite	;wreg free
  2132  001578                     
  2133                           ;ssd.c: 73:             display = 2;
  2134  001578  0E02               	movlw	2
  2135  00157A  6E7A               	movwf	_display^0,c
  2136                           
  2137                           ;ssd.c: 74:             break;
  2138  00157C  EF11  F00B         	goto	l266
  2139  001580                     l2773:
  2140                           
  2141                           ;ssd.c: 77:             soWrite(valor[v2]);
  2142  001580  0E01               	movlw	low _valor
  2143  001582  2477               	addwf	_v2^0,w,c
  2144  001584  6EF6               	movwf	tblptrl,c
  2145  001586  6AF7               	clrf	tblptrh,c
  2146  001588  0E06               	movlw	high _valor
  2147  00158A  22F7               	addwfc	tblptrh,f,c
  2148  00158C                     	if	0	;There are less than 3 active tblptr bytes
  2149  00158C                     	endif
  2150  00158C  0008               	tblrd		*
  2151  00158E  50F5               	movf	tablat,w,c
  2152  001590  6E07               	movwf	soWrite@value^0,c
  2153  001592  6A08               	clrf	(soWrite@value+1)^0,c
  2154  001594  ECA2  F010         	call	_soWrite	;wreg free
  2155  001598                     
  2156                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  2157  001598  0E00               	movlw	0
  2158  00159A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2159  00159C  0E1A               	movlw	26
  2160  00159E  6E01               	movwf	digitalWrite@pin^0,c
  2161  0015A0  0E00               	movlw	0
  2162  0015A2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2163  0015A4  0E01               	movlw	1
  2164  0015A6  6E03               	movwf	digitalWrite@value^0,c
  2165  0015A8  EC49  F007         	call	_digitalWrite	;wreg free
  2166  0015AC                     
  2167                           ;ssd.c: 79:             display = 3;
  2168  0015AC  0E03               	movlw	3
  2169  0015AE  6E7A               	movwf	_display^0,c
  2170                           
  2171                           ;ssd.c: 80:             break;
  2172  0015B0  EF11  F00B         	goto	l266
  2173  0015B4                     l2779:
  2174                           
  2175                           ;ssd.c: 83:             soWrite(valor[v3]);
  2176  0015B4  0E01               	movlw	low _valor
  2177  0015B6  2476               	addwf	_v3^0,w,c
  2178  0015B8  6EF6               	movwf	tblptrl,c
  2179  0015BA  6AF7               	clrf	tblptrh,c
  2180  0015BC  0E06               	movlw	high _valor
  2181  0015BE  22F7               	addwfc	tblptrh,f,c
  2182  0015C0                     	if	0	;There are less than 3 active tblptr bytes
  2183  0015C0                     	endif
  2184  0015C0  0008               	tblrd		*
  2185  0015C2  50F5               	movf	tablat,w,c
  2186  0015C4  6E07               	movwf	soWrite@value^0,c
  2187  0015C6  6A08               	clrf	(soWrite@value+1)^0,c
  2188  0015C8  ECA2  F010         	call	_soWrite	;wreg free
  2189  0015CC                     
  2190                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  2191  0015CC  0E00               	movlw	0
  2192  0015CE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2193  0015D0  0E1B               	movlw	27
  2194  0015D2  6E01               	movwf	digitalWrite@pin^0,c
  2195  0015D4  0E00               	movlw	0
  2196  0015D6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2197  0015D8  0E01               	movlw	1
  2198  0015DA  6E03               	movwf	digitalWrite@value^0,c
  2199  0015DC  EC49  F007         	call	_digitalWrite	;wreg free
  2200  0015E0                     l2783:
  2201                           
  2202                           ;ssd.c: 85:             display = 0;
  2203  0015E0  0E00               	movlw	0
  2204  0015E2  6E7A               	movwf	_display^0,c
  2205                           
  2206                           ;ssd.c: 86:             break;
  2207  0015E4  EF11  F00B         	goto	l266
  2208  0015E8                     l2789:
  2209  0015E8  507A               	movf	_display^0,w,c
  2210  0015EA  6E0A               	movwf	??_ssdUpdate^0,c
  2211  0015EC  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  2212                           
  2213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 1, Range of values is 0 to 0
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte            4     3 (average)
  2219                           ;	Chosen strategy is simple_byte
  2220  0015EE  500B               	movf	(??_ssdUpdate+1)^0,w,c
  2221  0015F0  0A00               	xorlw	0	; case 0
  2222  0015F2  B4D8               	btfsc	status,2,c
  2223  0015F4  EFFE  F00A         	goto	l3385
  2224  0015F8  EFF0  F00A         	goto	l2783
  2225  0015FC                     l3385:
  2226                           
  2227                           ; Switch size 1, requested type "simple"
  2228                           ; Number of cases is 4, Range of values is 0 to 3
  2229                           ; switch strategies available:
  2230                           ; Name         Instructions Cycles
  2231                           ; simple_byte           13     7 (average)
  2232                           ;	Chosen strategy is simple_byte
  2233  0015FC  500A               	movf	??_ssdUpdate^0,w,c
  2234  0015FE  0A00               	xorlw	0	; case 0
  2235  001600  B4D8               	btfsc	status,2,c
  2236  001602  EF8C  F00A         	goto	l2761
  2237  001606  0A01               	xorlw	1	; case 1
  2238  001608  B4D8               	btfsc	status,2,c
  2239  00160A  EFA6  F00A         	goto	l2767
  2240  00160E  0A03               	xorlw	3	; case 2
  2241  001610  B4D8               	btfsc	status,2,c
  2242  001612  EFC0  F00A         	goto	l2773
  2243  001616  0A01               	xorlw	1	; case 3
  2244  001618  B4D8               	btfsc	status,2,c
  2245  00161A  EFDA  F00A         	goto	l2779
  2246  00161E  EFF0  F00A         	goto	l2783
  2247  001622                     l266:
  2248  001622  0012               	return		;funcret
  2249  001624                     __end_of_ssdUpdate:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _ssdInit *****************
  2253 ;; Defined at:
  2254 ;;		line 94 in file "ssd.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2268 ;;      Params:         0       0       0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0
  2271 ;;      Totals:         0       0       0       0       0       0       0
  2272 ;;Total ram usage:        0 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 2
  2275 ;; This function calls:
  2276 ;;		_pinMode
  2277 ;;		_soInit
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text6
  2284  002048                     __ptext6:
  2285                           	callstack 0
  2286  002048                     _ssdInit:
  2287                           	callstack 28
  2288  002048                     
  2289                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  2290  002048  0E00               	movlw	0
  2291  00204A  6E02               	movwf	(pinMode@pin+1)^0,c
  2292  00204C  0E18               	movlw	24
  2293  00204E  6E01               	movwf	pinMode@pin^0,c
  2294  002050  0E00               	movlw	0
  2295  002052  6E04               	movwf	(pinMode@type+1)^0,c
  2296  002054  0E00               	movlw	0
  2297  002056  6E03               	movwf	pinMode@type^0,c
  2298  002058  EC70  F008         	call	_pinMode	;wreg free
  2299                           
  2300                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  2301  00205C  0E00               	movlw	0
  2302  00205E  6E02               	movwf	(pinMode@pin+1)^0,c
  2303  002060  0E19               	movlw	25
  2304  002062  6E01               	movwf	pinMode@pin^0,c
  2305  002064  0E00               	movlw	0
  2306  002066  6E04               	movwf	(pinMode@type+1)^0,c
  2307  002068  0E00               	movlw	0
  2308  00206A  6E03               	movwf	pinMode@type^0,c
  2309  00206C  EC70  F008         	call	_pinMode	;wreg free
  2310                           
  2311                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  2312  002070  0E00               	movlw	0
  2313  002072  6E02               	movwf	(pinMode@pin+1)^0,c
  2314  002074  0E1A               	movlw	26
  2315  002076  6E01               	movwf	pinMode@pin^0,c
  2316  002078  0E00               	movlw	0
  2317  00207A  6E04               	movwf	(pinMode@type+1)^0,c
  2318  00207C  0E00               	movlw	0
  2319  00207E  6E03               	movwf	pinMode@type^0,c
  2320  002080  EC70  F008         	call	_pinMode	;wreg free
  2321                           
  2322                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  2323  002084  0E00               	movlw	0
  2324  002086  6E02               	movwf	(pinMode@pin+1)^0,c
  2325  002088  0E1B               	movlw	27
  2326  00208A  6E01               	movwf	pinMode@pin^0,c
  2327  00208C  0E00               	movlw	0
  2328  00208E  6E04               	movwf	(pinMode@type+1)^0,c
  2329  002090  0E00               	movlw	0
  2330  002092  6E03               	movwf	pinMode@type^0,c
  2331  002094  EC70  F008         	call	_pinMode	;wreg free
  2332                           
  2333                           ;ssd.c: 102:     soInit();
  2334  002098  EC0E  F011         	call	_soInit	;wreg free
  2335  00209C  0012               	return		;funcret
  2336  00209E                     __end_of_ssdInit:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _ssdDigit *****************
  2340 ;; Defined at:
  2341 ;;		line 34 in file "ssd.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  val             1    wreg     unsigned char 
  2344 ;;  pos             1   24[COMRAM] unsigned char 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  val             1   25[COMRAM] unsigned char 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2356 ;;      Params:         1       0       0       0       0       0       0
  2357 ;;      Locals:         1       0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0
  2359 ;;      Totals:         2       0       0       0       0       0       0
  2360 ;;Total ram usage:        2 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_main
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text7
  2370  001F9A                     __ptext7:
  2371                           	callstack 0
  2372  001F9A                     _ssdDigit:
  2373                           	callstack 30
  2374                           
  2375                           ;incstack = 0
  2376                           ;ssdDigit@val stored from wreg
  2377  001F9A  6E1A               	movwf	ssdDigit@val^0,c
  2378  001F9C                     
  2379                           ;ssd.c: 35:     if (pos == 0) {
  2380  001F9C  5019               	movf	ssdDigit@pos^0,w,c
  2381  001F9E  A4D8               	btfss	status,2,c
  2382  001FA0  EFD4  F00F         	goto	u2491
  2383  001FA4  EFD6  F00F         	goto	u2490
  2384  001FA8                     u2491:
  2385  001FA8  EFD8  F00F         	goto	l2747
  2386  001FAC                     u2490:
  2387  001FAC                     
  2388                           ;ssd.c: 36:         v0 = val;
  2389  001FAC  C01A  F079         	movff	ssdDigit@val,_v0
  2390  001FB0                     l2747:
  2391                           
  2392                           ;ssd.c: 38:     if (pos == 1) {
  2393  001FB0  0419               	decf	ssdDigit@pos^0,w,c
  2394  001FB2  A4D8               	btfss	status,2,c
  2395  001FB4  EFDE  F00F         	goto	u2501
  2396  001FB8  EFE0  F00F         	goto	u2500
  2397  001FBC                     u2501:
  2398  001FBC  EFE2  F00F         	goto	l2751
  2399  001FC0                     u2500:
  2400  001FC0                     
  2401                           ;ssd.c: 39:         v1 = val;
  2402  001FC0  C01A  F078         	movff	ssdDigit@val,_v1
  2403  001FC4                     l2751:
  2404                           
  2405                           ;ssd.c: 41:     if (pos == 2) {
  2406  001FC4  0E02               	movlw	2
  2407  001FC6  1819               	xorwf	ssdDigit@pos^0,w,c
  2408  001FC8  A4D8               	btfss	status,2,c
  2409  001FCA  EFE9  F00F         	goto	u2511
  2410  001FCE  EFEB  F00F         	goto	u2510
  2411  001FD2                     u2511:
  2412  001FD2  EFED  F00F         	goto	l2755
  2413  001FD6                     u2510:
  2414  001FD6                     
  2415                           ;ssd.c: 42:         v2 = val;
  2416  001FD6  C01A  F077         	movff	ssdDigit@val,_v2
  2417  001FDA                     l2755:
  2418                           
  2419                           ;ssd.c: 44:     if (pos == 3) {
  2420  001FDA  0E03               	movlw	3
  2421  001FDC  1819               	xorwf	ssdDigit@pos^0,w,c
  2422  001FDE  A4D8               	btfss	status,2,c
  2423  001FE0  EFF4  F00F         	goto	u2521
  2424  001FE4  EFF6  F00F         	goto	u2520
  2425  001FE8                     u2521:
  2426  001FE8  EFF8  F00F         	goto	l256
  2427  001FEC                     u2520:
  2428  001FEC                     
  2429                           ;ssd.c: 45:         v3 = val;
  2430  001FEC  C01A  F076         	movff	ssdDigit@val,_v3
  2431  001FF0                     l256:
  2432  001FF0  0012               	return		;funcret
  2433  001FF2                     __end_of_ssdDigit:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _pwmSet *****************
  2437 ;; Defined at:
  2438 ;;		line 24 in file "pwm.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  porcento        1    wreg     unsigned char 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  porcento        1    9[COMRAM] unsigned char 
  2443 ;;  val             2   10[COMRAM] unsigned int 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2453 ;;      Params:         0       0       0       0       0       0       0
  2454 ;;      Locals:         3       0       0       0       0       0       0
  2455 ;;      Temps:          2       0       0       0       0       0       0
  2456 ;;      Totals:         5       0       0       0       0       0       0
  2457 ;;Total ram usage:        5 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 1
  2460 ;; This function calls:
  2461 ;;		___lwdiv
  2462 ;;		___wmul
  2463 ;; This function is called by:
  2464 ;;		_main
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text8
  2469  001E0C                     __ptext8:
  2470                           	callstack 0
  2471  001E0C                     _pwmSet:
  2472                           	callstack 29
  2473                           
  2474                           ;incstack = 0
  2475                           ;pwmSet@porcento stored from wreg
  2476  001E0C  6E0A               	movwf	pwmSet@porcento^0,c
  2477  001E0E                     
  2478                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  2479  001E0E  0E01               	movlw	1
  2480  001E10  24CB               	addwf	203,w,c	;volatile
  2481  001E12  6E01               	movwf	___wmul@multiplier^0,c
  2482  001E14  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2483  001E16  0E00               	movlw	0
  2484  001E18  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2485  001E1A  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  2486  001E1E  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2487  001E20  ECBC  F011         	call	___wmul	;wreg free
  2488  001E24  C001  F00B         	movff	?___wmul,pwmSet@val
  2489  001E28  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  2490  001E2C                     
  2491                           ;pwm.c: 33:     val = val / 25;
  2492  001E2C  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  2493  001E30  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  2494  001E34  0E00               	movlw	0
  2495  001E36  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2496  001E38  0E19               	movlw	25
  2497  001E3A  6E03               	movwf	___lwdiv@divisor^0,c
  2498  001E3C  ECCC  F00E         	call	___lwdiv	;wreg free
  2499  001E40  C001  F00B         	movff	?___lwdiv,pwmSet@val
  2500  001E44  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  2501  001E48                     
  2502                           ;pwm.c: 35:  val &= 0x03ff;
  2503  001E48  0EFF               	movlw	255
  2504  001E4A  160B               	andwf	pwmSet@val^0,f,c
  2505  001E4C  0E03               	movlw	3
  2506  001E4E  160C               	andwf	(pwmSet@val+1)^0,f,c
  2507  001E50                     
  2508                           ;pwm.c: 37:  CCPR2L = val >> 2;
  2509  001E50  C00B  F008         	movff	pwmSet@val,??_pwmSet
  2510  001E54  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  2511  001E58  90D8               	bcf	status,0,c
  2512  001E5A  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2513  001E5C  3208               	rrcf	??_pwmSet^0,f,c
  2514  001E5E  90D8               	bcf	status,0,c
  2515  001E60  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2516  001E62  3208               	rrcf	??_pwmSet^0,f,c
  2517  001E64  5008               	movf	??_pwmSet^0,w,c
  2518  001E66  6EBB               	movwf	187,c	;volatile
  2519  001E68                     
  2520                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  2521  001E68  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  2522  001E6C  0E03               	movlw	3
  2523  001E6E  1608               	andwf	??_pwmSet^0,f,c
  2524  001E70  3808               	swapf	??_pwmSet^0,w,c
  2525  001E72  0BF0               	andlw	240
  2526  001E74  12BA               	iorwf	186,f,c	;volatile
  2527  001E76  0012               	return		;funcret
  2528  001E78                     __end_of_pwmSet:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function ___wmul *****************
  2532 ;; Defined at:
  2533 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  multiplier      2    0[COMRAM] unsigned int 
  2536 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  product         2    4[COMRAM] unsigned int 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  2    0[COMRAM] unsigned int 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, prodl, prodh
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2548 ;;      Params:         4       0       0       0       0       0       0
  2549 ;;      Locals:         2       0       0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0
  2551 ;;      Totals:         6       0       0       0       0       0       0
  2552 ;;Total ram usage:        6 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_pwmSet
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text9
  2562  002378                     __ptext9:
  2563                           	callstack 0
  2564  002378                     ___wmul:
  2565                           	callstack 29
  2566  002378  5001               	movf	___wmul@multiplier^0,w,c
  2567  00237A  0203               	mulwf	___wmul@multiplicand^0,c
  2568  00237C  CFF3 F005          	movff	prodl,___wmul@product
  2569  002380  CFF4 F006          	movff	prodh,___wmul@product+1
  2570  002384  5001               	movf	___wmul@multiplier^0,w,c
  2571  002386  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2572  002388  50F3               	movf	243,w,c
  2573  00238A  2606               	addwf	(___wmul@product+1)^0,f,c
  2574  00238C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2575  00238E  0203               	mulwf	___wmul@multiplicand^0,c
  2576  002390  50F3               	movf	243,w,c
  2577  002392  2606               	addwf	(___wmul@product+1)^0,f,c
  2578  002394  C005  F001         	movff	___wmul@product,?___wmul
  2579  002398  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2580  00239C  0012               	return		;funcret
  2581  00239E                     __end_of___wmul:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function ___lwdiv *****************
  2585 ;; Defined at:
  2586 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  dividend        2    0[COMRAM] unsigned int 
  2589 ;;  divisor         2    2[COMRAM] unsigned int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  quotient        2    4[COMRAM] unsigned int 
  2592 ;;  counter         1    6[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  2    0[COMRAM] unsigned int 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2602 ;;      Params:         4       0       0       0       0       0       0
  2603 ;;      Locals:         3       0       0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0
  2605 ;;      Totals:         7       0       0       0       0       0       0
  2606 ;;Total ram usage:        7 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;;		_pwmSet
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text10
  2617  001D98                     __ptext10:
  2618                           	callstack 0
  2619  001D98                     ___lwdiv:
  2620                           	callstack 29
  2621  001D98  0E00               	movlw	0
  2622  001D9A  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2623  001D9C  0E00               	movlw	0
  2624  001D9E  6E05               	movwf	___lwdiv@quotient^0,c
  2625  001DA0  5003               	movf	___lwdiv@divisor^0,w,c
  2626  001DA2  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2627  001DA4  B4D8               	btfsc	status,2,c
  2628  001DA6  EFD7  F00E         	goto	u2261
  2629  001DAA  EFD9  F00E         	goto	u2260
  2630  001DAE                     u2261:
  2631  001DAE  EF01  F00F         	goto	l1019
  2632  001DB2                     u2260:
  2633  001DB2  0E01               	movlw	1
  2634  001DB4  6E07               	movwf	___lwdiv@counter^0,c
  2635  001DB6  EFE1  F00E         	goto	l2553
  2636  001DBA                     l2551:
  2637  001DBA  90D8               	bcf	status,0,c
  2638  001DBC  3603               	rlcf	___lwdiv@divisor^0,f,c
  2639  001DBE  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2640  001DC0  2A07               	incf	___lwdiv@counter^0,f,c
  2641  001DC2                     l2553:
  2642  001DC2  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2643  001DC4  EFE6  F00E         	goto	u2271
  2644  001DC8  EFE8  F00E         	goto	u2270
  2645  001DCC                     u2271:
  2646  001DCC  EFDD  F00E         	goto	l2551
  2647  001DD0                     u2270:
  2648  001DD0                     l2555:
  2649  001DD0  90D8               	bcf	status,0,c
  2650  001DD2  3605               	rlcf	___lwdiv@quotient^0,f,c
  2651  001DD4  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2652  001DD6  5003               	movf	___lwdiv@divisor^0,w,c
  2653  001DD8  5C01               	subwf	___lwdiv@dividend^0,w,c
  2654  001DDA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2655  001DDC  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2656  001DDE  A0D8               	btfss	status,0,c
  2657  001DE0  EFF4  F00E         	goto	u2281
  2658  001DE4  EFF6  F00E         	goto	u2280
  2659  001DE8                     u2281:
  2660  001DE8  EFFB  F00E         	goto	l2563
  2661  001DEC                     u2280:
  2662  001DEC  5003               	movf	___lwdiv@divisor^0,w,c
  2663  001DEE  5E01               	subwf	___lwdiv@dividend^0,f,c
  2664  001DF0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2665  001DF2  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2666  001DF4  8005               	bsf	___lwdiv@quotient^0,0,c
  2667  001DF6                     l2563:
  2668  001DF6  90D8               	bcf	status,0,c
  2669  001DF8  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2670  001DFA  3203               	rrcf	___lwdiv@divisor^0,f,c
  2671  001DFC  2E07               	decfsz	___lwdiv@counter^0,f,c
  2672  001DFE  EFE8  F00E         	goto	l2555
  2673  001E02                     l1019:
  2674  001E02  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2675  001E06  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2676  001E0A  0012               	return		;funcret
  2677  001E0C                     __end_of___lwdiv:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function _pwmInit *****************
  2681 ;; Defined at:
  2682 ;;		line 51 in file "pwm.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2696 ;;      Params:         0       0       0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 2
  2703 ;; This function calls:
  2704 ;;		_pwmFrequency
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text11
  2711  00248A                     __ptext11:
  2712                           	callstack 0
  2713  00248A                     _pwmInit:
  2714                           	callstack 28
  2715  00248A                     
  2716                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2717  00248A  9294               	bcf	148,1,c	;volatile
  2718  00248C                     
  2719                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2720  00248C  0E03               	movlw	3
  2721  00248E  12CA               	iorwf	202,f,c	;volatile
  2722  002490                     
  2723                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2724  002490  84CA               	bsf	202,2,c	;volatile
  2725  002492                     
  2726                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2727  002492  0E0C               	movlw	12
  2728  002494  6EBA               	movwf	186,c	;volatile
  2729  002496                     
  2730                           ;pwm.c: 60:     pwmFrequency(100);
  2731  002496  0E00               	movlw	0
  2732  002498  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2733  00249A  0E64               	movlw	100
  2734  00249C  6E0F               	movwf	pwmFrequency@freq^0,c
  2735  00249E  ECCF  F011         	call	_pwmFrequency	;wreg free
  2736  0024A2  0012               	return		;funcret
  2737  0024A4                     __end_of_pwmInit:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _pwmFrequency *****************
  2741 ;; Defined at:
  2742 ;;		line 44 in file "pwm.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  freq            2   14[COMRAM] unsigned int 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2756 ;;      Params:         2       0       0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0
  2759 ;;      Totals:         2       0       0       0       0       0       0
  2760 ;;Total ram usage:        2 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 1
  2763 ;; This function calls:
  2764 ;;		___aldiv
  2765 ;; This function is called by:
  2766 ;;		_pwmInit
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text12
  2771  00239E                     __ptext12:
  2772                           	callstack 0
  2773  00239E                     _pwmFrequency:
  2774                           	callstack 28
  2775  00239E                     
  2776                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2777  00239E  0E48               	movlw	72
  2778  0023A0  6E01               	movwf	___aldiv@dividend^0,c
  2779  0023A2  0EE8               	movlw	232
  2780  0023A4  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2781  0023A6  0E01               	movlw	1
  2782  0023A8  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2783  0023AA  0E00               	movlw	0
  2784  0023AC  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2785  0023AE  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2786  0023B2  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2787  0023B6  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2788  0023B8  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2789  0023BA  EC62  F00C         	call	___aldiv	;wreg free
  2790  0023BE  0401               	decf	?___aldiv^0,w,c
  2791  0023C0  6ECB               	movwf	203,c	;volatile
  2792  0023C2  0012               	return		;funcret
  2793  0023C4                     __end_of_pwmFrequency:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function ___aldiv *****************
  2797 ;; Defined at:
  2798 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  dividend        4    0[COMRAM] long 
  2801 ;;  divisor         4    4[COMRAM] long 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  quotient        4   10[COMRAM] long 
  2804 ;;  sign            1    9[COMRAM] unsigned char 
  2805 ;;  counter         1    8[COMRAM] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  4    0[COMRAM] long 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2815 ;;      Params:         8       0       0       0       0       0       0
  2816 ;;      Locals:         6       0       0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0
  2818 ;;      Totals:        14       0       0       0       0       0       0
  2819 ;;Total ram usage:       14 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;;		_pwmFrequency
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text13
  2830  0018C4                     __ptext13:
  2831                           	callstack 0
  2832  0018C4                     ___aldiv:
  2833                           	callstack 28
  2834  0018C4  0E00               	movlw	0
  2835  0018C6  6E0A               	movwf	___aldiv@sign^0,c
  2836  0018C8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2837  0018CA  EF6B  F00C         	goto	u2030
  2838  0018CE  EF69  F00C         	goto	u2031
  2839  0018D2                     u2031:
  2840  0018D2  EF75  F00C         	goto	l2431
  2841  0018D6                     u2030:
  2842  0018D6  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2843  0018D8  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2844  0018DA  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2845  0018DC  6C05               	negf	___aldiv@divisor^0,c
  2846  0018DE  0E00               	movlw	0
  2847  0018E0  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2848  0018E2  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2849  0018E4  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2850  0018E6  0E01               	movlw	1
  2851  0018E8  6E0A               	movwf	___aldiv@sign^0,c
  2852  0018EA                     l2431:
  2853  0018EA  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2854  0018EC  EF7C  F00C         	goto	u2040
  2855  0018F0  EF7A  F00C         	goto	u2041
  2856  0018F4                     u2041:
  2857  0018F4  EF86  F00C         	goto	l2437
  2858  0018F8                     u2040:
  2859  0018F8  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2860  0018FA  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2861  0018FC  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2862  0018FE  6C01               	negf	___aldiv@dividend^0,c
  2863  001900  0E00               	movlw	0
  2864  001902  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2865  001904  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2866  001906  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2867  001908  0E01               	movlw	1
  2868  00190A  1A0A               	xorwf	___aldiv@sign^0,f,c
  2869  00190C                     l2437:
  2870  00190C  0E00               	movlw	0
  2871  00190E  6E0B               	movwf	___aldiv@quotient^0,c
  2872  001910  0E00               	movlw	0
  2873  001912  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2874  001914  0E00               	movlw	0
  2875  001916  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2876  001918  0E00               	movlw	0
  2877  00191A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2878  00191C  5005               	movf	___aldiv@divisor^0,w,c
  2879  00191E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2880  001920  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2881  001922  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2882  001924  B4D8               	btfsc	status,2,c
  2883  001926  EF97  F00C         	goto	u2051
  2884  00192A  EF99  F00C         	goto	u2050
  2885  00192E                     u2051:
  2886  00192E  EFCF  F00C         	goto	l2459
  2887  001932                     u2050:
  2888  001932  0E01               	movlw	1
  2889  001934  6E09               	movwf	___aldiv@counter^0,c
  2890  001936  EFA3  F00C         	goto	l2445
  2891  00193A                     l2443:
  2892  00193A  90D8               	bcf	status,0,c
  2893  00193C  3605               	rlcf	___aldiv@divisor^0,f,c
  2894  00193E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2895  001940  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2896  001942  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2897  001944  2A09               	incf	___aldiv@counter^0,f,c
  2898  001946                     l2445:
  2899  001946  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2900  001948  EFA8  F00C         	goto	u2061
  2901  00194C  EFAA  F00C         	goto	u2060
  2902  001950                     u2061:
  2903  001950  EF9D  F00C         	goto	l2443
  2904  001954                     u2060:
  2905  001954                     l2447:
  2906  001954  90D8               	bcf	status,0,c
  2907  001956  360B               	rlcf	___aldiv@quotient^0,f,c
  2908  001958  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2909  00195A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2910  00195C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2911  00195E  5005               	movf	___aldiv@divisor^0,w,c
  2912  001960  5C01               	subwf	___aldiv@dividend^0,w,c
  2913  001962  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2914  001964  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2915  001966  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2916  001968  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2917  00196A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2918  00196C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2919  00196E  A0D8               	btfss	status,0,c
  2920  001970  EFBC  F00C         	goto	u2071
  2921  001974  EFBE  F00C         	goto	u2070
  2922  001978                     u2071:
  2923  001978  EFC7  F00C         	goto	l2455
  2924  00197C                     u2070:
  2925  00197C  5005               	movf	___aldiv@divisor^0,w,c
  2926  00197E  5E01               	subwf	___aldiv@dividend^0,f,c
  2927  001980  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2928  001982  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2929  001984  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2930  001986  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2931  001988  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2932  00198A  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2933  00198C  800B               	bsf	___aldiv@quotient^0,0,c
  2934  00198E                     l2455:
  2935  00198E  90D8               	bcf	status,0,c
  2936  001990  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2937  001992  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2938  001994  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2939  001996  3205               	rrcf	___aldiv@divisor^0,f,c
  2940  001998  2E09               	decfsz	___aldiv@counter^0,f,c
  2941  00199A  EFAA  F00C         	goto	l2447
  2942  00199E                     l2459:
  2943  00199E  500A               	movf	___aldiv@sign^0,w,c
  2944  0019A0  B4D8               	btfsc	status,2,c
  2945  0019A2  EFD5  F00C         	goto	u2081
  2946  0019A6  EFD7  F00C         	goto	u2080
  2947  0019AA                     u2081:
  2948  0019AA  EFDF  F00C         	goto	l2463
  2949  0019AE                     u2080:
  2950  0019AE  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2951  0019B0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2952  0019B2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2953  0019B4  6C0B               	negf	___aldiv@quotient^0,c
  2954  0019B6  0E00               	movlw	0
  2955  0019B8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2956  0019BA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2957  0019BC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2958  0019BE                     l2463:
  2959  0019BE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2960  0019C2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2961  0019C6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2962  0019CA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2963  0019CE  0012               	return		;funcret
  2964  0019D0                     __end_of___aldiv:
  2965                           	callstack 0
  2966                           
  2967 ;; *************** function _modo *****************
  2968 ;; Defined at:
  2969 ;;		line 8 in file "modo.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  m               2   20[COMRAM] int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2983 ;;      Params:         2       0       0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0
  2985 ;;      Temps:          2       0       0       0       0       0       0
  2986 ;;      Totals:         4       0       0       0       0       0       0
  2987 ;;Total ram usage:        4 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 6
  2990 ;; This function calls:
  2991 ;;		_lcdChar
  2992 ;;		_lcdPosition
  2993 ;;		_lcdString
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text14
  3000  001B80                     __ptext14:
  3001                           	callstack 0
  3002  001B80                     _modo:
  3003                           	callstack 24
  3004  001B80                     
  3005                           ;modo.c: 9:     lcdPosition(1,11);
  3006  001B80  0E00               	movlw	0
  3007  001B82  6E10               	movwf	(lcdPosition@line+1)^0,c
  3008  001B84  0E01               	movlw	1
  3009  001B86  6E0F               	movwf	lcdPosition@line^0,c
  3010  001B88  0E00               	movlw	0
  3011  001B8A  6E12               	movwf	(lcdPosition@col+1)^0,c
  3012  001B8C  0E0B               	movlw	11
  3013  001B8E  6E11               	movwf	lcdPosition@col^0,c
  3014  001B90  EC2D  F011         	call	_lcdPosition	;wreg free
  3015                           
  3016                           ;modo.c: 10:     switch(m){
  3017  001B94  EFFB  F00D         	goto	l3009
  3018  001B98                     l2995:
  3019                           
  3020                           ;modo.c: 12:             lcdString("Auto");
  3021  001B98  0E35               	movlw	low STR_21
  3022  001B9A  6E0F               	movwf	lcdString@msg^0,c
  3023  001B9C  0E06               	movlw	high STR_21
  3024  001B9E  6E10               	movwf	(lcdString@msg+1)^0,c
  3025  001BA0  EC4F  F010         	call	_lcdString	;wreg free
  3026                           
  3027                           ;modo.c: 13:         break;
  3028  001BA4  EF19  F00E         	goto	l506
  3029  001BA8                     l2997:
  3030                           
  3031                           ;modo.c: 15:             lcdString("*");
  3032  001BA8  0E3E               	movlw	low STR_22
  3033  001BAA  6E0F               	movwf	lcdString@msg^0,c
  3034  001BAC  0E06               	movlw	high STR_22
  3035  001BAE  6E10               	movwf	(lcdString@msg+1)^0,c
  3036  001BB0  EC4F  F010         	call	_lcdString	;wreg free
  3037                           
  3038                           ;modo.c: 16:             lcdString("   ");
  3039  001BB4  0E3A               	movlw	low STR_23
  3040  001BB6  6E0F               	movwf	lcdString@msg^0,c
  3041  001BB8  0E06               	movlw	high STR_23
  3042  001BBA  6E10               	movwf	(lcdString@msg+1)^0,c
  3043  001BBC  EC4F  F010         	call	_lcdString	;wreg free
  3044                           
  3045                           ;modo.c: 18:         break;
  3046  001BC0  EF19  F00E         	goto	l506
  3047  001BC4                     l2999:
  3048                           
  3049                           ;modo.c: 20:             lcdChar(4);
  3050  001BC4  0E04               	movlw	4
  3051  001BC6  EC27  F012         	call	_lcdChar
  3052                           
  3053                           ;modo.c: 21:             lcdChar(4);
  3054  001BCA  0E04               	movlw	4
  3055  001BCC  EC27  F012         	call	_lcdChar
  3056  001BD0                     
  3057                           ;modo.c: 22:             lcdString("  ");
  3058  001BD0  0E3B               	movlw	low (STR_23+1)
  3059  001BD2  6E0F               	movwf	lcdString@msg^0,c
  3060  001BD4  0E06               	movlw	high (STR_23+1)
  3061  001BD6  6E10               	movwf	(lcdString@msg+1)^0,c
  3062  001BD8  EC4F  F010         	call	_lcdString	;wreg free
  3063                           
  3064                           ;modo.c: 23:         break;
  3065  001BDC  EF19  F00E         	goto	l506
  3066  001BE0                     l3003:
  3067                           
  3068                           ;modo.c: 25:             lcdChar(5);
  3069  001BE0  0E05               	movlw	5
  3070  001BE2  EC27  F012         	call	_lcdChar
  3071  001BE6                     
  3072                           ;modo.c: 26:             lcdString("   ");
  3073  001BE6  0E3A               	movlw	low STR_23
  3074  001BE8  6E0F               	movwf	lcdString@msg^0,c
  3075  001BEA  0E06               	movlw	high STR_23
  3076  001BEC  6E10               	movwf	(lcdString@msg+1)^0,c
  3077  001BEE  EC4F  F010         	call	_lcdString	;wreg free
  3078                           
  3079                           ;modo.c: 27:         break;
  3080  001BF2  EF19  F00E         	goto	l506
  3081  001BF6                     l3009:
  3082  001BF6  C015  F017         	movff	modo@m,??_modo
  3083  001BFA  C016  F018         	movff	modo@m+1,??_modo+1
  3084                           
  3085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3086                           ; Switch size 1, requested type "simple"
  3087                           ; Number of cases is 1, Range of values is 0 to 0
  3088                           ; switch strategies available:
  3089                           ; Name         Instructions Cycles
  3090                           ; simple_byte            4     3 (average)
  3091                           ;	Chosen strategy is simple_byte
  3092  001BFE  5018               	movf	(??_modo+1)^0,w,c
  3093  001C00  0A00               	xorlw	0	; case 0
  3094  001C02  B4D8               	btfsc	status,2,c
  3095  001C04  EF06  F00E         	goto	l3387
  3096  001C08  EF19  F00E         	goto	l506
  3097  001C0C                     l3387:
  3098                           
  3099                           ; Switch size 1, requested type "simple"
  3100                           ; Number of cases is 4, Range of values is 0 to 3
  3101                           ; switch strategies available:
  3102                           ; Name         Instructions Cycles
  3103                           ; simple_byte           13     7 (average)
  3104                           ;	Chosen strategy is simple_byte
  3105  001C0C  5017               	movf	??_modo^0,w,c
  3106  001C0E  0A00               	xorlw	0	; case 0
  3107  001C10  B4D8               	btfsc	status,2,c
  3108  001C12  EFCC  F00D         	goto	l2995
  3109  001C16  0A01               	xorlw	1	; case 1
  3110  001C18  B4D8               	btfsc	status,2,c
  3111  001C1A  EFD4  F00D         	goto	l2997
  3112  001C1E  0A03               	xorlw	3	; case 2
  3113  001C20  B4D8               	btfsc	status,2,c
  3114  001C22  EFE2  F00D         	goto	l2999
  3115  001C26  0A01               	xorlw	1	; case 3
  3116  001C28  B4D8               	btfsc	status,2,c
  3117  001C2A  EFF0  F00D         	goto	l3003
  3118  001C2E  EF19  F00E         	goto	l506
  3119  001C32                     l506:
  3120  001C32  0012               	return		;funcret
  3121  001C34                     __end_of_modo:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _lcdInit *****************
  3125 ;; Defined at:
  3126 ;;		line 73 in file "lcd.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3140 ;;      Params:         0       0       0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 5
  3147 ;; This function calls:
  3148 ;;		_delayMicro
  3149 ;;		_delayMili
  3150 ;;		_lcdCommand
  3151 ;;		_pinMode
  3152 ;;		_pushNibble
  3153 ;;		_soInit
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text15
  3160  001C34                     __ptext15:
  3161                           	callstack 0
  3162  001C34                     _lcdInit:
  3163                           	callstack 25
  3164  001C34                     
  3165                           ;lcd.c: 74:  pinMode(PIN_D4, 0);
  3166  001C34  0E00               	movlw	0
  3167  001C36  6E02               	movwf	(pinMode@pin+1)^0,c
  3168  001C38  0E1C               	movlw	28
  3169  001C3A  6E01               	movwf	pinMode@pin^0,c
  3170  001C3C  0E00               	movlw	0
  3171  001C3E  6E04               	movwf	(pinMode@type+1)^0,c
  3172  001C40  0E00               	movlw	0
  3173  001C42  6E03               	movwf	pinMode@type^0,c
  3174  001C44  EC70  F008         	call	_pinMode	;wreg free
  3175                           
  3176                           ;lcd.c: 75:  pinMode(PIN_D5, 0);
  3177  001C48  0E00               	movlw	0
  3178  001C4A  6E02               	movwf	(pinMode@pin+1)^0,c
  3179  001C4C  0E1D               	movlw	29
  3180  001C4E  6E01               	movwf	pinMode@pin^0,c
  3181  001C50  0E00               	movlw	0
  3182  001C52  6E04               	movwf	(pinMode@type+1)^0,c
  3183  001C54  0E00               	movlw	0
  3184  001C56  6E03               	movwf	pinMode@type^0,c
  3185  001C58  EC70  F008         	call	_pinMode	;wreg free
  3186                           
  3187                           ;lcd.c: 76:  soInit();
  3188  001C5C  EC0E  F011         	call	_soInit	;wreg free
  3189                           
  3190                           ;lcd.c: 77:  delayMili(15);
  3191  001C60  0E00               	movlw	0
  3192  001C62  6E02               	movwf	(delayMili@a+1)^0,c
  3193  001C64  0E0F               	movlw	15
  3194  001C66  6E01               	movwf	delayMili@a^0,c
  3195  001C68  EC63  F011         	call	_delayMili	;wreg free
  3196                           
  3197                           ;lcd.c: 79:  pushNibble(0x03, 0);
  3198  001C6C  0E00               	movlw	0
  3199  001C6E  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3200  001C70  0E00               	movlw	0
  3201  001C72  6E0A               	movwf	pushNibble@rs^0,c
  3202  001C74  0E03               	movlw	3
  3203  001C76  ECE2  F011         	call	_pushNibble
  3204                           
  3205                           ;lcd.c: 80:  delayMili(5);
  3206  001C7A  0E00               	movlw	0
  3207  001C7C  6E02               	movwf	(delayMili@a+1)^0,c
  3208  001C7E  0E05               	movlw	5
  3209  001C80  6E01               	movwf	delayMili@a^0,c
  3210  001C82  EC63  F011         	call	_delayMili	;wreg free
  3211                           
  3212                           ;lcd.c: 81:  pushNibble(0x03, 0);
  3213  001C86  0E00               	movlw	0
  3214  001C88  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3215  001C8A  0E00               	movlw	0
  3216  001C8C  6E0A               	movwf	pushNibble@rs^0,c
  3217  001C8E  0E03               	movlw	3
  3218  001C90  ECE2  F011         	call	_pushNibble
  3219  001C94                     
  3220                           ;lcd.c: 82:  delayMicro(160);
  3221  001C94  0E00               	movlw	0
  3222  001C96  6E02               	movwf	(delayMicro@a+1)^0,c
  3223  001C98  0EA0               	movlw	160
  3224  001C9A  6E01               	movwf	delayMicro@a^0,c
  3225  001C9C  EC6B  F012         	call	_delayMicro	;wreg free
  3226  001CA0                     
  3227                           ;lcd.c: 83:  pushNibble(0x03, 0);
  3228  001CA0  0E00               	movlw	0
  3229  001CA2  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3230  001CA4  0E00               	movlw	0
  3231  001CA6  6E0A               	movwf	pushNibble@rs^0,c
  3232  001CA8  0E03               	movlw	3
  3233  001CAA  ECE2  F011         	call	_pushNibble
  3234                           
  3235                           ;lcd.c: 84:  delayMicro(160);
  3236  001CAE  0E00               	movlw	0
  3237  001CB0  6E02               	movwf	(delayMicro@a+1)^0,c
  3238  001CB2  0EA0               	movlw	160
  3239  001CB4  6E01               	movwf	delayMicro@a^0,c
  3240  001CB6  EC6B  F012         	call	_delayMicro	;wreg free
  3241  001CBA                     
  3242                           ;lcd.c: 86:  pushNibble(0x02, 0);
  3243  001CBA  0E00               	movlw	0
  3244  001CBC  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3245  001CBE  0E00               	movlw	0
  3246  001CC0  6E0A               	movwf	pushNibble@rs^0,c
  3247  001CC2  0E02               	movlw	2
  3248  001CC4  ECE2  F011         	call	_pushNibble
  3249  001CC8                     
  3250                           ;lcd.c: 87:  delayMili(10);
  3251  001CC8  0E00               	movlw	0
  3252  001CCA  6E02               	movwf	(delayMili@a+1)^0,c
  3253  001CCC  0E0A               	movlw	10
  3254  001CCE  6E01               	movwf	delayMili@a^0,c
  3255  001CD0  EC63  F011         	call	_delayMili	;wreg free
  3256  001CD4                     
  3257                           ;lcd.c: 89:  lcdCommand(0x28);
  3258  001CD4  0E28               	movlw	40
  3259  001CD6  EC36  F012         	call	_lcdCommand
  3260  001CDA                     
  3261                           ;lcd.c: 90:  lcdCommand(0x08 + 0x04);
  3262  001CDA  0E0C               	movlw	12
  3263  001CDC  EC36  F012         	call	_lcdCommand
  3264  001CE0                     
  3265                           ;lcd.c: 91:  lcdCommand(0x01);
  3266  001CE0  0E01               	movlw	1
  3267  001CE2  EC36  F012         	call	_lcdCommand
  3268  001CE6  0012               	return		;funcret
  3269  001CE8                     __end_of_lcdInit:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _pushNibble *****************
  3273 ;; Defined at:
  3274 ;;		line 25 in file "lcd.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  value           1    wreg     unsigned char 
  3277 ;;  rs              2    9[COMRAM] int 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  value           1   11[COMRAM] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3289 ;;      Params:         2       0       0       0       0       0       0
  3290 ;;      Locals:         1       0       0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0
  3292 ;;      Totals:         3       0       0       0       0       0       0
  3293 ;;Total ram usage:        3 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 3
  3296 ;; This function calls:
  3297 ;;		_digitalWrite
  3298 ;;		_pulseEnablePin
  3299 ;;		_soWrite
  3300 ;; This function is called by:
  3301 ;;		_lcdInit
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text16
  3306  0023C4                     __ptext16:
  3307                           	callstack 0
  3308  0023C4                     _pushNibble:
  3309                           	callstack 26
  3310                           
  3311                           ;incstack = 0
  3312                           ;pushNibble@value stored from wreg
  3313  0023C4  6E0C               	movwf	pushNibble@value^0,c
  3314  0023C6                     
  3315                           ;lcd.c: 26:  soWrite(value);
  3316  0023C6  C00C  F007         	movff	pushNibble@value,soWrite@value
  3317  0023CA  6A08               	clrf	(soWrite@value+1)^0,c
  3318  0023CC  ECA2  F010         	call	_soWrite	;wreg free
  3319                           
  3320                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  3321  0023D0  0E00               	movlw	0
  3322  0023D2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3323  0023D4  0E1D               	movlw	29
  3324  0023D6  6E01               	movwf	digitalWrite@pin^0,c
  3325  0023D8  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  3326  0023DC  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  3327  0023E0  EC49  F007         	call	_digitalWrite	;wreg free
  3328                           
  3329                           ;lcd.c: 28:  pulseEnablePin();
  3330  0023E4  ECED  F010         	call	_pulseEnablePin	;wreg free
  3331  0023E8  0012               	return		;funcret
  3332  0023EA                     __end_of_pushNibble:
  3333                           	callstack 0
  3334                           
  3335 ;; *************** function _kpRead *****************
  3336 ;; Defined at:
  3337 ;;		line 14 in file "keypad.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  2    0[COMRAM] unsigned int 
  3344 ;; Registers used:
  3345 ;;		None
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3351 ;;      Params:         2       0       0       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0
  3354 ;;      Totals:         2       0       0       0       0       0       0
  3355 ;;Total ram usage:        2 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text17
  3365  0024C4                     __ptext17:
  3366                           	callstack 0
  3367  0024C4                     _kpRead:
  3368                           	callstack 30
  3369  0024C4                     
  3370                           ;keypad.c: 15:     return keys;
  3371  0024C4  C073  F001         	movff	_keys,?_kpRead
  3372  0024C8  C074  F002         	movff	_keys+1,?_kpRead+1
  3373  0024CC  0012               	return		;funcret
  3374  0024CE                     __end_of_kpRead:
  3375                           	callstack 0
  3376                           
  3377 ;; *************** function _kpInit *****************
  3378 ;; Defined at:
  3379 ;;		line 54 in file "keypad.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, status,2, status,0, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3393 ;;      Params:         0       0       0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0       0       0
  3396 ;;      Totals:         0       0       0       0       0       0       0
  3397 ;;Total ram usage:        0 bytes
  3398 ;; Hardware stack levels used: 1
  3399 ;; Hardware stack levels required when called: 2
  3400 ;; This function calls:
  3401 ;;		_pinMode
  3402 ;;		_soInit
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text18
  3409  002294                     __ptext18:
  3410                           	callstack 0
  3411  002294                     _kpInit:
  3412                           	callstack 28
  3413  002294                     
  3414                           ;keypad.c: 55:   soInit();
  3415  002294  EC0E  F011         	call	_soInit	;wreg free
  3416                           
  3417                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  3418  002298  0E00               	movlw	0
  3419  00229A  6E02               	movwf	(pinMode@pin+1)^0,c
  3420  00229C  0E0A               	movlw	10
  3421  00229E  6E01               	movwf	pinMode@pin^0,c
  3422  0022A0  0E00               	movlw	0
  3423  0022A2  6E04               	movwf	(pinMode@type+1)^0,c
  3424  0022A4  0E01               	movlw	1
  3425  0022A6  6E03               	movwf	pinMode@type^0,c
  3426  0022A8  EC70  F008         	call	_pinMode	;wreg free
  3427                           
  3428                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3429  0022AC  0E00               	movlw	0
  3430  0022AE  6E02               	movwf	(pinMode@pin+1)^0,c
  3431  0022B0  0E09               	movlw	9
  3432  0022B2  6E01               	movwf	pinMode@pin^0,c
  3433  0022B4  0E00               	movlw	0
  3434  0022B6  6E04               	movwf	(pinMode@type+1)^0,c
  3435  0022B8  0E01               	movlw	1
  3436  0022BA  6E03               	movwf	pinMode@type^0,c
  3437  0022BC  EC70  F008         	call	_pinMode	;wreg free
  3438  0022C0                     
  3439                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3440  0022C0  0E0C               	movlw	12
  3441  0022C2  6EC1               	movwf	193,c	;volatile
  3442  0022C4  0012               	return		;funcret
  3443  0022C6                     __end_of_kpInit:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _soInit *****************
  3447 ;; Defined at:
  3448 ;;		line 3 in file "so.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3462 ;;      Params:         0       0       0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used: 1
  3468 ;; Hardware stack levels required when called: 1
  3469 ;; This function calls:
  3470 ;;		_pinMode
  3471 ;; This function is called by:
  3472 ;;		_kpInit
  3473 ;;		_lcdInit
  3474 ;;		_ssdInit
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text19
  3479  00221C                     __ptext19:
  3480                           	callstack 0
  3481  00221C                     _soInit:
  3482                           	callstack 28
  3483  00221C                     
  3484                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3485  00221C  0E00               	movlw	0
  3486  00221E  6E02               	movwf	(pinMode@pin+1)^0,c
  3487  002220  0E1F               	movlw	31
  3488  002222  6E01               	movwf	pinMode@pin^0,c
  3489  002224  0E00               	movlw	0
  3490  002226  6E04               	movwf	(pinMode@type+1)^0,c
  3491  002228  0E00               	movlw	0
  3492  00222A  6E03               	movwf	pinMode@type^0,c
  3493  00222C  EC70  F008         	call	_pinMode	;wreg free
  3494                           
  3495                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3496  002230  0E00               	movlw	0
  3497  002232  6E02               	movwf	(pinMode@pin+1)^0,c
  3498  002234  0E08               	movlw	8
  3499  002236  6E01               	movwf	pinMode@pin^0,c
  3500  002238  0E00               	movlw	0
  3501  00223A  6E04               	movwf	(pinMode@type+1)^0,c
  3502  00223C  0E00               	movlw	0
  3503  00223E  6E03               	movwf	pinMode@type^0,c
  3504  002240  EC70  F008         	call	_pinMode	;wreg free
  3505                           
  3506                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3507  002244  0E00               	movlw	0
  3508  002246  6E02               	movwf	(pinMode@pin+1)^0,c
  3509  002248  0E1E               	movlw	30
  3510  00224A  6E01               	movwf	pinMode@pin^0,c
  3511  00224C  0E00               	movlw	0
  3512  00224E  6E04               	movwf	(pinMode@type+1)^0,c
  3513  002250  0E00               	movlw	0
  3514  002252  6E03               	movwf	pinMode@type^0,c
  3515  002254  EC70  F008         	call	_pinMode	;wreg free
  3516  002258  0012               	return		;funcret
  3517  00225A                     __end_of_soInit:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _kpDebounce *****************
  3521 ;; Defined at:
  3522 ;;		line 27 in file "keypad.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  i               2   12[COMRAM] int 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3536 ;;      Params:         0       0       0       0       0       0       0
  3537 ;;      Locals:         2       0       0       0       0       0       0
  3538 ;;      Temps:          3       0       0       0       0       0       0
  3539 ;;      Totals:         5       0       0       0       0       0       0
  3540 ;;Total ram usage:        5 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 3
  3543 ;; This function calls:
  3544 ;;		_digitalRead
  3545 ;;		_soWrite
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text20
  3552  00178E                     __ptext20:
  3553                           	callstack 0
  3554  00178E                     _kpDebounce:
  3555                           	callstack 27
  3556  00178E                     
  3557                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3558  00178E  0E00               	movlw	0
  3559  001790  6E72               	movwf	(kpDebounce@newRead+1)^0,c
  3560  001792  0E00               	movlw	0
  3561  001794  6E71               	movwf	kpDebounce@newRead^0,c
  3562                           
  3563                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3564  001796  0E00               	movlw	0
  3565  001798  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3566  00179A  0E00               	movlw	0
  3567  00179C  6E0D               	movwf	kpDebounce@i^0,c
  3568  00179E                     l2697:
  3569  00179E  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3570  0017A0  EFDB  F00B         	goto	u2411
  3571  0017A4  500E               	movf	(kpDebounce@i+1)^0,w,c
  3572  0017A6  E109               	bnz	u2410
  3573  0017A8  0E05               	movlw	5
  3574  0017AA  5C0D               	subwf	kpDebounce@i^0,w,c
  3575  0017AC  A0D8               	btfss	status,0,c
  3576  0017AE  EFDB  F00B         	goto	u2411
  3577  0017B2  EFDD  F00B         	goto	u2410
  3578  0017B6                     u2411:
  3579  0017B6  EFDF  F00B         	goto	l2701
  3580  0017BA                     u2410:
  3581  0017BA  EF40  F00C         	goto	l2713
  3582  0017BE                     l2701:
  3583                           
  3584                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3585  0017BE  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3586  0017C2  0E03               	movlw	3
  3587  0017C4  260A               	addwf	??_kpDebounce^0,f,c
  3588  0017C6  0E01               	movlw	1
  3589  0017C8  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3590  0017CA  0E00               	movlw	0
  3591  0017CC  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3592  0017CE  2A0A               	incf	??_kpDebounce^0,f,c
  3593  0017D0  EFED  F00B         	goto	u2424
  3594  0017D4                     u2425:
  3595  0017D4  90D8               	bcf	status,0,c
  3596  0017D6  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3597  0017D8  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3598  0017DA                     u2424:
  3599  0017DA  2E0A               	decfsz	??_kpDebounce^0,f,c
  3600  0017DC  EFEA  F00B         	goto	u2425
  3601  0017E0  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3602  0017E4  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3603  0017E8  ECA2  F010         	call	_soWrite	;wreg free
  3604                           
  3605                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3606  0017EC  0E00               	movlw	0
  3607  0017EE  6E02               	movwf	(digitalRead@pin+1)^0,c
  3608  0017F0  0E0A               	movlw	10
  3609  0017F2  6E01               	movwf	digitalRead@pin^0,c
  3610  0017F4  EC12  F00B         	call	_digitalRead	;wreg free
  3611  0017F8  5001               	movf	?_digitalRead^0,w,c
  3612  0017FA  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3613  0017FC  B4D8               	btfsc	status,2,c
  3614  0017FE  EF03  F00C         	goto	u2431
  3615  001802  EF05  F00C         	goto	u2430
  3616  001806                     u2431:
  3617  001806  EF18  F00C         	goto	l2705
  3618  00180A                     u2430:
  3619  00180A                     
  3620                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3621  00180A  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3622  00180E  0E01               	movlw	1
  3623  001810  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3624  001812  0E00               	movlw	0
  3625  001814  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3626  001816  2A0A               	incf	??_kpDebounce^0,f,c
  3627  001818  EF11  F00C         	goto	u2444
  3628  00181C                     u2445:
  3629  00181C  90D8               	bcf	status,0,c
  3630  00181E  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3631  001820  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3632  001822                     u2444:
  3633  001822  2E0A               	decfsz	??_kpDebounce^0,f,c
  3634  001824  EF0E  F00C         	goto	u2445
  3635  001828  500B               	movf	(??_kpDebounce+1)^0,w,c
  3636  00182A  1271               	iorwf	kpDebounce@newRead^0,f,c
  3637  00182C  500C               	movf	(??_kpDebounce+2)^0,w,c
  3638  00182E  1272               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3639  001830                     l2705:
  3640                           
  3641                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3642  001830  0E00               	movlw	0
  3643  001832  6E02               	movwf	(digitalRead@pin+1)^0,c
  3644  001834  0E09               	movlw	9
  3645  001836  6E01               	movwf	digitalRead@pin^0,c
  3646  001838  EC12  F00B         	call	_digitalRead	;wreg free
  3647  00183C  5001               	movf	?_digitalRead^0,w,c
  3648  00183E  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3649  001840  B4D8               	btfsc	status,2,c
  3650  001842  EF25  F00C         	goto	u2451
  3651  001846  EF27  F00C         	goto	u2450
  3652  00184A                     u2451:
  3653  00184A  EF3C  F00C         	goto	l2709
  3654  00184E                     u2450:
  3655  00184E                     
  3656                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3657  00184E  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3658  001852  0E05               	movlw	5
  3659  001854  260A               	addwf	??_kpDebounce^0,f,c
  3660  001856  0E01               	movlw	1
  3661  001858  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3662  00185A  0E00               	movlw	0
  3663  00185C  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3664  00185E  2A0A               	incf	??_kpDebounce^0,f,c
  3665  001860  EF35  F00C         	goto	u2464
  3666  001864                     u2465:
  3667  001864  90D8               	bcf	status,0,c
  3668  001866  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3669  001868  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3670  00186A                     u2464:
  3671  00186A  2E0A               	decfsz	??_kpDebounce^0,f,c
  3672  00186C  EF32  F00C         	goto	u2465
  3673  001870  500B               	movf	(??_kpDebounce+1)^0,w,c
  3674  001872  1271               	iorwf	kpDebounce@newRead^0,f,c
  3675  001874  500C               	movf	(??_kpDebounce+2)^0,w,c
  3676  001876  1272               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3677  001878                     l2709:
  3678                           
  3679                           ;keypad.c: 42:     }
  3680  001878  4A0D               	infsnz	kpDebounce@i^0,f,c
  3681  00187A  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3682  00187C  EFCF  F00B         	goto	l2697
  3683  001880                     l2713:
  3684                           
  3685                           ;keypad.c: 43:     if (oldRead == newRead) {
  3686  001880  5071               	movf	kpDebounce@newRead^0,w,c
  3687  001882  186F               	xorwf	kpDebounce@oldRead^0,w,c
  3688  001884  E107               	bnz	u2471
  3689  001886  5072               	movf	(kpDebounce@newRead+1)^0,w,c
  3690  001888  1870               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3691  00188A  A4D8               	btfss	status,2,c
  3692  00188C  EF4A  F00C         	goto	u2471
  3693  001890  EF4C  F00C         	goto	u2470
  3694  001894                     u2471:
  3695  001894  EF4F  F00C         	goto	l2717
  3696  001898                     u2470:
  3697  001898                     
  3698                           ;keypad.c: 44:         tempo--;
  3699  001898  067B               	decf	kpDebounce@tempo^0,f,c
  3700                           
  3701                           ;keypad.c: 45:     } else {
  3702  00189A  EF55  F00C         	goto	l154
  3703  00189E                     l2717:
  3704                           
  3705                           ;keypad.c: 46:         tempo = 1;
  3706  00189E  0E01               	movlw	1
  3707  0018A0  6E7B               	movwf	kpDebounce@tempo^0,c
  3708  0018A2                     
  3709                           ;keypad.c: 47:         oldRead = newRead;
  3710  0018A2  C071  F06F         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3711  0018A6  C072  F070         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3712  0018AA                     l154:
  3713                           
  3714                           ;keypad.c: 49:     if (tempo == 0) {
  3715  0018AA  507B               	movf	kpDebounce@tempo^0,w,c
  3716  0018AC  A4D8               	btfss	status,2,c
  3717  0018AE  EF5B  F00C         	goto	u2481
  3718  0018B2  EF5D  F00C         	goto	u2480
  3719  0018B6                     u2481:
  3720  0018B6  EF61  F00C         	goto	l156
  3721  0018BA                     u2480:
  3722  0018BA                     
  3723                           ;keypad.c: 50:         keys = oldRead;
  3724  0018BA  C06F  F073         	movff	kpDebounce@oldRead,_keys
  3725  0018BE  C070  F074         	movff	kpDebounce@oldRead+1,_keys+1
  3726  0018C2                     l156:
  3727  0018C2  0012               	return		;funcret
  3728  0018C4                     __end_of_kpDebounce:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _digitalRead *****************
  3732 ;; Defined at:
  3733 ;;		line 39 in file "io.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  pin             2    0[COMRAM] int 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2    0[COMRAM] int 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3747 ;;      Params:         2       0       0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0
  3749 ;;      Temps:          3       0       0       0       0       0       0
  3750 ;;      Totals:         5       0       0       0       0       0       0
  3751 ;;Total ram usage:        5 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_kpDebounce
  3757 ;;		_read_SCL
  3758 ;;		_read_SDA
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text21
  3763  001624                     __ptext21:
  3764                           	callstack 0
  3765  001624                     _digitalRead:
  3766                           	callstack 29
  3767  001624                     
  3768                           ;io.c: 40:     if(pin <8){
  3769  001624  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3770  001626  EF20  F00B         	goto	u2120
  3771  00162A  5002               	movf	(digitalRead@pin+1)^0,w,c
  3772  00162C  E107               	bnz	u2121
  3773  00162E  0E08               	movlw	8
  3774  001630  5C01               	subwf	digitalRead@pin^0,w,c
  3775  001632  B0D8               	btfsc	status,0,c
  3776  001634  EF1E  F00B         	goto	u2121
  3777  001638  EF20  F00B         	goto	u2120
  3778  00163C                     u2121:
  3779  00163C  EF34  F00B         	goto	l2491
  3780  001640                     u2120:
  3781  001640                     
  3782                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  3783  001640  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3784  001644  0E01               	movlw	1
  3785  001646  6E04               	movwf	(??_digitalRead+1)^0,c
  3786  001648  2A03               	incf	??_digitalRead^0,f,c
  3787  00164A  EF29  F00B         	goto	u2134
  3788  00164E                     u2135:
  3789  00164E  90D8               	bcf	status,0,c
  3790  001650  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3791  001652                     u2134:
  3792  001652  2E03               	decfsz	??_digitalRead^0,f,c
  3793  001654  EF27  F00B         	goto	u2135
  3794  001658  5004               	movf	(??_digitalRead+1)^0,w,c
  3795  00165A  1480               	andwf	128,w,c	;volatile
  3796  00165C  6E05               	movwf	(??_digitalRead+2)^0,c
  3797  00165E  5005               	movf	(??_digitalRead+2)^0,w,c
  3798  001660  6E01               	movwf	?_digitalRead^0,c
  3799  001662  6A02               	clrf	(?_digitalRead+1)^0,c
  3800  001664  EFC6  F00B         	goto	l87
  3801  001668                     l2491:
  3802  001668  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3803  00166A  EF42  F00B         	goto	u2140
  3804  00166E  5002               	movf	(digitalRead@pin+1)^0,w,c
  3805  001670  E107               	bnz	u2141
  3806  001672  0E10               	movlw	16
  3807  001674  5C01               	subwf	digitalRead@pin^0,w,c
  3808  001676  B0D8               	btfsc	status,0,c
  3809  001678  EF40  F00B         	goto	u2141
  3810  00167C  EF42  F00B         	goto	u2140
  3811  001680                     u2141:
  3812  001680  EF58  F00B         	goto	l2499
  3813  001684                     u2140:
  3814  001684                     
  3815                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  3816  001684  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3817  001688  0EF8               	movlw	-8
  3818  00168A  2603               	addwf	??_digitalRead^0,f,c
  3819  00168C  0E01               	movlw	1
  3820  00168E  6E04               	movwf	(??_digitalRead+1)^0,c
  3821  001690  2A03               	incf	??_digitalRead^0,f,c
  3822  001692  EF4D  F00B         	goto	u2154
  3823  001696                     u2155:
  3824  001696  90D8               	bcf	status,0,c
  3825  001698  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3826  00169A                     u2154:
  3827  00169A  2E03               	decfsz	??_digitalRead^0,f,c
  3828  00169C  EF4B  F00B         	goto	u2155
  3829  0016A0  5004               	movf	(??_digitalRead+1)^0,w,c
  3830  0016A2  1481               	andwf	129,w,c	;volatile
  3831  0016A4  6E05               	movwf	(??_digitalRead+2)^0,c
  3832  0016A6  5005               	movf	(??_digitalRead+2)^0,w,c
  3833  0016A8  6E01               	movwf	?_digitalRead^0,c
  3834  0016AA  6A02               	clrf	(?_digitalRead+1)^0,c
  3835  0016AC  EFC6  F00B         	goto	l87
  3836  0016B0                     l2499:
  3837  0016B0  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3838  0016B2  EF66  F00B         	goto	u2160
  3839  0016B6  5002               	movf	(digitalRead@pin+1)^0,w,c
  3840  0016B8  E107               	bnz	u2161
  3841  0016BA  0E18               	movlw	24
  3842  0016BC  5C01               	subwf	digitalRead@pin^0,w,c
  3843  0016BE  B0D8               	btfsc	status,0,c
  3844  0016C0  EF64  F00B         	goto	u2161
  3845  0016C4  EF66  F00B         	goto	u2160
  3846  0016C8                     u2161:
  3847  0016C8  EF7C  F00B         	goto	l2507
  3848  0016CC                     u2160:
  3849  0016CC                     
  3850                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  3851  0016CC  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3852  0016D0  0EF0               	movlw	-16
  3853  0016D2  2603               	addwf	??_digitalRead^0,f,c
  3854  0016D4  0E01               	movlw	1
  3855  0016D6  6E04               	movwf	(??_digitalRead+1)^0,c
  3856  0016D8  2A03               	incf	??_digitalRead^0,f,c
  3857  0016DA  EF71  F00B         	goto	u2174
  3858  0016DE                     u2175:
  3859  0016DE  90D8               	bcf	status,0,c
  3860  0016E0  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3861  0016E2                     u2174:
  3862  0016E2  2E03               	decfsz	??_digitalRead^0,f,c
  3863  0016E4  EF6F  F00B         	goto	u2175
  3864  0016E8  5004               	movf	(??_digitalRead+1)^0,w,c
  3865  0016EA  1482               	andwf	130,w,c	;volatile
  3866  0016EC  6E05               	movwf	(??_digitalRead+2)^0,c
  3867  0016EE  5005               	movf	(??_digitalRead+2)^0,w,c
  3868  0016F0  6E01               	movwf	?_digitalRead^0,c
  3869  0016F2  6A02               	clrf	(?_digitalRead+1)^0,c
  3870  0016F4  EFC6  F00B         	goto	l87
  3871  0016F8                     l2507:
  3872  0016F8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3873  0016FA  EF8A  F00B         	goto	u2180
  3874  0016FE  5002               	movf	(digitalRead@pin+1)^0,w,c
  3875  001700  E107               	bnz	u2181
  3876  001702  0E20               	movlw	32
  3877  001704  5C01               	subwf	digitalRead@pin^0,w,c
  3878  001706  B0D8               	btfsc	status,0,c
  3879  001708  EF88  F00B         	goto	u2181
  3880  00170C  EF8A  F00B         	goto	u2180
  3881  001710                     u2181:
  3882  001710  EFA0  F00B         	goto	l2515
  3883  001714                     u2180:
  3884  001714                     
  3885                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  3886  001714  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3887  001718  0EE8               	movlw	-24
  3888  00171A  2603               	addwf	??_digitalRead^0,f,c
  3889  00171C  0E01               	movlw	1
  3890  00171E  6E04               	movwf	(??_digitalRead+1)^0,c
  3891  001720  2A03               	incf	??_digitalRead^0,f,c
  3892  001722  EF95  F00B         	goto	u2194
  3893  001726                     u2195:
  3894  001726  90D8               	bcf	status,0,c
  3895  001728  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3896  00172A                     u2194:
  3897  00172A  2E03               	decfsz	??_digitalRead^0,f,c
  3898  00172C  EF93  F00B         	goto	u2195
  3899  001730  5004               	movf	(??_digitalRead+1)^0,w,c
  3900  001732  1483               	andwf	131,w,c	;volatile
  3901  001734  6E05               	movwf	(??_digitalRead+2)^0,c
  3902  001736  5005               	movf	(??_digitalRead+2)^0,w,c
  3903  001738  6E01               	movwf	?_digitalRead^0,c
  3904  00173A  6A02               	clrf	(?_digitalRead+1)^0,c
  3905  00173C  EFC6  F00B         	goto	l87
  3906  001740                     l2515:
  3907  001740  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3908  001742  EFAE  F00B         	goto	u2200
  3909  001746  5002               	movf	(digitalRead@pin+1)^0,w,c
  3910  001748  E107               	bnz	u2201
  3911  00174A  0E28               	movlw	40
  3912  00174C  5C01               	subwf	digitalRead@pin^0,w,c
  3913  00174E  B0D8               	btfsc	status,0,c
  3914  001750  EFAC  F00B         	goto	u2201
  3915  001754  EFAE  F00B         	goto	u2200
  3916  001758                     u2201:
  3917  001758  EFC4  F00B         	goto	l92
  3918  00175C                     u2200:
  3919  00175C                     
  3920                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  3921  00175C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3922  001760  0EE0               	movlw	-32
  3923  001762  2603               	addwf	??_digitalRead^0,f,c
  3924  001764  0E01               	movlw	1
  3925  001766  6E04               	movwf	(??_digitalRead+1)^0,c
  3926  001768  2A03               	incf	??_digitalRead^0,f,c
  3927  00176A  EFB9  F00B         	goto	u2214
  3928  00176E                     u2215:
  3929  00176E  90D8               	bcf	status,0,c
  3930  001770  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3931  001772                     u2214:
  3932  001772  2E03               	decfsz	??_digitalRead^0,f,c
  3933  001774  EFB7  F00B         	goto	u2215
  3934  001778  5004               	movf	(??_digitalRead+1)^0,w,c
  3935  00177A  1484               	andwf	132,w,c	;volatile
  3936  00177C  6E05               	movwf	(??_digitalRead+2)^0,c
  3937  00177E  5005               	movf	(??_digitalRead+2)^0,w,c
  3938  001780  6E01               	movwf	?_digitalRead^0,c
  3939  001782  6A02               	clrf	(?_digitalRead+1)^0,c
  3940  001784  EFC6  F00B         	goto	l87
  3941  001788                     l92:
  3942  001788                     
  3943                           ;io.c: 51:     return -1;
  3944  001788  6801               	setf	?_digitalRead^0,c
  3945  00178A  6802               	setf	(?_digitalRead+1)^0,c
  3946  00178C                     l87:
  3947  00178C  0012               	return		;funcret
  3948  00178E                     __end_of_digitalRead:
  3949                           	callstack 0
  3950                           
  3951 ;; *************** function _desenhoOn *****************
  3952 ;; Defined at:
  3953 ;;		line 108 in file "desenho.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;		None
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;		None
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1    wreg      void 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3967 ;;      Params:         0       0       0       0       0       0       0
  3968 ;;      Locals:         0       0       0       0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0       0       0
  3970 ;;      Totals:         0       0       0       0       0       0       0
  3971 ;;Total ram usage:        0 bytes
  3972 ;; Hardware stack levels used: 1
  3973 ;; Hardware stack levels required when called: 6
  3974 ;; This function calls:
  3975 ;;		_lcdPosition
  3976 ;;		_lcdString
  3977 ;; This function is called by:
  3978 ;;		_main
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text22
  3983  0022F6                     __ptext22:
  3984                           	callstack 0
  3985  0022F6                     _desenhoOn:
  3986                           	callstack 24
  3987  0022F6                     
  3988                           ;desenho.c: 109:       lcdPosition(0,5);
  3989  0022F6  0E00               	movlw	0
  3990  0022F8  6E10               	movwf	(lcdPosition@line+1)^0,c
  3991  0022FA  0E00               	movlw	0
  3992  0022FC  6E0F               	movwf	lcdPosition@line^0,c
  3993  0022FE  0E00               	movlw	0
  3994  002300  6E12               	movwf	(lcdPosition@col+1)^0,c
  3995  002302  0E05               	movlw	5
  3996  002304  6E11               	movwf	lcdPosition@col^0,c
  3997  002306  EC2D  F011         	call	_lcdPosition	;wreg free
  3998  00230A                     
  3999                           ;desenho.c: 110:       lcdString("Timer ON");
  4000  00230A  0E26               	movlw	low STR_8
  4001  00230C  6E0F               	movwf	lcdString@msg^0,c
  4002  00230E  0E06               	movlw	high STR_8
  4003  002310  6E10               	movwf	(lcdString@msg+1)^0,c
  4004  002312  EC4F  F010         	call	_lcdString	;wreg free
  4005  002316                     
  4006                           ;desenho.c: 111:       lcdString(" ");
  4007  002316  0E3C               	movlw	low (STR_23+2)
  4008  002318  6E0F               	movwf	lcdString@msg^0,c
  4009  00231A  0E06               	movlw	high (STR_23+2)
  4010  00231C  6E10               	movwf	(lcdString@msg+1)^0,c
  4011  00231E  EC4F  F010         	call	_lcdString	;wreg free
  4012  002322  0012               	return		;funcret
  4013  002324                     __end_of_desenhoOn:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _desenhoOff *****************
  4017 ;; Defined at:
  4018 ;;		line 114 in file "desenho.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4032 ;;      Params:         0       0       0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 6
  4039 ;; This function calls:
  4040 ;;		_lcdPosition
  4041 ;;		_lcdString
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text23
  4048  00240C                     __ptext23:
  4049                           	callstack 0
  4050  00240C                     _desenhoOff:
  4051                           	callstack 24
  4052  00240C                     
  4053                           ;desenho.c: 115:         lcdPosition(0,5);
  4054  00240C  0E00               	movlw	0
  4055  00240E  6E10               	movwf	(lcdPosition@line+1)^0,c
  4056  002410  0E00               	movlw	0
  4057  002412  6E0F               	movwf	lcdPosition@line^0,c
  4058  002414  0E00               	movlw	0
  4059  002416  6E12               	movwf	(lcdPosition@col+1)^0,c
  4060  002418  0E05               	movlw	5
  4061  00241A  6E11               	movwf	lcdPosition@col^0,c
  4062  00241C  EC2D  F011         	call	_lcdPosition	;wreg free
  4063  002420                     
  4064                           ;desenho.c: 116:         lcdString("Timer OFF");
  4065  002420  0E1C               	movlw	low STR_5
  4066  002422  6E0F               	movwf	lcdString@msg^0,c
  4067  002424  0E06               	movlw	high STR_5
  4068  002426  6E10               	movwf	(lcdString@msg+1)^0,c
  4069  002428  EC4F  F010         	call	_lcdString	;wreg free
  4070  00242C  0012               	return		;funcret
  4071  00242E                     __end_of_desenhoOff:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _desenhoInit *****************
  4075 ;; Defined at:
  4076 ;;		line 6 in file "desenho.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  vent            8   60[COMRAM] unsigned char [8]
  4081 ;;  aquecer         8   52[COMRAM] unsigned char [8]
  4082 ;;  v25             8   44[COMRAM] unsigned char [8]
  4083 ;;  v50             8   36[COMRAM] unsigned char [8]
  4084 ;;  v75             8   28[COMRAM] unsigned char [8]
  4085 ;;  v100            8   20[COMRAM] unsigned char [8]
  4086 ;;  i               2   68[COMRAM] int 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4096 ;;      Params:         0       0       0       0       0       0       0
  4097 ;;      Locals:        50       0       0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0
  4099 ;;      Totals:        50       0       0       0       0       0       0
  4100 ;;Total ram usage:       50 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 6
  4103 ;; This function calls:
  4104 ;;		_lcdChar
  4105 ;;		_lcdCommand
  4106 ;;		_lcdPosition
  4107 ;;		_lcdString
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text24
  4114  000BBE                     __ptext24:
  4115                           	callstack 0
  4116  000BBE                     _desenhoInit:
  4117                           	callstack 24
  4118  000BBE                     
  4119                           ;desenho.c: 7:     int i;;desenho.c: 9:     lcdPosition(0,4);
  4120  000BBE  0E00               	movlw	0
  4121  000BC0  6E10               	movwf	(lcdPosition@line+1)^0,c
  4122  000BC2  0E00               	movlw	0
  4123  000BC4  6E0F               	movwf	lcdPosition@line^0,c
  4124  000BC6  0E00               	movlw	0
  4125  000BC8  6E12               	movwf	(lcdPosition@col+1)^0,c
  4126  000BCA  0E04               	movlw	4
  4127  000BCC  6E11               	movwf	lcdPosition@col^0,c
  4128  000BCE  EC2D  F011         	call	_lcdPosition	;wreg free
  4129  000BD2                     
  4130                           ;desenho.c: 10:     lcdString("|");
  4131  000BD2  0E42               	movlw	low STR_1
  4132  000BD4  6E0F               	movwf	lcdString@msg^0,c
  4133  000BD6  0E06               	movlw	high STR_1
  4134  000BD8  6E10               	movwf	(lcdString@msg+1)^0,c
  4135  000BDA  EC4F  F010         	call	_lcdString	;wreg free
  4136  000BDE                     
  4137                           ;desenho.c: 11:     lcdPosition(1,4);
  4138  000BDE  0E00               	movlw	0
  4139  000BE0  6E10               	movwf	(lcdPosition@line+1)^0,c
  4140  000BE2  0E01               	movlw	1
  4141  000BE4  6E0F               	movwf	lcdPosition@line^0,c
  4142  000BE6  0E00               	movlw	0
  4143  000BE8  6E12               	movwf	(lcdPosition@col+1)^0,c
  4144  000BEA  0E04               	movlw	4
  4145  000BEC  6E11               	movwf	lcdPosition@col^0,c
  4146  000BEE  EC2D  F011         	call	_lcdPosition	;wreg free
  4147                           
  4148                           ;desenho.c: 12:     lcdString("|");
  4149  000BF2  0E42               	movlw	low STR_1
  4150  000BF4  6E0F               	movwf	lcdString@msg^0,c
  4151  000BF6  0E06               	movlw	high STR_1
  4152  000BF8  6E10               	movwf	(lcdString@msg+1)^0,c
  4153  000BFA  EC4F  F010         	call	_lcdString	;wreg free
  4154  000BFE                     
  4155                           ;desenho.c: 13:     lcdPosition(0,15);
  4156  000BFE  0E00               	movlw	0
  4157  000C00  6E10               	movwf	(lcdPosition@line+1)^0,c
  4158  000C02  0E00               	movlw	0
  4159  000C04  6E0F               	movwf	lcdPosition@line^0,c
  4160  000C06  0E00               	movlw	0
  4161  000C08  6E12               	movwf	(lcdPosition@col+1)^0,c
  4162  000C0A  0E0F               	movlw	15
  4163  000C0C  6E11               	movwf	lcdPosition@col^0,c
  4164  000C0E  EC2D  F011         	call	_lcdPosition	;wreg free
  4165  000C12                     
  4166                           ;desenho.c: 14:     lcdString("|");
  4167  000C12  0E42               	movlw	low STR_1
  4168  000C14  6E0F               	movwf	lcdString@msg^0,c
  4169  000C16  0E06               	movlw	high STR_1
  4170  000C18  6E10               	movwf	(lcdString@msg+1)^0,c
  4171  000C1A  EC4F  F010         	call	_lcdString	;wreg free
  4172                           
  4173                           ;desenho.c: 15:     lcdPosition(1,15);
  4174  000C1E  0E00               	movlw	0
  4175  000C20  6E10               	movwf	(lcdPosition@line+1)^0,c
  4176  000C22  0E01               	movlw	1
  4177  000C24  6E0F               	movwf	lcdPosition@line^0,c
  4178  000C26  0E00               	movlw	0
  4179  000C28  6E12               	movwf	(lcdPosition@col+1)^0,c
  4180  000C2A  0E0F               	movlw	15
  4181  000C2C  6E11               	movwf	lcdPosition@col^0,c
  4182  000C2E  EC2D  F011         	call	_lcdPosition	;wreg free
  4183  000C32                     
  4184                           ;desenho.c: 16:     lcdString("|");
  4185  000C32  0E42               	movlw	low STR_1
  4186  000C34  6E0F               	movwf	lcdString@msg^0,c
  4187  000C36  0E06               	movlw	high STR_1
  4188  000C38  6E10               	movwf	(lcdString@msg+1)^0,c
  4189  000C3A  EC4F  F010         	call	_lcdString	;wreg free
  4190  000C3E                     
  4191                           ;desenho.c: 17:     lcdPosition(0,5);
  4192  000C3E  0E00               	movlw	0
  4193  000C40  6E10               	movwf	(lcdPosition@line+1)^0,c
  4194  000C42  0E00               	movlw	0
  4195  000C44  6E0F               	movwf	lcdPosition@line^0,c
  4196  000C46  0E00               	movlw	0
  4197  000C48  6E12               	movwf	(lcdPosition@col+1)^0,c
  4198  000C4A  0E05               	movlw	5
  4199  000C4C  6E11               	movwf	lcdPosition@col^0,c
  4200  000C4E  EC2D  F011         	call	_lcdPosition	;wreg free
  4201                           
  4202                           ;desenho.c: 18:     lcdString("Timer OFF");
  4203  000C52  0E1C               	movlw	low STR_5
  4204  000C54  6E0F               	movwf	lcdString@msg^0,c
  4205  000C56  0E06               	movlw	high STR_5
  4206  000C58  6E10               	movwf	(lcdString@msg+1)^0,c
  4207  000C5A  EC4F  F010         	call	_lcdString	;wreg free
  4208  000C5E                     
  4209                           ;desenho.c: 19:     lcdPosition(1,5);
  4210  000C5E  0E00               	movlw	0
  4211  000C60  6E10               	movwf	(lcdPosition@line+1)^0,c
  4212  000C62  0E01               	movlw	1
  4213  000C64  6E0F               	movwf	lcdPosition@line^0,c
  4214  000C66  0E00               	movlw	0
  4215  000C68  6E12               	movwf	(lcdPosition@col+1)^0,c
  4216  000C6A  0E05               	movlw	5
  4217  000C6C  6E11               	movwf	lcdPosition@col^0,c
  4218  000C6E  EC2D  F011         	call	_lcdPosition	;wreg free
  4219  000C72                     
  4220                           ;desenho.c: 20:     lcdString("Modo:");
  4221  000C72  0E2F               	movlw	low STR_6
  4222  000C74  6E0F               	movwf	lcdString@msg^0,c
  4223  000C76  0E06               	movlw	high STR_6
  4224  000C78  6E10               	movwf	(lcdString@msg+1)^0,c
  4225  000C7A  EC4F  F010         	call	_lcdString	;wreg free
  4226                           
  4227                           ;desenho.c: 21:     lcdPosition(0,2);
  4228  000C7E  0E00               	movlw	0
  4229  000C80  6E10               	movwf	(lcdPosition@line+1)^0,c
  4230  000C82  0E00               	movlw	0
  4231  000C84  6E0F               	movwf	lcdPosition@line^0,c
  4232  000C86  0E00               	movlw	0
  4233  000C88  6E12               	movwf	(lcdPosition@col+1)^0,c
  4234  000C8A  0E02               	movlw	2
  4235  000C8C  6E11               	movwf	lcdPosition@col^0,c
  4236  000C8E  EC2D  F011         	call	_lcdPosition	;wreg free
  4237                           
  4238                           ;desenho.c: 22:     lcdChar(0xDF);
  4239  000C92  0EDF               	movlw	223
  4240  000C94  EC27  F012         	call	_lcdChar
  4241  000C98                     
  4242                           ;desenho.c: 23:     lcdString("C");
  4243  000C98  0E40               	movlw	low STR_7
  4244  000C9A  6E0F               	movwf	lcdString@msg^0,c
  4245  000C9C  0E06               	movlw	high STR_7
  4246  000C9E  6E10               	movwf	(lcdString@msg+1)^0,c
  4247  000CA0  EC4F  F010         	call	_lcdString	;wreg free
  4248  000CA4                     
  4249                           ;desenho.c: 27:     char v100[8] = {0b00000,
  4250  000CA4  EE20  F067         	lfsr	2,desenhoInit@F19
  4251  000CA8  EE10  F015         	lfsr	1,desenhoInit@v100
  4252  000CAC  0E07               	movlw	7
  4253  000CAE                     u2291:
  4254  000CAE  CFDB FFE3          	movff	plusw2,plusw1
  4255  000CB2  06E8               	decf	wreg,f,c
  4256  000CB4  E2FC               	bc	u2291
  4257  000CB6                     
  4258                           ;desenho.c: 36:     char v75[8] = { 0b00000,
  4259  000CB6  EE20  F05F         	lfsr	2,desenhoInit@F21
  4260  000CBA  EE10  F01D         	lfsr	1,desenhoInit@v75
  4261  000CBE  0E07               	movlw	7
  4262  000CC0                     u2301:
  4263  000CC0  CFDB FFE3          	movff	plusw2,plusw1
  4264  000CC4  06E8               	decf	wreg,f,c
  4265  000CC6  E2FC               	bc	u2301
  4266  000CC8                     
  4267                           ;desenho.c: 45:     char v50[8] = { 0b00000,
  4268  000CC8  EE20  F098         	lfsr	2,desenhoInit@F23
  4269  000CCC  EE10  F025         	lfsr	1,desenhoInit@v50
  4270  000CD0  0E07               	movlw	7
  4271  000CD2                     u2311:
  4272  000CD2  CFDB FFE3          	movff	plusw2,plusw1
  4273  000CD6  06E8               	decf	wreg,f,c
  4274  000CD8  E2FC               	bc	u2311
  4275  000CDA                     
  4276                           ;desenho.c: 54:     char v25[8] = { 0b00000,
  4277  000CDA  EE20  F090         	lfsr	2,desenhoInit@F25
  4278  000CDE  EE10  F02D         	lfsr	1,desenhoInit@v25
  4279  000CE2  0E07               	movlw	7
  4280  000CE4                     u2321:
  4281  000CE4  CFDB FFE3          	movff	plusw2,plusw1
  4282  000CE8  06E8               	decf	wreg,f,c
  4283  000CEA  E2FC               	bc	u2321
  4284  000CEC                     
  4285                           ;desenho.c: 63:    char aquecer[8]={0b00010,
  4286  000CEC  EE20  F088         	lfsr	2,desenhoInit@F27
  4287  000CF0  EE10  F035         	lfsr	1,desenhoInit@aquecer
  4288  000CF4  0E07               	movlw	7
  4289  000CF6                     u2331:
  4290  000CF6  CFDB FFE3          	movff	plusw2,plusw1
  4291  000CFA  06E8               	decf	wreg,f,c
  4292  000CFC  E2FC               	bc	u2331
  4293  000CFE                     
  4294                           ;desenho.c: 72:     char vent[8] = { 0b00000,
  4295  000CFE  EE20  F080         	lfsr	2,desenhoInit@F29
  4296  000D02  EE10  F03D         	lfsr	1,desenhoInit@vent
  4297  000D06  0E07               	movlw	7
  4298  000D08                     u2341:
  4299  000D08  CFDB FFE3          	movff	plusw2,plusw1
  4300  000D0C  06E8               	decf	wreg,f,c
  4301  000D0E  E2FC               	bc	u2341
  4302  000D10                     
  4303                           ;desenho.c: 81:    lcdCommand(0x40);
  4304  000D10  0E40               	movlw	64
  4305  000D12  EC36  F012         	call	_lcdCommand
  4306  000D16                     
  4307                           ;desenho.c: 83:     for (i = 0; i < 8; i++) {
  4308  000D16  0E00               	movlw	0
  4309  000D18  6E46               	movwf	(desenhoInit@i+1)^0,c
  4310  000D1A  0E00               	movlw	0
  4311  000D1C  6E45               	movwf	desenhoInit@i^0,c
  4312  000D1E                     l2607:
  4313                           
  4314                           ;desenho.c: 84:         lcdChar(v100[i]);
  4315  000D1E  0E15               	movlw	low desenhoInit@v100
  4316  000D20  2445               	addwf	desenhoInit@i^0,w,c
  4317  000D22  6ED9               	movwf	fsr2l,c
  4318  000D24  0E00               	movlw	high desenhoInit@v100
  4319  000D26  2046               	addwfc	(desenhoInit@i+1)^0,w,c
  4320  000D28  6EDA               	movwf	fsr2h,c
  4321  000D2A  50DF               	movf	indf2,w,c
  4322  000D2C  EC27  F012         	call	_lcdChar
  4323  000D30                     
  4324                           ;desenho.c: 85:     }
  4325  000D30  4A45               	infsnz	desenhoInit@i^0,f,c
  4326  000D32  2A46               	incf	(desenhoInit@i+1)^0,f,c
  4327  000D34  BE46               	btfsc	(desenhoInit@i+1)^0,7,c
  4328  000D36  EFA6  F006         	goto	u2351
  4329  000D3A  5046               	movf	(desenhoInit@i+1)^0,w,c
  4330  000D3C  E109               	bnz	u2350
  4331  000D3E  0E08               	movlw	8
  4332  000D40  5C45               	subwf	desenhoInit@i^0,w,c
  4333  000D42  A0D8               	btfss	status,0,c
  4334  000D44  EFA6  F006         	goto	u2351
  4335  000D48  EFA8  F006         	goto	u2350
  4336  000D4C                     u2351:
  4337  000D4C  EF8F  F006         	goto	l2607
  4338  000D50                     u2350:
  4339  000D50                     
  4340                           ;desenho.c: 86:    lcdCommand(0x48);
  4341  000D50  0E48               	movlw	72
  4342  000D52  EC36  F012         	call	_lcdCommand
  4343  000D56                     
  4344                           ;desenho.c: 87:    for (i = 0; i < 8; i++) {
  4345  000D56  0E00               	movlw	0
  4346  000D58  6E46               	movwf	(desenhoInit@i+1)^0,c
  4347  000D5A  0E00               	movlw	0
  4348  000D5C  6E45               	movwf	desenhoInit@i^0,c
  4349  000D5E                     l2621:
  4350                           
  4351                           ;desenho.c: 88:         lcdChar(v75[i]);
  4352  000D5E  0E1D               	movlw	low desenhoInit@v75
  4353  000D60  2445               	addwf	desenhoInit@i^0,w,c
  4354  000D62  6ED9               	movwf	fsr2l,c
  4355  000D64  0E00               	movlw	high desenhoInit@v75
  4356  000D66  2046               	addwfc	(desenhoInit@i+1)^0,w,c
  4357  000D68  6EDA               	movwf	fsr2h,c
  4358  000D6A  50DF               	movf	indf2,w,c
  4359  000D6C  EC27  F012         	call	_lcdChar
  4360  000D70                     
  4361                           ;desenho.c: 89:     }
  4362  000D70  4A45               	infsnz	desenhoInit@i^0,f,c
  4363  000D72  2A46               	incf	(desenhoInit@i+1)^0,f,c
  4364  000D74  BE46               	btfsc	(desenhoInit@i+1)^0,7,c
  4365  000D76  EFC6  F006         	goto	u2361
  4366  000D7A  5046               	movf	(desenhoInit@i+1)^0,w,c
  4367  000D7C  E109               	bnz	u2360
  4368  000D7E  0E08               	movlw	8
  4369  000D80  5C45               	subwf	desenhoInit@i^0,w,c
  4370  000D82  A0D8               	btfss	status,0,c
  4371  000D84  EFC6  F006         	goto	u2361
  4372  000D88  EFC8  F006         	goto	u2360
  4373  000D8C                     u2361:
  4374  000D8C  EFAF  F006         	goto	l2621
  4375  000D90                     u2360:
  4376  000D90                     
  4377                           ;desenho.c: 90:    lcdCommand(0x50);
  4378  000D90  0E50               	movlw	80
  4379  000D92  EC36  F012         	call	_lcdCommand
  4380  000D96                     
  4381                           ;desenho.c: 91:    for (i = 0; i < 8; i++) {
  4382  000D96  0E00               	movlw	0
  4383  000D98  6E46               	movwf	(desenhoInit@i+1)^0,c
  4384  000D9A  0E00               	movlw	0
  4385  000D9C  6E45               	movwf	desenhoInit@i^0,c
  4386  000D9E                     l2635:
  4387                           
  4388                           ;desenho.c: 92:         lcdChar(v50[i]);
  4389  000D9E  0E25               	movlw	low desenhoInit@v50
  4390  000DA0  2445               	addwf	desenhoInit@i^0,w,c
  4391  000DA2  6ED9               	movwf	fsr2l,c
  4392  000DA4  0E00               	movlw	high desenhoInit@v50
  4393  000DA6  2046               	addwfc	(desenhoInit@i+1)^0,w,c
  4394  000DA8  6EDA               	movwf	fsr2h,c
  4395  000DAA  50DF               	movf	indf2,w,c
  4396  000DAC  EC27  F012         	call	_lcdChar
  4397  000DB0                     
  4398                           ;desenho.c: 93:     }
  4399  000DB0  4A45               	infsnz	desenhoInit@i^0,f,c
  4400  000DB2  2A46               	incf	(desenhoInit@i+1)^0,f,c
  4401  000DB4  BE46               	btfsc	(desenhoInit@i+1)^0,7,c
  4402  000DB6  EFE6  F006         	goto	u2371
  4403  000DBA  5046               	movf	(desenhoInit@i+1)^0,w,c
  4404  000DBC  E109               	bnz	u2370
  4405  000DBE  0E08               	movlw	8
  4406  000DC0  5C45               	subwf	desenhoInit@i^0,w,c
  4407  000DC2  A0D8               	btfss	status,0,c
  4408  000DC4  EFE6  F006         	goto	u2371
  4409  000DC8  EFE8  F006         	goto	u2370
  4410  000DCC                     u2371:
  4411  000DCC  EFCF  F006         	goto	l2635
  4412  000DD0                     u2370:
  4413  000DD0                     
  4414                           ;desenho.c: 94:    lcdCommand(0x58);
  4415  000DD0  0E58               	movlw	88
  4416  000DD2  EC36  F012         	call	_lcdCommand
  4417  000DD6                     
  4418                           ;desenho.c: 95:    for (i = 0; i < 8; i++) {
  4419  000DD6  0E00               	movlw	0
  4420  000DD8  6E46               	movwf	(desenhoInit@i+1)^0,c
  4421  000DDA  0E00               	movlw	0
  4422  000DDC  6E45               	movwf	desenhoInit@i^0,c
  4423  000DDE                     l2649:
  4424                           
  4425                           ;desenho.c: 96:         lcdChar(v25[i]);
  4426  000DDE  0E2D               	movlw	low desenhoInit@v25
  4427  000DE0  2445               	addwf	desenhoInit@i^0,w,c
  4428  000DE2  6ED9               	movwf	fsr2l,c
  4429  000DE4  0E00               	movlw	high desenhoInit@v25
  4430  000DE6  2046               	addwfc	(desenhoInit@i+1)^0,w,c
  4431  000DE8  6EDA               	movwf	fsr2h,c
  4432  000DEA  50DF               	movf	indf2,w,c
  4433  000DEC  EC27  F012         	call	_lcdChar
  4434  000DF0                     
  4435                           ;desenho.c: 97:     }
  4436  000DF0  4A45               	infsnz	desenhoInit@i^0,f,c
  4437  000DF2  2A46               	incf	(desenhoInit@i+1)^0,f,c
  4438  000DF4  BE46               	btfsc	(desenhoInit@i+1)^0,7,c
  4439  000DF6  EF06  F007         	goto	u2381
  4440  000DFA  5046               	movf	(desenhoInit@i+1)^0,w,c
  4441  000DFC  E109               	bnz	u2380
  4442  000DFE  0E08               	movlw	8
  4443  000E00  5C45               	subwf	desenhoInit@i^0,w,c
  4444  000E02  A0D8               	btfss	status,0,c
  4445  000E04  EF06  F007         	goto	u2381
  4446  000E08  EF08  F007         	goto	u2380
  4447  000E0C                     u2381:
  4448  000E0C  EFEF  F006         	goto	l2649
  4449  000E10                     u2380:
  4450  000E10                     
  4451                           ;desenho.c: 98:    lcdCommand(0x60);
  4452  000E10  0E60               	movlw	96
  4453  000E12  EC36  F012         	call	_lcdCommand
  4454  000E16                     
  4455                           ;desenho.c: 99:    for (i = 0; i < 8; i++) {
  4456  000E16  0E00               	movlw	0
  4457  000E18  6E46               	movwf	(desenhoInit@i+1)^0,c
  4458  000E1A  0E00               	movlw	0
  4459  000E1C  6E45               	movwf	desenhoInit@i^0,c
  4460  000E1E                     l2663:
  4461                           
  4462                           ;desenho.c: 100:         lcdChar(aquecer[i]);
  4463  000E1E  0E35               	movlw	low desenhoInit@aquecer
  4464  000E20  2445               	addwf	desenhoInit@i^0,w,c
  4465  000E22  6ED9               	movwf	fsr2l,c
  4466  000E24  0E00               	movlw	high desenhoInit@aquecer
  4467  000E26  2046               	addwfc	(desenhoInit@i+1)^0,w,c
  4468  000E28  6EDA               	movwf	fsr2h,c
  4469  000E2A  50DF               	movf	indf2,w,c
  4470  000E2C  EC27  F012         	call	_lcdChar
  4471  000E30                     
  4472                           ;desenho.c: 101:     }
  4473  000E30  4A45               	infsnz	desenhoInit@i^0,f,c
  4474  000E32  2A46               	incf	(desenhoInit@i+1)^0,f,c
  4475  000E34  BE46               	btfsc	(desenhoInit@i+1)^0,7,c
  4476  000E36  EF26  F007         	goto	u2391
  4477  000E3A  5046               	movf	(desenhoInit@i+1)^0,w,c
  4478  000E3C  E109               	bnz	u2390
  4479  000E3E  0E08               	movlw	8
  4480  000E40  5C45               	subwf	desenhoInit@i^0,w,c
  4481  000E42  A0D8               	btfss	status,0,c
  4482  000E44  EF26  F007         	goto	u2391
  4483  000E48  EF28  F007         	goto	u2390
  4484  000E4C                     u2391:
  4485  000E4C  EF0F  F007         	goto	l2663
  4486  000E50                     u2390:
  4487  000E50                     
  4488                           ;desenho.c: 102:       lcdCommand(0x68);
  4489  000E50  0E68               	movlw	104
  4490  000E52  EC36  F012         	call	_lcdCommand
  4491  000E56                     
  4492                           ;desenho.c: 103:    for (i = 0; i < 8; i++) {
  4493  000E56  0E00               	movlw	0
  4494  000E58  6E46               	movwf	(desenhoInit@i+1)^0,c
  4495  000E5A  0E00               	movlw	0
  4496  000E5C  6E45               	movwf	desenhoInit@i^0,c
  4497  000E5E                     l2677:
  4498                           
  4499                           ;desenho.c: 104:         lcdChar(vent[i]);
  4500  000E5E  0E3D               	movlw	low desenhoInit@vent
  4501  000E60  2445               	addwf	desenhoInit@i^0,w,c
  4502  000E62  6ED9               	movwf	fsr2l,c
  4503  000E64  0E00               	movlw	high desenhoInit@vent
  4504  000E66  2046               	addwfc	(desenhoInit@i+1)^0,w,c
  4505  000E68  6EDA               	movwf	fsr2h,c
  4506  000E6A  50DF               	movf	indf2,w,c
  4507  000E6C  EC27  F012         	call	_lcdChar
  4508  000E70                     
  4509                           ;desenho.c: 105:     }
  4510  000E70  4A45               	infsnz	desenhoInit@i^0,f,c
  4511  000E72  2A46               	incf	(desenhoInit@i+1)^0,f,c
  4512  000E74  BE46               	btfsc	(desenhoInit@i+1)^0,7,c
  4513  000E76  EF46  F007         	goto	u2401
  4514  000E7A  5046               	movf	(desenhoInit@i+1)^0,w,c
  4515  000E7C  E109               	bnz	u2400
  4516  000E7E  0E08               	movlw	8
  4517  000E80  5C45               	subwf	desenhoInit@i^0,w,c
  4518  000E82  A0D8               	btfss	status,0,c
  4519  000E84  EF46  F007         	goto	u2401
  4520  000E88  EF48  F007         	goto	u2400
  4521  000E8C                     u2401:
  4522  000E8C  EF2F  F007         	goto	l2677
  4523  000E90                     u2400:
  4524  000E90  0012               	return		;funcret
  4525  000E92                     __end_of_desenhoInit:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _lcdString *****************
  4529 ;; Defined at:
  4530 ;;		line 58 in file "lcd.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  msg             2   14[COMRAM] PTR unsigned char 
  4533 ;;		 -> STR_25(4), STR_24(3), STR_23(4), STR_22(2), 
  4534 ;;		 -> STR_21(5), STR_20(2), STR_19(2), STR_18(2), 
  4535 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  4536 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(10), 
  4537 ;;		 -> STR_9(2), STR_8(9), STR_7(2), STR_6(6), 
  4538 ;;		 -> STR_5(10), STR_4(2), STR_3(2), STR_2(2), 
  4539 ;;		 -> STR_1(2), 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  i               2   18[COMRAM] int 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4551 ;;      Params:         2       0       0       0       0       0       0
  4552 ;;      Locals:         2       0       0       0       0       0       0
  4553 ;;      Temps:          2       0       0       0       0       0       0
  4554 ;;      Totals:         6       0       0       0       0       0       0
  4555 ;;Total ram usage:        6 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; Hardware stack levels required when called: 5
  4558 ;; This function calls:
  4559 ;;		_lcdChar
  4560 ;; This function is called by:
  4561 ;;		_desenhoInit
  4562 ;;		_desenhoOn
  4563 ;;		_desenhoOff
  4564 ;;		_velocidade
  4565 ;;		_modo
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text25
  4570  00209E                     __ptext25:
  4571                           	callstack 0
  4572  00209E                     _lcdString:
  4573                           	callstack 24
  4574  00209E                     
  4575                           ;lcd.c: 59:  int i = 0;
  4576  00209E  0E00               	movlw	0
  4577  0020A0  6E14               	movwf	(lcdString@i+1)^0,c
  4578  0020A2  0E00               	movlw	0
  4579  0020A4  6E13               	movwf	lcdString@i^0,c
  4580                           
  4581                           ;lcd.c: 60:  while (msg[i] != 0) {
  4582  0020A6  EF65  F010         	goto	l2481
  4583  0020AA                     l2477:
  4584                           
  4585                           ;lcd.c: 61:   lcdChar(msg[i]);
  4586  0020AA  5013               	movf	lcdString@i^0,w,c
  4587  0020AC  240F               	addwf	lcdString@msg^0,w,c
  4588  0020AE  6E11               	movwf	??_lcdString^0,c
  4589  0020B0  5014               	movf	(lcdString@i+1)^0,w,c
  4590  0020B2  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4591  0020B4  6E12               	movwf	(??_lcdString+1)^0,c
  4592  0020B6  C011  FFF6         	movff	??_lcdString,tblptrl
  4593  0020BA  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4594  0020BE                     	if	0	;tblptru may be non-zero
  4595  0020BE                     	endif
  4596  0020BE                     	if	0	;tblptru may be non-zero
  4597  0020BE                     	endif
  4598  0020BE  0008               	tblrd		*
  4599  0020C0  50F5               	movf	tablat,w,c
  4600  0020C2  EC27  F012         	call	_lcdChar
  4601  0020C6                     
  4602                           ;lcd.c: 62:   i++;
  4603  0020C6  4A13               	infsnz	lcdString@i^0,f,c
  4604  0020C8  2A14               	incf	(lcdString@i+1)^0,f,c
  4605  0020CA                     l2481:
  4606                           
  4607                           ;lcd.c: 60:  while (msg[i] != 0) {
  4608  0020CA  5013               	movf	lcdString@i^0,w,c
  4609  0020CC  240F               	addwf	lcdString@msg^0,w,c
  4610  0020CE  6E11               	movwf	??_lcdString^0,c
  4611  0020D0  5014               	movf	(lcdString@i+1)^0,w,c
  4612  0020D2  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4613  0020D4  6E12               	movwf	(??_lcdString+1)^0,c
  4614  0020D6  C011  FFF6         	movff	??_lcdString,tblptrl
  4615  0020DA  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4616  0020DE                     	if	0	;tblptru may be non-zero
  4617  0020DE                     	endif
  4618  0020DE                     	if	0	;tblptru may be non-zero
  4619  0020DE                     	endif
  4620  0020DE  0008               	tblrd		*
  4621  0020E0  50F5               	movf	tablat,w,c
  4622  0020E2  0900               	iorlw	0
  4623  0020E4  A4D8               	btfss	status,2,c
  4624  0020E6  EF77  F010         	goto	u2111
  4625  0020EA  EF79  F010         	goto	u2110
  4626  0020EE                     u2111:
  4627  0020EE  EF55  F010         	goto	l2477
  4628  0020F2                     u2110:
  4629  0020F2  0012               	return		;funcret
  4630  0020F4                     __end_of_lcdString:
  4631                           	callstack 0
  4632                           
  4633 ;; *************** function _lcdChar *****************
  4634 ;; Defined at:
  4635 ;;		line 52 in file "lcd.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  value           1    wreg     unsigned char 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  value           1   13[COMRAM] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4649 ;;      Params:         0       0       0       0       0       0       0
  4650 ;;      Locals:         1       0       0       0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0
  4652 ;;      Totals:         1       0       0       0       0       0       0
  4653 ;;Total ram usage:        1 bytes
  4654 ;; Hardware stack levels used: 1
  4655 ;; Hardware stack levels required when called: 4
  4656 ;; This function calls:
  4657 ;;		_delayMicro
  4658 ;;		_pushByte
  4659 ;; This function is called by:
  4660 ;;		_desenhoInit
  4661 ;;		_lcdString
  4662 ;;		_main
  4663 ;;		_velocidade
  4664 ;;		_modo
  4665 ;;		_lcdNumber
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text26
  4670  00244E                     __ptext26:
  4671                           	callstack 0
  4672  00244E                     _lcdChar:
  4673                           	callstack 24
  4674                           
  4675                           ;incstack = 0
  4676                           ;lcdChar@value stored from wreg
  4677  00244E  6E0E               	movwf	lcdChar@value^0,c
  4678  002450                     
  4679                           ;lcd.c: 53:  pushByte(value, 1);
  4680  002450  0E00               	movlw	0
  4681  002452  6E0B               	movwf	(pushByte@rs+1)^0,c
  4682  002454  0E01               	movlw	1
  4683  002456  6E0A               	movwf	pushByte@rs^0,c
  4684  002458  500E               	movf	lcdChar@value^0,w,c
  4685  00245A  ECA0  F00F         	call	_pushByte
  4686  00245E                     
  4687                           ;lcd.c: 54:  delayMicro(80);
  4688  00245E  0E00               	movlw	0
  4689  002460  6E02               	movwf	(delayMicro@a+1)^0,c
  4690  002462  0E50               	movlw	80
  4691  002464  6E01               	movwf	delayMicro@a^0,c
  4692  002466  EC6B  F012         	call	_delayMicro	;wreg free
  4693  00246A  0012               	return		;funcret
  4694  00246C                     __end_of_lcdChar:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function _lcdPosition *****************
  4698 ;; Defined at:
  4699 ;;		line 44 in file "lcd.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  line            2   14[COMRAM] int 
  4702 ;;  col             2   16[COMRAM] int 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4714 ;;      Params:         4       0       0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0
  4717 ;;      Totals:         4       0       0       0       0       0       0
  4718 ;;Total ram usage:        4 bytes
  4719 ;; Hardware stack levels used: 1
  4720 ;; Hardware stack levels required when called: 5
  4721 ;; This function calls:
  4722 ;;		_lcdCommand
  4723 ;; This function is called by:
  4724 ;;		_desenhoInit
  4725 ;;		_desenhoOn
  4726 ;;		_desenhoOff
  4727 ;;		_main
  4728 ;;		_velocidade
  4729 ;;		_modo
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text27
  4734  00225A                     __ptext27:
  4735                           	callstack 0
  4736  00225A                     _lcdPosition:
  4737                           	callstack 24
  4738  00225A                     
  4739                           ;lcd.c: 45:  if (line == 0) {
  4740  00225A  500F               	movf	lcdPosition@line^0,w,c
  4741  00225C  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  4742  00225E  A4D8               	btfss	status,2,c
  4743  002260  EF34  F011         	goto	u2091
  4744  002264  EF36  F011         	goto	u2090
  4745  002268                     u2091:
  4746  002268  EF3B  F011         	goto	l2471
  4747  00226C                     u2090:
  4748  00226C                     
  4749                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  4750  00226C  5011               	movf	lcdPosition@col^0,w,c
  4751  00226E  0B0F               	andlw	15
  4752  002270  0F80               	addlw	128
  4753  002272  EC36  F012         	call	_lcdCommand
  4754  002276                     l2471:
  4755                           
  4756                           ;lcd.c: 48:  if (line == 1) {
  4757  002276  040F               	decf	lcdPosition@line^0,w,c
  4758  002278  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  4759  00227A  A4D8               	btfss	status,2,c
  4760  00227C  EF42  F011         	goto	u2101
  4761  002280  EF44  F011         	goto	u2100
  4762  002284                     u2101:
  4763  002284  EF49  F011         	goto	l193
  4764  002288                     u2100:
  4765  002288                     
  4766                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  4767  002288  5011               	movf	lcdPosition@col^0,w,c
  4768  00228A  0B0F               	andlw	15
  4769  00228C  0FC0               	addlw	192
  4770  00228E  EC36  F012         	call	_lcdCommand
  4771  002292                     l193:
  4772  002292  0012               	return		;funcret
  4773  002294                     __end_of_lcdPosition:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _lcdCommand *****************
  4777 ;; Defined at:
  4778 ;;		line 40 in file "lcd.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  value           1    wreg     unsigned char 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  value           1   13[COMRAM] unsigned char 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0, cstack
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4792 ;;      Params:         0       0       0       0       0       0       0
  4793 ;;      Locals:         1       0       0       0       0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0
  4795 ;;      Totals:         1       0       0       0       0       0       0
  4796 ;;Total ram usage:        1 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 4
  4799 ;; This function calls:
  4800 ;;		_delayMili
  4801 ;;		_pushByte
  4802 ;; This function is called by:
  4803 ;;		_desenhoInit
  4804 ;;		_lcdPosition
  4805 ;;		_lcdInit
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text28
  4810  00246C                     __ptext28:
  4811                           	callstack 0
  4812  00246C                     _lcdCommand:
  4813                           	callstack 24
  4814                           
  4815                           ;incstack = 0
  4816                           ;lcdCommand@value stored from wreg
  4817  00246C  6E0E               	movwf	lcdCommand@value^0,c
  4818  00246E                     
  4819                           ;lcd.c: 41:  pushByte(value, 0);
  4820  00246E  0E00               	movlw	0
  4821  002470  6E0B               	movwf	(pushByte@rs+1)^0,c
  4822  002472  0E00               	movlw	0
  4823  002474  6E0A               	movwf	pushByte@rs^0,c
  4824  002476  500E               	movf	lcdCommand@value^0,w,c
  4825  002478  ECA0  F00F         	call	_pushByte
  4826                           
  4827                           ;lcd.c: 42:  delayMili(2);
  4828  00247C  0E00               	movlw	0
  4829  00247E  6E02               	movwf	(delayMili@a+1)^0,c
  4830  002480  0E02               	movlw	2
  4831  002482  6E01               	movwf	delayMili@a^0,c
  4832  002484  EC63  F011         	call	_delayMili	;wreg free
  4833  002488  0012               	return		;funcret
  4834  00248A                     __end_of_lcdCommand:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _pushByte *****************
  4838 ;; Defined at:
  4839 ;;		line 31 in file "lcd.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  value           1    wreg     unsigned char 
  4842 ;;  rs              2    9[COMRAM] int 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  value           1   12[COMRAM] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4854 ;;      Params:         2       0       0       0       0       0       0
  4855 ;;      Locals:         1       0       0       0       0       0       0
  4856 ;;      Temps:          1       0       0       0       0       0       0
  4857 ;;      Totals:         4       0       0       0       0       0       0
  4858 ;;Total ram usage:        4 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 3
  4861 ;; This function calls:
  4862 ;;		_digitalWrite
  4863 ;;		_pulseEnablePin
  4864 ;;		_soWrite
  4865 ;; This function is called by:
  4866 ;;		_lcdCommand
  4867 ;;		_lcdChar
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text29
  4872  001F40                     __ptext29:
  4873                           	callstack 0
  4874  001F40                     _pushByte:
  4875                           	callstack 24
  4876                           
  4877                           ;incstack = 0
  4878                           ;pushByte@value stored from wreg
  4879  001F40  6E0D               	movwf	pushByte@value^0,c
  4880  001F42                     
  4881                           ;lcd.c: 32:  soWrite(value >> 4);
  4882  001F42  C00D  F00C         	movff	pushByte@value,??_pushByte
  4883  001F46  3A0C               	swapf	??_pushByte^0,f,c
  4884  001F48  0E0F               	movlw	15
  4885  001F4A  160C               	andwf	??_pushByte^0,f,c
  4886  001F4C  500C               	movf	??_pushByte^0,w,c
  4887  001F4E  6E07               	movwf	soWrite@value^0,c
  4888  001F50  6A08               	clrf	(soWrite@value+1)^0,c
  4889  001F52  ECA2  F010         	call	_soWrite	;wreg free
  4890                           
  4891                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  4892  001F56  0E00               	movlw	0
  4893  001F58  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4894  001F5A  0E1D               	movlw	29
  4895  001F5C  6E01               	movwf	digitalWrite@pin^0,c
  4896  001F5E  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  4897  001F62  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  4898  001F66  EC49  F007         	call	_digitalWrite	;wreg free
  4899                           
  4900                           ;lcd.c: 34:  pulseEnablePin();
  4901  001F6A  ECED  F010         	call	_pulseEnablePin	;wreg free
  4902                           
  4903                           ;lcd.c: 36:  soWrite(value & 0x0F);
  4904  001F6E  C00D  F00C         	movff	pushByte@value,??_pushByte
  4905  001F72  0E0F               	movlw	15
  4906  001F74  160C               	andwf	??_pushByte^0,f,c
  4907  001F76  500C               	movf	??_pushByte^0,w,c
  4908  001F78  6E07               	movwf	soWrite@value^0,c
  4909  001F7A  6A08               	clrf	(soWrite@value+1)^0,c
  4910  001F7C  ECA2  F010         	call	_soWrite	;wreg free
  4911                           
  4912                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  4913  001F80  0E00               	movlw	0
  4914  001F82  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4915  001F84  0E1D               	movlw	29
  4916  001F86  6E01               	movwf	digitalWrite@pin^0,c
  4917  001F88  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  4918  001F8C  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  4919  001F90  EC49  F007         	call	_digitalWrite	;wreg free
  4920                           
  4921                           ;lcd.c: 38:  pulseEnablePin();
  4922  001F94  ECED  F010         	call	_pulseEnablePin	;wreg free
  4923  001F98  0012               	return		;funcret
  4924  001F9A                     __end_of_pushByte:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function _soWrite *****************
  4928 ;; Defined at:
  4929 ;;		line 18 in file "so.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  value           2    6[COMRAM] int 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  i               1    8[COMRAM] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4943 ;;      Params:         2       0       0       0       0       0       0
  4944 ;;      Locals:         1       0       0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0
  4946 ;;      Totals:         3       0       0       0       0       0       0
  4947 ;;Total ram usage:        3 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; Hardware stack levels required when called: 2
  4950 ;; This function calls:
  4951 ;;		_PulseClockData
  4952 ;;		_PulseEnClock
  4953 ;;		_digitalWrite
  4954 ;; This function is called by:
  4955 ;;		_kpDebounce
  4956 ;;		_pushNibble
  4957 ;;		_pushByte
  4958 ;;		_ssdUpdate
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text30
  4963  002144                     __ptext30:
  4964                           	callstack 0
  4965  002144                     _soWrite:
  4966                           	callstack 24
  4967  002144                     
  4968                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4969  002144  0E00               	movlw	0
  4970  002146  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4971  002148  0E08               	movlw	8
  4972  00214A  6E01               	movwf	digitalWrite@pin^0,c
  4973  00214C  0E00               	movlw	0
  4974  00214E  6E04               	movwf	(digitalWrite@value+1)^0,c
  4975  002150  0E00               	movlw	0
  4976  002152  6E03               	movwf	digitalWrite@value^0,c
  4977  002154  EC49  F007         	call	_digitalWrite	;wreg free
  4978  002158                     
  4979                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4980  002158  0E00               	movlw	0
  4981  00215A  6E09               	movwf	soWrite@i^0,c
  4982  00215C                     l2353:
  4983                           
  4984                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4985  00215C  0E00               	movlw	0
  4986  00215E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4987  002160  0E1E               	movlw	30
  4988  002162  6E01               	movwf	digitalWrite@pin^0,c
  4989  002164  0E80               	movlw	128
  4990  002166  1407               	andwf	soWrite@value^0,w,c
  4991  002168  6E03               	movwf	digitalWrite@value^0,c
  4992  00216A  6A04               	clrf	(digitalWrite@value+1)^0,c
  4993  00216C  EC49  F007         	call	_digitalWrite	;wreg free
  4994                           
  4995                           ;so.c: 23:   PulseClockData();
  4996  002170  ECA7  F011         	call	_PulseClockData	;wreg free
  4997  002174                     
  4998                           ;so.c: 24:   value <<= 1;
  4999  002174  90D8               	bcf	status,0,c
  5000  002176  3607               	rlcf	soWrite@value^0,f,c
  5001  002178  3608               	rlcf	(soWrite@value+1)^0,f,c
  5002  00217A                     
  5003                           ;so.c: 25:  }
  5004  00217A  2A09               	incf	soWrite@i^0,f,c
  5005  00217C  0E07               	movlw	7
  5006  00217E  6409               	cpfsgt	soWrite@i^0,c
  5007  002180  EFC4  F010         	goto	u1811
  5008  002184  EFC6  F010         	goto	u1810
  5009  002188                     u1811:
  5010  002188  EFAE  F010         	goto	l2353
  5011  00218C                     u1810:
  5012  00218C                     
  5013                           ;so.c: 26:  PulseEnClock();
  5014  00218C  EC92  F011         	call	_PulseEnClock	;wreg free
  5015  002190  0012               	return		;funcret
  5016  002192                     __end_of_soWrite:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function _PulseEnClock *****************
  5020 ;; Defined at:
  5021 ;;		line 9 in file "so.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5035 ;;      Params:         0       0       0       0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0
  5038 ;;      Totals:         0       0       0       0       0       0       0
  5039 ;;Total ram usage:        0 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 1
  5042 ;; This function calls:
  5043 ;;		_digitalWrite
  5044 ;; This function is called by:
  5045 ;;		_soWrite
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text31
  5050  002324                     __ptext31:
  5051                           	callstack 0
  5052  002324                     _PulseEnClock:
  5053                           	callstack 24
  5054  002324                     
  5055                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5056  002324  0E00               	movlw	0
  5057  002326  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5058  002328  0E1F               	movlw	31
  5059  00232A  6E01               	movwf	digitalWrite@pin^0,c
  5060  00232C  0E00               	movlw	0
  5061  00232E  6E04               	movwf	(digitalWrite@value+1)^0,c
  5062  002330  0E01               	movlw	1
  5063  002332  6E03               	movwf	digitalWrite@value^0,c
  5064  002334  EC49  F007         	call	_digitalWrite	;wreg free
  5065                           
  5066                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5067  002338  0E00               	movlw	0
  5068  00233A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5069  00233C  0E1F               	movlw	31
  5070  00233E  6E01               	movwf	digitalWrite@pin^0,c
  5071  002340  0E00               	movlw	0
  5072  002342  6E04               	movwf	(digitalWrite@value+1)^0,c
  5073  002344  0E00               	movlw	0
  5074  002346  6E03               	movwf	digitalWrite@value^0,c
  5075  002348  EC49  F007         	call	_digitalWrite	;wreg free
  5076  00234C  0012               	return		;funcret
  5077  00234E                     __end_of_PulseEnClock:
  5078                           	callstack 0
  5079                           
  5080 ;; *************** function _PulseClockData *****************
  5081 ;; Defined at:
  5082 ;;		line 14 in file "so.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5096 ;;      Params:         0       0       0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0
  5099 ;;      Totals:         0       0       0       0       0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 1
  5103 ;; This function calls:
  5104 ;;		_digitalWrite
  5105 ;; This function is called by:
  5106 ;;		_soWrite
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text32
  5111  00234E                     __ptext32:
  5112                           	callstack 0
  5113  00234E                     _PulseClockData:
  5114                           	callstack 24
  5115  00234E                     
  5116                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5117  00234E  0E00               	movlw	0
  5118  002350  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5119  002352  0E08               	movlw	8
  5120  002354  6E01               	movwf	digitalWrite@pin^0,c
  5121  002356  0E00               	movlw	0
  5122  002358  6E04               	movwf	(digitalWrite@value+1)^0,c
  5123  00235A  0E01               	movlw	1
  5124  00235C  6E03               	movwf	digitalWrite@value^0,c
  5125  00235E  EC49  F007         	call	_digitalWrite	;wreg free
  5126                           
  5127                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  5128  002362  0E00               	movlw	0
  5129  002364  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5130  002366  0E08               	movlw	8
  5131  002368  6E01               	movwf	digitalWrite@pin^0,c
  5132  00236A  0E00               	movlw	0
  5133  00236C  6E04               	movwf	(digitalWrite@value+1)^0,c
  5134  00236E  0E00               	movlw	0
  5135  002370  6E03               	movwf	digitalWrite@value^0,c
  5136  002372  EC49  F007         	call	_digitalWrite	;wreg free
  5137  002376  0012               	return		;funcret
  5138  002378                     __end_of_PulseClockData:
  5139                           	callstack 0
  5140                           
  5141 ;; *************** function _pulseEnablePin *****************
  5142 ;; Defined at:
  5143 ;;		line 18 in file "lcd.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5157 ;;      Params:         0       0       0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0
  5160 ;;      Totals:         0       0       0       0       0       0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 1
  5164 ;; This function calls:
  5165 ;;		_delayMicro
  5166 ;;		_digitalWrite
  5167 ;; This function is called by:
  5168 ;;		_pushNibble
  5169 ;;		_pushByte
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text33
  5174  0021DA                     __ptext33:
  5175                           	callstack 0
  5176  0021DA                     _pulseEnablePin:
  5177                           	callstack 25
  5178  0021DA                     
  5179                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  5180  0021DA  0E00               	movlw	0
  5181  0021DC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5182  0021DE  0E1C               	movlw	28
  5183  0021E0  6E01               	movwf	digitalWrite@pin^0,c
  5184  0021E2  0E00               	movlw	0
  5185  0021E4  6E04               	movwf	(digitalWrite@value+1)^0,c
  5186  0021E6  0E01               	movlw	1
  5187  0021E8  6E03               	movwf	digitalWrite@value^0,c
  5188  0021EA  EC49  F007         	call	_digitalWrite	;wreg free
  5189  0021EE                     
  5190                           ;lcd.c: 20:  delayMicro(5);
  5191  0021EE  0E00               	movlw	0
  5192  0021F0  6E02               	movwf	(delayMicro@a+1)^0,c
  5193  0021F2  0E05               	movlw	5
  5194  0021F4  6E01               	movwf	delayMicro@a^0,c
  5195  0021F6  EC6B  F012         	call	_delayMicro	;wreg free
  5196  0021FA                     
  5197                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  5198  0021FA  0E00               	movlw	0
  5199  0021FC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5200  0021FE  0E1C               	movlw	28
  5201  002200  6E01               	movwf	digitalWrite@pin^0,c
  5202  002202  0E00               	movlw	0
  5203  002204  6E04               	movwf	(digitalWrite@value+1)^0,c
  5204  002206  0E00               	movlw	0
  5205  002208  6E03               	movwf	digitalWrite@value^0,c
  5206  00220A  EC49  F007         	call	_digitalWrite	;wreg free
  5207                           
  5208                           ;lcd.c: 22:  delayMicro(5);
  5209  00220E  0E00               	movlw	0
  5210  002210  6E02               	movwf	(delayMicro@a+1)^0,c
  5211  002212  0E05               	movlw	5
  5212  002214  6E01               	movwf	delayMicro@a^0,c
  5213  002216  EC6B  F012         	call	_delayMicro	;wreg free
  5214  00221A  0012               	return		;funcret
  5215  00221C                     __end_of_pulseEnablePin:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _digitalWrite *****************
  5219 ;; Defined at:
  5220 ;;		line 14 in file "io.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  pin             2    0[COMRAM] int 
  5223 ;;  value           2    2[COMRAM] int 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5235 ;;      Params:         4       0       0       0       0       0       0
  5236 ;;      Locals:         0       0       0       0       0       0       0
  5237 ;;      Temps:          2       0       0       0       0       0       0
  5238 ;;      Totals:         6       0       0       0       0       0       0
  5239 ;;Total ram usage:        6 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_pulseEnablePin
  5245 ;;		_pushNibble
  5246 ;;		_pushByte
  5247 ;;		_PulseEnClock
  5248 ;;		_PulseClockData
  5249 ;;		_soWrite
  5250 ;;		_ssdUpdate
  5251 ;;		_clear_SCL
  5252 ;;		_clear_SDA
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text34
  5257  000E92                     __ptext34:
  5258                           	callstack 0
  5259  000E92                     _digitalWrite:
  5260                           	callstack 25
  5261  000E92                     
  5262                           ;io.c: 16:     if(pin <8){
  5263  000E92  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5264  000E94  EF57  F007         	goto	u1610
  5265  000E98  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5266  000E9A  E107               	bnz	u1611
  5267  000E9C  0E08               	movlw	8
  5268  000E9E  5C01               	subwf	digitalWrite@pin^0,w,c
  5269  000EA0  B0D8               	btfsc	status,0,c
  5270  000EA2  EF55  F007         	goto	u1611
  5271  000EA6  EF57  F007         	goto	u1610
  5272  000EAA                     u1611:
  5273  000EAA  EF81  F007         	goto	l2309
  5274  000EAE                     u1610:
  5275  000EAE                     
  5276                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  5277  000EAE  5003               	movf	digitalWrite@value^0,w,c
  5278  000EB0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5279  000EB2  B4D8               	btfsc	status,2,c
  5280  000EB4  EF5E  F007         	goto	u1621
  5281  000EB8  EF60  F007         	goto	u1620
  5282  000EBC                     u1621:
  5283  000EBC  EF70  F007         	goto	l2307
  5284  000EC0                     u1620:
  5285  000EC0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5286  000EC4  0E01               	movlw	1
  5287  000EC6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5288  000EC8  2A05               	incf	??_digitalWrite^0,f,c
  5289  000ECA  EF69  F007         	goto	u1634
  5290  000ECE                     u1635:
  5291  000ECE  90D8               	bcf	status,0,c
  5292  000ED0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5293  000ED2                     u1634:
  5294  000ED2  2E05               	decfsz	??_digitalWrite^0,f,c
  5295  000ED4  EF67  F007         	goto	u1635
  5296  000ED8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5297  000EDA  1280               	iorwf	128,f,c	;volatile
  5298  000EDC  EF6F  F008         	goto	l83
  5299  000EE0                     l2307:
  5300  000EE0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5301  000EE4  0E01               	movlw	1
  5302  000EE6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5303  000EE8  2A05               	incf	??_digitalWrite^0,f,c
  5304  000EEA  EF79  F007         	goto	u1644
  5305  000EEE                     u1645:
  5306  000EEE  90D8               	bcf	status,0,c
  5307  000EF0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5308  000EF2                     u1644:
  5309  000EF2  2E05               	decfsz	??_digitalWrite^0,f,c
  5310  000EF4  EF77  F007         	goto	u1645
  5311  000EF8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5312  000EFA  0AFF               	xorlw	255
  5313  000EFC  1680               	andwf	128,f,c	;volatile
  5314  000EFE  EF6F  F008         	goto	l83
  5315  000F02                     l2309:
  5316  000F02  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5317  000F04  EF8F  F007         	goto	u1650
  5318  000F08  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5319  000F0A  E107               	bnz	u1651
  5320  000F0C  0E10               	movlw	16
  5321  000F0E  5C01               	subwf	digitalWrite@pin^0,w,c
  5322  000F10  B0D8               	btfsc	status,0,c
  5323  000F12  EF8D  F007         	goto	u1651
  5324  000F16  EF8F  F007         	goto	u1650
  5325  000F1A                     u1651:
  5326  000F1A  EFBD  F007         	goto	l2317
  5327  000F1E                     u1650:
  5328  000F1E                     
  5329                           ;io.c: 20:         pin -=8;
  5330  000F1E  0EF8               	movlw	248
  5331  000F20  2601               	addwf	digitalWrite@pin^0,f,c
  5332  000F22  0EFF               	movlw	255
  5333  000F24  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5334                           
  5335                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  5336  000F26  5003               	movf	digitalWrite@value^0,w,c
  5337  000F28  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5338  000F2A  B4D8               	btfsc	status,2,c
  5339  000F2C  EF9A  F007         	goto	u1661
  5340  000F30  EF9C  F007         	goto	u1660
  5341  000F34                     u1661:
  5342  000F34  EFAC  F007         	goto	l2315
  5343  000F38                     u1660:
  5344  000F38  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5345  000F3C  0E01               	movlw	1
  5346  000F3E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5347  000F40  2A05               	incf	??_digitalWrite^0,f,c
  5348  000F42  EFA5  F007         	goto	u1674
  5349  000F46                     u1675:
  5350  000F46  90D8               	bcf	status,0,c
  5351  000F48  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5352  000F4A                     u1674:
  5353  000F4A  2E05               	decfsz	??_digitalWrite^0,f,c
  5354  000F4C  EFA3  F007         	goto	u1675
  5355  000F50  5006               	movf	(??_digitalWrite+1)^0,w,c
  5356  000F52  1281               	iorwf	129,f,c	;volatile
  5357  000F54  EF6F  F008         	goto	l83
  5358  000F58                     l2315:
  5359  000F58  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5360  000F5C  0E01               	movlw	1
  5361  000F5E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5362  000F60  2A05               	incf	??_digitalWrite^0,f,c
  5363  000F62  EFB5  F007         	goto	u1684
  5364  000F66                     u1685:
  5365  000F66  90D8               	bcf	status,0,c
  5366  000F68  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5367  000F6A                     u1684:
  5368  000F6A  2E05               	decfsz	??_digitalWrite^0,f,c
  5369  000F6C  EFB3  F007         	goto	u1685
  5370  000F70  5006               	movf	(??_digitalWrite+1)^0,w,c
  5371  000F72  0AFF               	xorlw	255
  5372  000F74  1681               	andwf	129,f,c	;volatile
  5373  000F76  EF6F  F008         	goto	l83
  5374  000F7A                     l2317:
  5375  000F7A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5376  000F7C  EFCB  F007         	goto	u1690
  5377  000F80  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5378  000F82  E107               	bnz	u1691
  5379  000F84  0E18               	movlw	24
  5380  000F86  5C01               	subwf	digitalWrite@pin^0,w,c
  5381  000F88  B0D8               	btfsc	status,0,c
  5382  000F8A  EFC9  F007         	goto	u1691
  5383  000F8E  EFCB  F007         	goto	u1690
  5384  000F92                     u1691:
  5385  000F92  EFF9  F007         	goto	l2325
  5386  000F96                     u1690:
  5387  000F96                     
  5388                           ;io.c: 24:         pin -=16;
  5389  000F96  0EF0               	movlw	240
  5390  000F98  2601               	addwf	digitalWrite@pin^0,f,c
  5391  000F9A  0EFF               	movlw	255
  5392  000F9C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5393                           
  5394                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  5395  000F9E  5003               	movf	digitalWrite@value^0,w,c
  5396  000FA0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5397  000FA2  B4D8               	btfsc	status,2,c
  5398  000FA4  EFD6  F007         	goto	u1701
  5399  000FA8  EFD8  F007         	goto	u1700
  5400  000FAC                     u1701:
  5401  000FAC  EFE8  F007         	goto	l2323
  5402  000FB0                     u1700:
  5403  000FB0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5404  000FB4  0E01               	movlw	1
  5405  000FB6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5406  000FB8  2A05               	incf	??_digitalWrite^0,f,c
  5407  000FBA  EFE1  F007         	goto	u1714
  5408  000FBE                     u1715:
  5409  000FBE  90D8               	bcf	status,0,c
  5410  000FC0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5411  000FC2                     u1714:
  5412  000FC2  2E05               	decfsz	??_digitalWrite^0,f,c
  5413  000FC4  EFDF  F007         	goto	u1715
  5414  000FC8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5415  000FCA  1282               	iorwf	130,f,c	;volatile
  5416  000FCC  EF6F  F008         	goto	l83
  5417  000FD0                     l2323:
  5418  000FD0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5419  000FD4  0E01               	movlw	1
  5420  000FD6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5421  000FD8  2A05               	incf	??_digitalWrite^0,f,c
  5422  000FDA  EFF1  F007         	goto	u1724
  5423  000FDE                     u1725:
  5424  000FDE  90D8               	bcf	status,0,c
  5425  000FE0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5426  000FE2                     u1724:
  5427  000FE2  2E05               	decfsz	??_digitalWrite^0,f,c
  5428  000FE4  EFEF  F007         	goto	u1725
  5429  000FE8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5430  000FEA  0AFF               	xorlw	255
  5431  000FEC  1682               	andwf	130,f,c	;volatile
  5432  000FEE  EF6F  F008         	goto	l83
  5433  000FF2                     l2325:
  5434  000FF2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5435  000FF4  EF07  F008         	goto	u1730
  5436  000FF8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5437  000FFA  E107               	bnz	u1731
  5438  000FFC  0E20               	movlw	32
  5439  000FFE  5C01               	subwf	digitalWrite@pin^0,w,c
  5440  001000  B0D8               	btfsc	status,0,c
  5441  001002  EF05  F008         	goto	u1731
  5442  001006  EF07  F008         	goto	u1730
  5443  00100A                     u1731:
  5444  00100A  EF35  F008         	goto	l2333
  5445  00100E                     u1730:
  5446  00100E                     
  5447                           ;io.c: 28:         pin -=24;
  5448  00100E  0EE8               	movlw	232
  5449  001010  2601               	addwf	digitalWrite@pin^0,f,c
  5450  001012  0EFF               	movlw	255
  5451  001014  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5452                           
  5453                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5454  001016  5003               	movf	digitalWrite@value^0,w,c
  5455  001018  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5456  00101A  B4D8               	btfsc	status,2,c
  5457  00101C  EF12  F008         	goto	u1741
  5458  001020  EF14  F008         	goto	u1740
  5459  001024                     u1741:
  5460  001024  EF24  F008         	goto	l2331
  5461  001028                     u1740:
  5462  001028  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5463  00102C  0E01               	movlw	1
  5464  00102E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5465  001030  2A05               	incf	??_digitalWrite^0,f,c
  5466  001032  EF1D  F008         	goto	u1754
  5467  001036                     u1755:
  5468  001036  90D8               	bcf	status,0,c
  5469  001038  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5470  00103A                     u1754:
  5471  00103A  2E05               	decfsz	??_digitalWrite^0,f,c
  5472  00103C  EF1B  F008         	goto	u1755
  5473  001040  5006               	movf	(??_digitalWrite+1)^0,w,c
  5474  001042  1283               	iorwf	131,f,c	;volatile
  5475  001044  EF6F  F008         	goto	l83
  5476  001048                     l2331:
  5477  001048  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5478  00104C  0E01               	movlw	1
  5479  00104E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5480  001050  2A05               	incf	??_digitalWrite^0,f,c
  5481  001052  EF2D  F008         	goto	u1764
  5482  001056                     u1765:
  5483  001056  90D8               	bcf	status,0,c
  5484  001058  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5485  00105A                     u1764:
  5486  00105A  2E05               	decfsz	??_digitalWrite^0,f,c
  5487  00105C  EF2B  F008         	goto	u1765
  5488  001060  5006               	movf	(??_digitalWrite+1)^0,w,c
  5489  001062  0AFF               	xorlw	255
  5490  001064  1683               	andwf	131,f,c	;volatile
  5491  001066  EF6F  F008         	goto	l83
  5492  00106A                     l2333:
  5493  00106A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5494  00106C  EF43  F008         	goto	u1770
  5495  001070  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5496  001072  E107               	bnz	u1771
  5497  001074  0E28               	movlw	40
  5498  001076  5C01               	subwf	digitalWrite@pin^0,w,c
  5499  001078  B0D8               	btfsc	status,0,c
  5500  00107A  EF41  F008         	goto	u1771
  5501  00107E  EF43  F008         	goto	u1770
  5502  001082                     u1771:
  5503  001082  EF6F  F008         	goto	l83
  5504  001086                     u1770:
  5505  001086                     
  5506                           ;io.c: 32:         pin -=32;
  5507  001086  0EE0               	movlw	224
  5508  001088  2601               	addwf	digitalWrite@pin^0,f,c
  5509  00108A  0EFF               	movlw	255
  5510  00108C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5511                           
  5512                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5513  00108E  5003               	movf	digitalWrite@value^0,w,c
  5514  001090  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5515  001092  B4D8               	btfsc	status,2,c
  5516  001094  EF4E  F008         	goto	u1781
  5517  001098  EF50  F008         	goto	u1780
  5518  00109C                     u1781:
  5519  00109C  EF60  F008         	goto	l2339
  5520  0010A0                     u1780:
  5521  0010A0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5522  0010A4  0E01               	movlw	1
  5523  0010A6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5524  0010A8  2A05               	incf	??_digitalWrite^0,f,c
  5525  0010AA  EF59  F008         	goto	u1794
  5526  0010AE                     u1795:
  5527  0010AE  90D8               	bcf	status,0,c
  5528  0010B0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5529  0010B2                     u1794:
  5530  0010B2  2E05               	decfsz	??_digitalWrite^0,f,c
  5531  0010B4  EF57  F008         	goto	u1795
  5532  0010B8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5533  0010BA  1284               	iorwf	132,f,c	;volatile
  5534  0010BC  EF6F  F008         	goto	l83
  5535  0010C0                     l2339:
  5536  0010C0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5537  0010C4  0E01               	movlw	1
  5538  0010C6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5539  0010C8  2A05               	incf	??_digitalWrite^0,f,c
  5540  0010CA  EF69  F008         	goto	u1804
  5541  0010CE                     u1805:
  5542  0010CE  90D8               	bcf	status,0,c
  5543  0010D0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5544  0010D2                     u1804:
  5545  0010D2  2E05               	decfsz	??_digitalWrite^0,f,c
  5546  0010D4  EF67  F008         	goto	u1805
  5547  0010D8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5548  0010DA  0AFF               	xorlw	255
  5549  0010DC  1684               	andwf	132,f,c	;volatile
  5550  0010DE                     l83:
  5551  0010DE  0012               	return		;funcret
  5552  0010E0                     __end_of_digitalWrite:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function _delayMicro *****************
  5556 ;; Defined at:
  5557 ;;		line 5 in file "lcd.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  a               2    0[COMRAM] int 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  i               2    0        volatile int 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      void 
  5564 ;; Registers used:
  5565 ;;		None
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5571 ;;      Params:         2       0       0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0
  5574 ;;      Totals:         2       0       0       0       0       0       0
  5575 ;;Total ram usage:        2 bytes
  5576 ;; Hardware stack levels used: 1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_pulseEnablePin
  5581 ;;		_lcdChar
  5582 ;;		_lcdInit
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text35
  5587  0024D6                     __ptext35:
  5588                           	callstack 0
  5589  0024D6                     _delayMicro:
  5590                           	callstack 25
  5591  0024D6  0012               	return		;funcret
  5592  0024D8                     __end_of_delayMicro:
  5593                           	callstack 0
  5594                           
  5595 ;; *************** function _delayMili *****************
  5596 ;; Defined at:
  5597 ;;		line 10 in file "lcd.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  a               2    0[COMRAM] int 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  i               2    3[COMRAM] volatile int 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, status,2, status,0
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5611 ;;      Params:         2       0       0       0       0       0       0
  5612 ;;      Locals:         2       0       0       0       0       0       0
  5613 ;;      Temps:          1       0       0       0       0       0       0
  5614 ;;      Totals:         5       0       0       0       0       0       0
  5615 ;;Total ram usage:        5 bytes
  5616 ;; Hardware stack levels used: 1
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_lcdCommand
  5621 ;;		_lcdInit
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text36
  5626  0022C6                     __ptext36:
  5627                           	callstack 0
  5628  0022C6                     _delayMili:
  5629                           	callstack 27
  5630  0022C6                     
  5631                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  5632  0022C6  0E00               	movlw	0
  5633  0022C8  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  5634  0022CA  0E00               	movlw	0
  5635  0022CC  6E04               	movwf	delayMili@i^0,c	;volatile
  5636  0022CE  EF6B  F011         	goto	l2373
  5637  0022D2                     l2371:
  5638                           
  5639                           ;lcd.c: 15:  }
  5640  0022D2  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  5641  0022D4  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  5642  0022D6                     l2373:
  5643  0022D6  5001               	movf	delayMili@a^0,w,c
  5644  0022D8  5C04               	subwf	delayMili@i^0,w,c	;volatile
  5645  0022DA  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  5646  0022DC  0A80               	xorlw	128
  5647  0022DE  6E03               	movwf	??_delayMili^0,c
  5648  0022E0  5002               	movf	(delayMili@a+1)^0,w,c
  5649  0022E2  0A80               	xorlw	128
  5650  0022E4  5803               	subwfb	??_delayMili^0,w,c
  5651  0022E6  A0D8               	btfss	status,0,c
  5652  0022E8  EF78  F011         	goto	u1821
  5653  0022EC  EF7A  F011         	goto	u1820
  5654  0022F0                     u1821:
  5655  0022F0  EF69  F011         	goto	l2371
  5656  0022F4                     u1820:
  5657  0022F4  0012               	return		;funcret
  5658  0022F6                     __end_of_delayMili:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function _atraso_ms *****************
  5662 ;; Defined at:
  5663 ;;		line 2 in file "atraso.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  num             2    0[COMRAM] unsigned int 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  i               2    2[COMRAM] int 
  5668 ;;  k               1    5[COMRAM] volatile unsigned char 
  5669 ;;  j               1    4[COMRAM] volatile unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5679 ;;      Params:         2       0       0       0       0       0       0
  5680 ;;      Locals:         4       0       0       0       0       0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0
  5682 ;;      Totals:         6       0       0       0       0       0       0
  5683 ;;Total ram usage:        6 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_main
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text37
  5693  001E78                     __ptext37:
  5694                           	callstack 0
  5695  001E78                     _atraso_ms:
  5696                           	callstack 30
  5697  001E78                     
  5698                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  5699  001E78  0E00               	movlw	0
  5700  001E7A  6E04               	movwf	(atraso_ms@i+1)^0,c
  5701  001E7C  0E00               	movlw	0
  5702  001E7E  6E03               	movwf	atraso_ms@i^0,c
  5703  001E80  EF62  F00F         	goto	l2931
  5704  001E84                     l2909:
  5705                           
  5706                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  5707  001E84  0E00               	movlw	0
  5708  001E86  6E05               	movwf	atraso_ms@j^0,c	;volatile
  5709  001E88                     l2911:
  5710  001E88  0E28               	movlw	40
  5711  001E8A  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  5712  001E8C  EF4A  F00F         	goto	u2631
  5713  001E90  EF4C  F00F         	goto	u2630
  5714  001E94                     u2631:
  5715  001E94  EF4E  F00F         	goto	l2915
  5716  001E98                     u2630:
  5717  001E98  EF60  F00F         	goto	l2929
  5718  001E9C                     l2915:
  5719                           
  5720                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  5721  001E9C  0E00               	movlw	0
  5722  001E9E  6E06               	movwf	atraso_ms@k^0,c	;volatile
  5723  001EA0                     l2917:
  5724  001EA0  0E02               	movlw	2
  5725  001EA2  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  5726  001EA4  EF56  F00F         	goto	u2641
  5727  001EA8  EF58  F00F         	goto	u2640
  5728  001EAC                     u2641:
  5729  001EAC  EF5A  F00F         	goto	l2921
  5730  001EB0                     u2640:
  5731  001EB0  EF5D  F00F         	goto	l2925
  5732  001EB4                     l2921:
  5733  001EB4  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  5734  001EB6  EF50  F00F         	goto	l2917
  5735  001EBA                     l2925:
  5736                           
  5737                           ;atraso.c: 7:         }
  5738  001EBA  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  5739  001EBC  EF44  F00F         	goto	l2911
  5740  001EC0                     l2929:
  5741                           
  5742                           ;atraso.c: 9:     }
  5743  001EC0  4A03               	infsnz	atraso_ms@i^0,f,c
  5744  001EC2  2A04               	incf	(atraso_ms@i+1)^0,f,c
  5745  001EC4                     l2931:
  5746  001EC4  5001               	movf	atraso_ms@num^0,w,c
  5747  001EC6  5C03               	subwf	atraso_ms@i^0,w,c
  5748  001EC8  5002               	movf	(atraso_ms@num+1)^0,w,c
  5749  001ECA  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  5750  001ECC  A0D8               	btfss	status,0,c
  5751  001ECE  EF6B  F00F         	goto	u2651
  5752  001ED2  EF6D  F00F         	goto	u2650
  5753  001ED6                     u2651:
  5754  001ED6  EF42  F00F         	goto	l2909
  5755  001EDA                     u2650:
  5756  001EDA  0012               	return		;funcret
  5757  001EDC                     __end_of_atraso_ms:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function _adcRead *****************
  5761 ;; Defined at:
  5762 ;;		line 38 in file "adc.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  channel         2    0[COMRAM] unsigned int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  ADvalor         2    2[COMRAM] unsigned int 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  2    0[COMRAM] int 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5776 ;;      Params:         2       0       0       0       0       0       0
  5777 ;;      Locals:         2       0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0
  5779 ;;      Totals:         4       0       0       0       0       0       0
  5780 ;;Total ram usage:        4 bytes
  5781 ;; Hardware stack levels used: 1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_main
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text38
  5790  0020F4                     __ptext38:
  5791                           	callstack 0
  5792  0020F4                     _adcRead:
  5793                           	callstack 30
  5794  0020F4                     
  5795                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  5796  0020F4  0EC3               	movlw	195
  5797  0020F6  16C2               	andwf	194,f,c	;volatile
  5798                           
  5799                           ;adc.c: 41:     if (channel < 3) {
  5800  0020F8  5002               	movf	(adcRead@channel+1)^0,w,c
  5801  0020FA  E107               	bnz	u2611
  5802  0020FC  0E03               	movlw	3
  5803  0020FE  5C01               	subwf	adcRead@channel^0,w,c
  5804  002100  B0D8               	btfsc	status,0,c
  5805  002102  EF85  F010         	goto	u2611
  5806  002106  EF87  F010         	goto	u2610
  5807  00210A                     u2611:
  5808  00210A  EF8B  F010         	goto	l2897
  5809  00210E                     u2610:
  5810  00210E                     
  5811                           ;adc.c: 42:         ADCON0 |= channel << 2;
  5812  00210E  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  5813  002110  46E8               	rlncf	wreg,f,c
  5814  002112  0BFC               	andlw	252
  5815  002114  12C2               	iorwf	194,f,c	;volatile
  5816  002116                     l2897:
  5817                           
  5818                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  5819  002116  82C2               	bsf	194,1,c	;volatile
  5820  002118                     l380:
  5821  002118  B2C2               	btfsc	194,1,c	;volatile
  5822  00211A  EF91  F010         	goto	u2621
  5823  00211E  EF93  F010         	goto	u2620
  5824  002122                     u2621:
  5825  002122  EF8C  F010         	goto	l380
  5826  002126                     u2620:
  5827  002126                     
  5828                           ;adc.c: 49:     ADvalor = ADRESH;
  5829  002126  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  5830  00212A  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  5831  00212C                     
  5832                           ;adc.c: 50:     ADvalor <<= 8;
  5833  00212C  5003               	movf	adcRead@ADvalor^0,w,c
  5834  00212E  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  5835  002130  6A03               	clrf	adcRead@ADvalor^0,c
  5836  002132                     
  5837                           ;adc.c: 51:     ADvalor += ADRESL;
  5838  002132  50C3               	movf	195,w,c	;volatile
  5839  002134  2603               	addwf	adcRead@ADvalor^0,f,c
  5840  002136  0E00               	movlw	0
  5841  002138  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  5842  00213A                     
  5843                           ;adc.c: 52:     return ADvalor;
  5844  00213A  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  5845  00213E  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  5846  002142  0012               	return		;funcret
  5847  002144                     __end_of_adcRead:
  5848                           	callstack 0
  5849                           
  5850 ;; *************** function _adcInit *****************
  5851 ;; Defined at:
  5852 ;;		line 25 in file "adc.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;		None
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, status,0, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5866 ;;      Params:         0       0       0       0       0       0       0
  5867 ;;      Locals:         0       0       0       0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0
  5869 ;;      Totals:         0       0       0       0       0       0       0
  5870 ;;Total ram usage:        0 bytes
  5871 ;; Hardware stack levels used: 1
  5872 ;; Hardware stack levels required when called: 1
  5873 ;; This function calls:
  5874 ;;		_pinMode
  5875 ;; This function is called by:
  5876 ;;		_main
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text39
  5881  002192                     __ptext39:
  5882                           	callstack 0
  5883  002192                     _adcInit:
  5884                           	callstack 29
  5885  002192                     
  5886                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  5887  002192  0E00               	movlw	0
  5888  002194  6E02               	movwf	(pinMode@pin+1)^0,c
  5889  002196  0E00               	movlw	0
  5890  002198  6E01               	movwf	pinMode@pin^0,c
  5891  00219A  0E00               	movlw	0
  5892  00219C  6E04               	movwf	(pinMode@type+1)^0,c
  5893  00219E  0E01               	movlw	1
  5894  0021A0  6E03               	movwf	pinMode@type^0,c
  5895  0021A2  EC70  F008         	call	_pinMode	;wreg free
  5896                           
  5897                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  5898  0021A6  0E00               	movlw	0
  5899  0021A8  6E02               	movwf	(pinMode@pin+1)^0,c
  5900  0021AA  0E01               	movlw	1
  5901  0021AC  6E01               	movwf	pinMode@pin^0,c
  5902  0021AE  0E00               	movlw	0
  5903  0021B0  6E04               	movwf	(pinMode@type+1)^0,c
  5904  0021B2  0E01               	movlw	1
  5905  0021B4  6E03               	movwf	pinMode@type^0,c
  5906  0021B6  EC70  F008         	call	_pinMode	;wreg free
  5907                           
  5908                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  5909  0021BA  0E00               	movlw	0
  5910  0021BC  6E02               	movwf	(pinMode@pin+1)^0,c
  5911  0021BE  0E02               	movlw	2
  5912  0021C0  6E01               	movwf	pinMode@pin^0,c
  5913  0021C2  0E00               	movlw	0
  5914  0021C4  6E04               	movwf	(pinMode@type+1)^0,c
  5915  0021C6  0E01               	movlw	1
  5916  0021C8  6E03               	movwf	pinMode@type^0,c
  5917  0021CA  EC70  F008         	call	_pinMode	;wreg free
  5918  0021CE                     
  5919                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  5920  0021CE  80C2               	bsf	194,0,c	;volatile
  5921  0021D0                     
  5922                           ;adc.c: 33:     ADCON1 = 0b00001100;
  5923  0021D0  0E0C               	movlw	12
  5924  0021D2  6EC1               	movwf	193,c	;volatile
  5925  0021D4                     
  5926                           ;adc.c: 34:     ADCON2 = 0b10101010;
  5927  0021D4  0EAA               	movlw	170
  5928  0021D6  6EC0               	movwf	192,c	;volatile
  5929  0021D8  0012               	return		;funcret
  5930  0021DA                     __end_of_adcInit:
  5931                           	callstack 0
  5932                           
  5933 ;; *************** function _pinMode *****************
  5934 ;; Defined at:
  5935 ;;		line 54 in file "io.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  pin             2    0[COMRAM] int 
  5938 ;;  type            2    2[COMRAM] int 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;		None
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, status,2, status,0
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5950 ;;      Params:         4       0       0       0       0       0       0
  5951 ;;      Locals:         0       0       0       0       0       0       0
  5952 ;;      Temps:          2       0       0       0       0       0       0
  5953 ;;      Totals:         6       0       0       0       0       0       0
  5954 ;;Total ram usage:        6 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; This function calls:
  5957 ;;		Nothing
  5958 ;; This function is called by:
  5959 ;;		_kpInit
  5960 ;;		_lcdInit
  5961 ;;		_soInit
  5962 ;;		_ssdInit
  5963 ;;		_adcInit
  5964 ;;		_i2cInit
  5965 ;;		_read_SCL
  5966 ;;		_read_SDA
  5967 ;;		_clear_SCL
  5968 ;;		_clear_SDA
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text40
  5973  0010E0                     __ptext40:
  5974                           	callstack 0
  5975  0010E0                     _pinMode:
  5976                           	callstack 28
  5977  0010E0                     
  5978                           ;io.c: 56:     if(pin <8){
  5979  0010E0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5980  0010E2  EF7E  F008         	goto	u1830
  5981  0010E6  5002               	movf	(pinMode@pin+1)^0,w,c
  5982  0010E8  E107               	bnz	u1831
  5983  0010EA  0E08               	movlw	8
  5984  0010EC  5C01               	subwf	pinMode@pin^0,w,c
  5985  0010EE  B0D8               	btfsc	status,0,c
  5986  0010F0  EF7C  F008         	goto	u1831
  5987  0010F4  EF7E  F008         	goto	u1830
  5988  0010F8                     u1831:
  5989  0010F8  EFA8  F008         	goto	l2391
  5990  0010FC                     u1830:
  5991  0010FC                     
  5992                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5993  0010FC  5003               	movf	pinMode@type^0,w,c
  5994  0010FE  1004               	iorwf	(pinMode@type+1)^0,w,c
  5995  001100  B4D8               	btfsc	status,2,c
  5996  001102  EF85  F008         	goto	u1841
  5997  001106  EF87  F008         	goto	u1840
  5998  00110A                     u1841:
  5999  00110A  EF97  F008         	goto	l2389
  6000  00110E                     u1840:
  6001  00110E  C001  F005         	movff	pinMode@pin,??_pinMode
  6002  001112  0E01               	movlw	1
  6003  001114  6E06               	movwf	(??_pinMode+1)^0,c
  6004  001116  2A05               	incf	??_pinMode^0,f,c
  6005  001118  EF90  F008         	goto	u1854
  6006  00111C                     u1855:
  6007  00111C  90D8               	bcf	status,0,c
  6008  00111E  3606               	rlcf	(??_pinMode+1)^0,f,c
  6009  001120                     u1854:
  6010  001120  2E05               	decfsz	??_pinMode^0,f,c
  6011  001122  EF8E  F008         	goto	u1855
  6012  001126  5006               	movf	(??_pinMode+1)^0,w,c
  6013  001128  1292               	iorwf	146,f,c	;volatile
  6014  00112A  EF96  F009         	goto	l117
  6015  00112E                     l2389:
  6016  00112E  C001  F005         	movff	pinMode@pin,??_pinMode
  6017  001132  0E01               	movlw	1
  6018  001134  6E06               	movwf	(??_pinMode+1)^0,c
  6019  001136  2A05               	incf	??_pinMode^0,f,c
  6020  001138  EFA0  F008         	goto	u1864
  6021  00113C                     u1865:
  6022  00113C  90D8               	bcf	status,0,c
  6023  00113E  3606               	rlcf	(??_pinMode+1)^0,f,c
  6024  001140                     u1864:
  6025  001140  2E05               	decfsz	??_pinMode^0,f,c
  6026  001142  EF9E  F008         	goto	u1865
  6027  001146  5006               	movf	(??_pinMode+1)^0,w,c
  6028  001148  0AFF               	xorlw	255
  6029  00114A  1692               	andwf	146,f,c	;volatile
  6030  00114C  EF96  F009         	goto	l117
  6031  001150                     l2391:
  6032  001150  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6033  001152  EFB6  F008         	goto	u1870
  6034  001156  5002               	movf	(pinMode@pin+1)^0,w,c
  6035  001158  E107               	bnz	u1871
  6036  00115A  0E10               	movlw	16
  6037  00115C  5C01               	subwf	pinMode@pin^0,w,c
  6038  00115E  B0D8               	btfsc	status,0,c
  6039  001160  EFB4  F008         	goto	u1871
  6040  001164  EFB6  F008         	goto	u1870
  6041  001168                     u1871:
  6042  001168  EFE4  F008         	goto	l2399
  6043  00116C                     u1870:
  6044  00116C                     
  6045                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  6046  00116C  5003               	movf	pinMode@type^0,w,c
  6047  00116E  1004               	iorwf	(pinMode@type+1)^0,w,c
  6048  001170  B4D8               	btfsc	status,2,c
  6049  001172  EFBD  F008         	goto	u1881
  6050  001176  EFBF  F008         	goto	u1880
  6051  00117A                     u1881:
  6052  00117A  EFD1  F008         	goto	l2397
  6053  00117E                     u1880:
  6054  00117E  C001  F005         	movff	pinMode@pin,??_pinMode
  6055  001182  0EF8               	movlw	-8
  6056  001184  2605               	addwf	??_pinMode^0,f,c
  6057  001186  0E01               	movlw	1
  6058  001188  6E06               	movwf	(??_pinMode+1)^0,c
  6059  00118A  2A05               	incf	??_pinMode^0,f,c
  6060  00118C  EFCA  F008         	goto	u1894
  6061  001190                     u1895:
  6062  001190  90D8               	bcf	status,0,c
  6063  001192  3606               	rlcf	(??_pinMode+1)^0,f,c
  6064  001194                     u1894:
  6065  001194  2E05               	decfsz	??_pinMode^0,f,c
  6066  001196  EFC8  F008         	goto	u1895
  6067  00119A  5006               	movf	(??_pinMode+1)^0,w,c
  6068  00119C  1293               	iorwf	147,f,c	;volatile
  6069  00119E  EF96  F009         	goto	l117
  6070  0011A2                     l2397:
  6071  0011A2  C001  F005         	movff	pinMode@pin,??_pinMode
  6072  0011A6  0EF8               	movlw	-8
  6073  0011A8  2605               	addwf	??_pinMode^0,f,c
  6074  0011AA  0E01               	movlw	1
  6075  0011AC  6E06               	movwf	(??_pinMode+1)^0,c
  6076  0011AE  2A05               	incf	??_pinMode^0,f,c
  6077  0011B0  EFDC  F008         	goto	u1904
  6078  0011B4                     u1905:
  6079  0011B4  90D8               	bcf	status,0,c
  6080  0011B6  3606               	rlcf	(??_pinMode+1)^0,f,c
  6081  0011B8                     u1904:
  6082  0011B8  2E05               	decfsz	??_pinMode^0,f,c
  6083  0011BA  EFDA  F008         	goto	u1905
  6084  0011BE  5006               	movf	(??_pinMode+1)^0,w,c
  6085  0011C0  0AFF               	xorlw	255
  6086  0011C2  1693               	andwf	147,f,c	;volatile
  6087  0011C4  EF96  F009         	goto	l117
  6088  0011C8                     l2399:
  6089  0011C8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6090  0011CA  EFF2  F008         	goto	u1910
  6091  0011CE  5002               	movf	(pinMode@pin+1)^0,w,c
  6092  0011D0  E107               	bnz	u1911
  6093  0011D2  0E18               	movlw	24
  6094  0011D4  5C01               	subwf	pinMode@pin^0,w,c
  6095  0011D6  B0D8               	btfsc	status,0,c
  6096  0011D8  EFF0  F008         	goto	u1911
  6097  0011DC  EFF2  F008         	goto	u1910
  6098  0011E0                     u1911:
  6099  0011E0  EF20  F009         	goto	l2407
  6100  0011E4                     u1910:
  6101  0011E4                     
  6102                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  6103  0011E4  5003               	movf	pinMode@type^0,w,c
  6104  0011E6  1004               	iorwf	(pinMode@type+1)^0,w,c
  6105  0011E8  B4D8               	btfsc	status,2,c
  6106  0011EA  EFF9  F008         	goto	u1921
  6107  0011EE  EFFB  F008         	goto	u1920
  6108  0011F2                     u1921:
  6109  0011F2  EF0D  F009         	goto	l2405
  6110  0011F6                     u1920:
  6111  0011F6  C001  F005         	movff	pinMode@pin,??_pinMode
  6112  0011FA  0EF0               	movlw	-16
  6113  0011FC  2605               	addwf	??_pinMode^0,f,c
  6114  0011FE  0E01               	movlw	1
  6115  001200  6E06               	movwf	(??_pinMode+1)^0,c
  6116  001202  2A05               	incf	??_pinMode^0,f,c
  6117  001204  EF06  F009         	goto	u1934
  6118  001208                     u1935:
  6119  001208  90D8               	bcf	status,0,c
  6120  00120A  3606               	rlcf	(??_pinMode+1)^0,f,c
  6121  00120C                     u1934:
  6122  00120C  2E05               	decfsz	??_pinMode^0,f,c
  6123  00120E  EF04  F009         	goto	u1935
  6124  001212  5006               	movf	(??_pinMode+1)^0,w,c
  6125  001214  1294               	iorwf	148,f,c	;volatile
  6126  001216  EF96  F009         	goto	l117
  6127  00121A                     l2405:
  6128  00121A  C001  F005         	movff	pinMode@pin,??_pinMode
  6129  00121E  0EF0               	movlw	-16
  6130  001220  2605               	addwf	??_pinMode^0,f,c
  6131  001222  0E01               	movlw	1
  6132  001224  6E06               	movwf	(??_pinMode+1)^0,c
  6133  001226  2A05               	incf	??_pinMode^0,f,c
  6134  001228  EF18  F009         	goto	u1944
  6135  00122C                     u1945:
  6136  00122C  90D8               	bcf	status,0,c
  6137  00122E  3606               	rlcf	(??_pinMode+1)^0,f,c
  6138  001230                     u1944:
  6139  001230  2E05               	decfsz	??_pinMode^0,f,c
  6140  001232  EF16  F009         	goto	u1945
  6141  001236  5006               	movf	(??_pinMode+1)^0,w,c
  6142  001238  0AFF               	xorlw	255
  6143  00123A  1694               	andwf	148,f,c	;volatile
  6144  00123C  EF96  F009         	goto	l117
  6145  001240                     l2407:
  6146  001240  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6147  001242  EF2E  F009         	goto	u1950
  6148  001246  5002               	movf	(pinMode@pin+1)^0,w,c
  6149  001248  E107               	bnz	u1951
  6150  00124A  0E20               	movlw	32
  6151  00124C  5C01               	subwf	pinMode@pin^0,w,c
  6152  00124E  B0D8               	btfsc	status,0,c
  6153  001250  EF2C  F009         	goto	u1951
  6154  001254  EF2E  F009         	goto	u1950
  6155  001258                     u1951:
  6156  001258  EF5C  F009         	goto	l2415
  6157  00125C                     u1950:
  6158  00125C                     
  6159                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  6160  00125C  5003               	movf	pinMode@type^0,w,c
  6161  00125E  1004               	iorwf	(pinMode@type+1)^0,w,c
  6162  001260  B4D8               	btfsc	status,2,c
  6163  001262  EF35  F009         	goto	u1961
  6164  001266  EF37  F009         	goto	u1960
  6165  00126A                     u1961:
  6166  00126A  EF49  F009         	goto	l2413
  6167  00126E                     u1960:
  6168  00126E  C001  F005         	movff	pinMode@pin,??_pinMode
  6169  001272  0EE8               	movlw	-24
  6170  001274  2605               	addwf	??_pinMode^0,f,c
  6171  001276  0E01               	movlw	1
  6172  001278  6E06               	movwf	(??_pinMode+1)^0,c
  6173  00127A  2A05               	incf	??_pinMode^0,f,c
  6174  00127C  EF42  F009         	goto	u1974
  6175  001280                     u1975:
  6176  001280  90D8               	bcf	status,0,c
  6177  001282  3606               	rlcf	(??_pinMode+1)^0,f,c
  6178  001284                     u1974:
  6179  001284  2E05               	decfsz	??_pinMode^0,f,c
  6180  001286  EF40  F009         	goto	u1975
  6181  00128A  5006               	movf	(??_pinMode+1)^0,w,c
  6182  00128C  1295               	iorwf	149,f,c	;volatile
  6183  00128E  EF96  F009         	goto	l117
  6184  001292                     l2413:
  6185  001292  C001  F005         	movff	pinMode@pin,??_pinMode
  6186  001296  0EE8               	movlw	-24
  6187  001298  2605               	addwf	??_pinMode^0,f,c
  6188  00129A  0E01               	movlw	1
  6189  00129C  6E06               	movwf	(??_pinMode+1)^0,c
  6190  00129E  2A05               	incf	??_pinMode^0,f,c
  6191  0012A0  EF54  F009         	goto	u1984
  6192  0012A4                     u1985:
  6193  0012A4  90D8               	bcf	status,0,c
  6194  0012A6  3606               	rlcf	(??_pinMode+1)^0,f,c
  6195  0012A8                     u1984:
  6196  0012A8  2E05               	decfsz	??_pinMode^0,f,c
  6197  0012AA  EF52  F009         	goto	u1985
  6198  0012AE  5006               	movf	(??_pinMode+1)^0,w,c
  6199  0012B0  0AFF               	xorlw	255
  6200  0012B2  1695               	andwf	149,f,c	;volatile
  6201  0012B4  EF96  F009         	goto	l117
  6202  0012B8                     l2415:
  6203  0012B8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6204  0012BA  EF6A  F009         	goto	u1990
  6205  0012BE  5002               	movf	(pinMode@pin+1)^0,w,c
  6206  0012C0  E107               	bnz	u1991
  6207  0012C2  0E28               	movlw	40
  6208  0012C4  5C01               	subwf	pinMode@pin^0,w,c
  6209  0012C6  B0D8               	btfsc	status,0,c
  6210  0012C8  EF68  F009         	goto	u1991
  6211  0012CC  EF6A  F009         	goto	u1990
  6212  0012D0                     u1991:
  6213  0012D0  EF96  F009         	goto	l117
  6214  0012D4                     u1990:
  6215  0012D4                     
  6216                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  6217  0012D4  5003               	movf	pinMode@type^0,w,c
  6218  0012D6  1004               	iorwf	(pinMode@type+1)^0,w,c
  6219  0012D8  B4D8               	btfsc	status,2,c
  6220  0012DA  EF71  F009         	goto	u2001
  6221  0012DE  EF73  F009         	goto	u2000
  6222  0012E2                     u2001:
  6223  0012E2  EF85  F009         	goto	l2421
  6224  0012E6                     u2000:
  6225  0012E6  C001  F005         	movff	pinMode@pin,??_pinMode
  6226  0012EA  0EE0               	movlw	-32
  6227  0012EC  2605               	addwf	??_pinMode^0,f,c
  6228  0012EE  0E01               	movlw	1
  6229  0012F0  6E06               	movwf	(??_pinMode+1)^0,c
  6230  0012F2  2A05               	incf	??_pinMode^0,f,c
  6231  0012F4  EF7E  F009         	goto	u2014
  6232  0012F8                     u2015:
  6233  0012F8  90D8               	bcf	status,0,c
  6234  0012FA  3606               	rlcf	(??_pinMode+1)^0,f,c
  6235  0012FC                     u2014:
  6236  0012FC  2E05               	decfsz	??_pinMode^0,f,c
  6237  0012FE  EF7C  F009         	goto	u2015
  6238  001302  5006               	movf	(??_pinMode+1)^0,w,c
  6239  001304  1296               	iorwf	150,f,c	;volatile
  6240  001306  EF96  F009         	goto	l117
  6241  00130A                     l2421:
  6242  00130A  C001  F005         	movff	pinMode@pin,??_pinMode
  6243  00130E  0EE0               	movlw	-32
  6244  001310  2605               	addwf	??_pinMode^0,f,c
  6245  001312  0E01               	movlw	1
  6246  001314  6E06               	movwf	(??_pinMode+1)^0,c
  6247  001316  2A05               	incf	??_pinMode^0,f,c
  6248  001318  EF90  F009         	goto	u2024
  6249  00131C                     u2025:
  6250  00131C  90D8               	bcf	status,0,c
  6251  00131E  3606               	rlcf	(??_pinMode+1)^0,f,c
  6252  001320                     u2024:
  6253  001320  2E05               	decfsz	??_pinMode^0,f,c
  6254  001322  EF8E  F009         	goto	u2025
  6255  001326  5006               	movf	(??_pinMode+1)^0,w,c
  6256  001328  0AFF               	xorlw	255
  6257  00132A  1696               	andwf	150,f,c	;volatile
  6258  00132C                     l117:
  6259  00132C  0012               	return		;funcret
  6260  00132E                     __end_of_pinMode:
  6261                           	callstack 0
  6262                           
  6263 ;; *************** function ___lwmod *****************
  6264 ;; Defined at:
  6265 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  dividend        2    7[COMRAM] unsigned int 
  6268 ;;  divisor         2    9[COMRAM] unsigned int 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  counter         1   11[COMRAM] unsigned char 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  2    7[COMRAM] unsigned int 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6280 ;;      Params:         4       0       0       0       0       0       0
  6281 ;;      Locals:         1       0       0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0
  6283 ;;      Totals:         5       0       0       0       0       0       0
  6284 ;;Total ram usage:        5 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_main
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text41
  6294  001EDC                     __ptext41:
  6295                           	callstack 0
  6296  001EDC                     ___lwmod:
  6297                           	callstack 30
  6298  001EDC  500A               	movf	___lwmod@divisor^0,w,c
  6299  001EDE  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  6300  001EE0  B4D8               	btfsc	status,2,c
  6301  001EE2  EF75  F00F         	goto	u2921
  6302  001EE6  EF77  F00F         	goto	u2920
  6303  001EEA                     u2921:
  6304  001EEA  EF9B  F00F         	goto	l1029
  6305  001EEE                     u2920:
  6306  001EEE  0E01               	movlw	1
  6307  001EF0  6E0C               	movwf	___lwmod@counter^0,c
  6308  001EF2  EF7F  F00F         	goto	l3137
  6309  001EF6                     l3135:
  6310  001EF6  90D8               	bcf	status,0,c
  6311  001EF8  360A               	rlcf	___lwmod@divisor^0,f,c
  6312  001EFA  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  6313  001EFC  2A0C               	incf	___lwmod@counter^0,f,c
  6314  001EFE                     l3137:
  6315  001EFE  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  6316  001F00  EF84  F00F         	goto	u2931
  6317  001F04  EF86  F00F         	goto	u2930
  6318  001F08                     u2931:
  6319  001F08  EF7B  F00F         	goto	l3135
  6320  001F0C                     u2930:
  6321  001F0C                     l3139:
  6322  001F0C  500A               	movf	___lwmod@divisor^0,w,c
  6323  001F0E  5C08               	subwf	___lwmod@dividend^0,w,c
  6324  001F10  500B               	movf	(___lwmod@divisor+1)^0,w,c
  6325  001F12  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  6326  001F14  A0D8               	btfss	status,0,c
  6327  001F16  EF8F  F00F         	goto	u2941
  6328  001F1A  EF91  F00F         	goto	u2940
  6329  001F1E                     u2941:
  6330  001F1E  EF95  F00F         	goto	l3143
  6331  001F22                     u2940:
  6332  001F22  500A               	movf	___lwmod@divisor^0,w,c
  6333  001F24  5E08               	subwf	___lwmod@dividend^0,f,c
  6334  001F26  500B               	movf	(___lwmod@divisor+1)^0,w,c
  6335  001F28  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  6336  001F2A                     l3143:
  6337  001F2A  90D8               	bcf	status,0,c
  6338  001F2C  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  6339  001F2E  320A               	rrcf	___lwmod@divisor^0,f,c
  6340  001F30  2E0C               	decfsz	___lwmod@counter^0,f,c
  6341  001F32  EF86  F00F         	goto	l3139
  6342  001F36                     l1029:
  6343  001F36  C008  F008         	movff	___lwmod@dividend,?___lwmod
  6344  001F3A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  6345  001F3E  0012               	return		;funcret
  6346  001F40                     __end_of___lwmod:
  6347                           	callstack 0
  6348                           
  6349 ;; *************** function ___awmod *****************
  6350 ;; Defined at:
  6351 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  dividend        2    8[COMRAM] int 
  6354 ;;  divisor         2   10[COMRAM] int 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  sign            1   13[COMRAM] unsigned char 
  6357 ;;  counter         1   12[COMRAM] unsigned char 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  2    8[COMRAM] int 
  6360 ;; Registers used:
  6361 ;;		wreg, status,2, status,0
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6367 ;;      Params:         4       0       0       0       0       0       0
  6368 ;;      Locals:         2       0       0       0       0       0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0
  6370 ;;      Totals:         6       0       0       0       0       0       0
  6371 ;;Total ram usage:        6 bytes
  6372 ;; Hardware stack levels used: 1
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_main
  6377 ;;		_lcdNumber
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text42
  6382  001CE8                     __ptext42:
  6383                           	callstack 0
  6384  001CE8                     ___awmod:
  6385                           	callstack 30
  6386  001CE8  0E00               	movlw	0
  6387  001CEA  6E0E               	movwf	___awmod@sign^0,c
  6388  001CEC  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  6389  001CEE  EF7D  F00E         	goto	u2860
  6390  001CF2  EF7B  F00E         	goto	u2861
  6391  001CF6                     u2861:
  6392  001CF6  EF83  F00E         	goto	l3103
  6393  001CFA                     u2860:
  6394  001CFA  6C09               	negf	___awmod@dividend^0,c
  6395  001CFC  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6396  001CFE  B0D8               	btfsc	status,0,c
  6397  001D00  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6398  001D02  0E01               	movlw	1
  6399  001D04  6E0E               	movwf	___awmod@sign^0,c
  6400  001D06                     l3103:
  6401  001D06  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  6402  001D08  EF8A  F00E         	goto	u2870
  6403  001D0C  EF88  F00E         	goto	u2871
  6404  001D10                     u2871:
  6405  001D10  EF8E  F00E         	goto	l3107
  6406  001D14                     u2870:
  6407  001D14  6C0B               	negf	___awmod@divisor^0,c
  6408  001D16  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  6409  001D18  B0D8               	btfsc	status,0,c
  6410  001D1A  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  6411  001D1C                     l3107:
  6412  001D1C  500B               	movf	___awmod@divisor^0,w,c
  6413  001D1E  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  6414  001D20  B4D8               	btfsc	status,2,c
  6415  001D22  EF95  F00E         	goto	u2881
  6416  001D26  EF97  F00E         	goto	u2880
  6417  001D2A                     u2881:
  6418  001D2A  EFBB  F00E         	goto	l3123
  6419  001D2E                     u2880:
  6420  001D2E  0E01               	movlw	1
  6421  001D30  6E0D               	movwf	___awmod@counter^0,c
  6422  001D32  EF9F  F00E         	goto	l3113
  6423  001D36                     l3111:
  6424  001D36  90D8               	bcf	status,0,c
  6425  001D38  360B               	rlcf	___awmod@divisor^0,f,c
  6426  001D3A  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  6427  001D3C  2A0D               	incf	___awmod@counter^0,f,c
  6428  001D3E                     l3113:
  6429  001D3E  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  6430  001D40  EFA4  F00E         	goto	u2891
  6431  001D44  EFA6  F00E         	goto	u2890
  6432  001D48                     u2891:
  6433  001D48  EF9B  F00E         	goto	l3111
  6434  001D4C                     u2890:
  6435  001D4C                     l3115:
  6436  001D4C  500B               	movf	___awmod@divisor^0,w,c
  6437  001D4E  5C09               	subwf	___awmod@dividend^0,w,c
  6438  001D50  500C               	movf	(___awmod@divisor+1)^0,w,c
  6439  001D52  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  6440  001D54  A0D8               	btfss	status,0,c
  6441  001D56  EFAF  F00E         	goto	u2901
  6442  001D5A  EFB1  F00E         	goto	u2900
  6443  001D5E                     u2901:
  6444  001D5E  EFB5  F00E         	goto	l3119
  6445  001D62                     u2900:
  6446  001D62  500B               	movf	___awmod@divisor^0,w,c
  6447  001D64  5E09               	subwf	___awmod@dividend^0,f,c
  6448  001D66  500C               	movf	(___awmod@divisor+1)^0,w,c
  6449  001D68  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  6450  001D6A                     l3119:
  6451  001D6A  90D8               	bcf	status,0,c
  6452  001D6C  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  6453  001D6E  320B               	rrcf	___awmod@divisor^0,f,c
  6454  001D70  2E0D               	decfsz	___awmod@counter^0,f,c
  6455  001D72  EFA6  F00E         	goto	l3115
  6456  001D76                     l3123:
  6457  001D76  500E               	movf	___awmod@sign^0,w,c
  6458  001D78  B4D8               	btfsc	status,2,c
  6459  001D7A  EFC1  F00E         	goto	u2911
  6460  001D7E  EFC3  F00E         	goto	u2910
  6461  001D82                     u2911:
  6462  001D82  EFC7  F00E         	goto	l3127
  6463  001D86                     u2910:
  6464  001D86  6C09               	negf	___awmod@dividend^0,c
  6465  001D88  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6466  001D8A  B0D8               	btfsc	status,0,c
  6467  001D8C  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6468  001D8E                     l3127:
  6469  001D8E  C009  F009         	movff	___awmod@dividend,?___awmod
  6470  001D92  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  6471  001D96  0012               	return		;funcret
  6472  001D98                     __end_of___awmod:
  6473                           	callstack 0
  6474                           
  6475 ;; *************** function ___awdiv *****************
  6476 ;; Defined at:
  6477 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  dividend        2    0[COMRAM] int 
  6480 ;;  divisor         2    2[COMRAM] int 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  quotient        2    6[COMRAM] int 
  6483 ;;  sign            1    5[COMRAM] unsigned char 
  6484 ;;  counter         1    4[COMRAM] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  2    0[COMRAM] int 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6494 ;;      Params:         4       0       0       0       0       0       0
  6495 ;;      Locals:         4       0       0       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0       0       0
  6497 ;;      Totals:         8       0       0       0       0       0       0
  6498 ;;Total ram usage:        8 bytes
  6499 ;; Hardware stack levels used: 1
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_main
  6504 ;;		_lcdNumber
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text43
  6509  001ABC                     __ptext43:
  6510                           	callstack 0
  6511  001ABC                     ___awdiv:
  6512                           	callstack 30
  6513  001ABC  0E00               	movlw	0
  6514  001ABE  6E06               	movwf	___awdiv@sign^0,c
  6515  001AC0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6516  001AC2  EF67  F00D         	goto	u2800
  6517  001AC6  EF65  F00D         	goto	u2801
  6518  001ACA                     u2801:
  6519  001ACA  EF6D  F00D         	goto	l3059
  6520  001ACE                     u2800:
  6521  001ACE  6C03               	negf	___awdiv@divisor^0,c
  6522  001AD0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6523  001AD2  B0D8               	btfsc	status,0,c
  6524  001AD4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6525  001AD6  0E01               	movlw	1
  6526  001AD8  6E06               	movwf	___awdiv@sign^0,c
  6527  001ADA                     l3059:
  6528  001ADA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6529  001ADC  EF74  F00D         	goto	u2810
  6530  001AE0  EF72  F00D         	goto	u2811
  6531  001AE4                     u2811:
  6532  001AE4  EF7A  F00D         	goto	l3065
  6533  001AE8                     u2810:
  6534  001AE8  6C01               	negf	___awdiv@dividend^0,c
  6535  001AEA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6536  001AEC  B0D8               	btfsc	status,0,c
  6537  001AEE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6538  001AF0  0E01               	movlw	1
  6539  001AF2  1A06               	xorwf	___awdiv@sign^0,f,c
  6540  001AF4                     l3065:
  6541  001AF4  0E00               	movlw	0
  6542  001AF6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6543  001AF8  0E00               	movlw	0
  6544  001AFA  6E07               	movwf	___awdiv@quotient^0,c
  6545  001AFC  5003               	movf	___awdiv@divisor^0,w,c
  6546  001AFE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6547  001B00  B4D8               	btfsc	status,2,c
  6548  001B02  EF85  F00D         	goto	u2821
  6549  001B06  EF87  F00D         	goto	u2820
  6550  001B0A                     u2821:
  6551  001B0A  EFAF  F00D         	goto	l3087
  6552  001B0E                     u2820:
  6553  001B0E  0E01               	movlw	1
  6554  001B10  6E05               	movwf	___awdiv@counter^0,c
  6555  001B12  EF8F  F00D         	goto	l3073
  6556  001B16                     l3071:
  6557  001B16  90D8               	bcf	status,0,c
  6558  001B18  3603               	rlcf	___awdiv@divisor^0,f,c
  6559  001B1A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6560  001B1C  2A05               	incf	___awdiv@counter^0,f,c
  6561  001B1E                     l3073:
  6562  001B1E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6563  001B20  EF94  F00D         	goto	u2831
  6564  001B24  EF96  F00D         	goto	u2830
  6565  001B28                     u2831:
  6566  001B28  EF8B  F00D         	goto	l3071
  6567  001B2C                     u2830:
  6568  001B2C                     l3075:
  6569  001B2C  90D8               	bcf	status,0,c
  6570  001B2E  3607               	rlcf	___awdiv@quotient^0,f,c
  6571  001B30  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6572  001B32  5003               	movf	___awdiv@divisor^0,w,c
  6573  001B34  5C01               	subwf	___awdiv@dividend^0,w,c
  6574  001B36  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6575  001B38  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6576  001B3A  A0D8               	btfss	status,0,c
  6577  001B3C  EFA2  F00D         	goto	u2841
  6578  001B40  EFA4  F00D         	goto	u2840
  6579  001B44                     u2841:
  6580  001B44  EFA9  F00D         	goto	l3083
  6581  001B48                     u2840:
  6582  001B48  5003               	movf	___awdiv@divisor^0,w,c
  6583  001B4A  5E01               	subwf	___awdiv@dividend^0,f,c
  6584  001B4C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6585  001B4E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6586  001B50  8007               	bsf	___awdiv@quotient^0,0,c
  6587  001B52                     l3083:
  6588  001B52  90D8               	bcf	status,0,c
  6589  001B54  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6590  001B56  3203               	rrcf	___awdiv@divisor^0,f,c
  6591  001B58  2E05               	decfsz	___awdiv@counter^0,f,c
  6592  001B5A  EF96  F00D         	goto	l3075
  6593  001B5E                     l3087:
  6594  001B5E  5006               	movf	___awdiv@sign^0,w,c
  6595  001B60  B4D8               	btfsc	status,2,c
  6596  001B62  EFB5  F00D         	goto	u2851
  6597  001B66  EFB7  F00D         	goto	u2850
  6598  001B6A                     u2851:
  6599  001B6A  EFBB  F00D         	goto	l3091
  6600  001B6E                     u2850:
  6601  001B6E  6C07               	negf	___awdiv@quotient^0,c
  6602  001B70  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6603  001B72  B0D8               	btfsc	status,0,c
  6604  001B74  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6605  001B76                     l3091:
  6606  001B76  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6607  001B7A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6608  001B7E  0012               	return		;funcret
  6609  001B80                     __end_of___awdiv:
  6610                           	callstack 0
  6611                           
  6612 ;; *************** function ___almod *****************
  6613 ;; Defined at:
  6614 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\almod.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  dividend        4   14[COMRAM] long 
  6617 ;;  divisor         4   18[COMRAM] long 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  sign            1   23[COMRAM] unsigned char 
  6620 ;;  counter         1   22[COMRAM] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  4   14[COMRAM] long 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6630 ;;      Params:         8       0       0       0       0       0       0
  6631 ;;      Locals:         2       0       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0
  6633 ;;      Totals:        10       0       0       0       0       0       0
  6634 ;;Total ram usage:       10 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text44
  6644  0019D0                     __ptext44:
  6645                           	callstack 0
  6646  0019D0                     ___almod:
  6647                           	callstack 30
  6648  0019D0  0E00               	movlw	0
  6649  0019D2  6E18               	movwf	___almod@sign^0,c
  6650  0019D4  BE12               	btfsc	(___almod@dividend+3)^0,7,c
  6651  0019D6  EFF1  F00C         	goto	u2740
  6652  0019DA  EFEF  F00C         	goto	u2741
  6653  0019DE                     u2741:
  6654  0019DE  EFFB  F00C         	goto	l3023
  6655  0019E2                     u2740:
  6656  0019E2  1E12               	comf	(___almod@dividend+3)^0,f,c
  6657  0019E4  1E11               	comf	(___almod@dividend+2)^0,f,c
  6658  0019E6  1E10               	comf	(___almod@dividend+1)^0,f,c
  6659  0019E8  6C0F               	negf	___almod@dividend^0,c
  6660  0019EA  0E00               	movlw	0
  6661  0019EC  2210               	addwfc	(___almod@dividend+1)^0,f,c
  6662  0019EE  2211               	addwfc	(___almod@dividend+2)^0,f,c
  6663  0019F0  2212               	addwfc	(___almod@dividend+3)^0,f,c
  6664  0019F2  0E01               	movlw	1
  6665  0019F4  6E18               	movwf	___almod@sign^0,c
  6666  0019F6                     l3023:
  6667  0019F6  BE16               	btfsc	(___almod@divisor+3)^0,7,c
  6668  0019F8  EF02  F00D         	goto	u2750
  6669  0019FC  EF00  F00D         	goto	u2751
  6670  001A00                     u2751:
  6671  001A00  EF0A  F00D         	goto	l3027
  6672  001A04                     u2750:
  6673  001A04  1E16               	comf	(___almod@divisor+3)^0,f,c
  6674  001A06  1E15               	comf	(___almod@divisor+2)^0,f,c
  6675  001A08  1E14               	comf	(___almod@divisor+1)^0,f,c
  6676  001A0A  6C13               	negf	___almod@divisor^0,c
  6677  001A0C  0E00               	movlw	0
  6678  001A0E  2214               	addwfc	(___almod@divisor+1)^0,f,c
  6679  001A10  2215               	addwfc	(___almod@divisor+2)^0,f,c
  6680  001A12  2216               	addwfc	(___almod@divisor+3)^0,f,c
  6681  001A14                     l3027:
  6682  001A14  5013               	movf	___almod@divisor^0,w,c
  6683  001A16  1014               	iorwf	(___almod@divisor+1)^0,w,c
  6684  001A18  1015               	iorwf	(___almod@divisor+2)^0,w,c
  6685  001A1A  1016               	iorwf	(___almod@divisor+3)^0,w,c
  6686  001A1C  B4D8               	btfsc	status,2,c
  6687  001A1E  EF13  F00D         	goto	u2761
  6688  001A22  EF15  F00D         	goto	u2760
  6689  001A26                     u2761:
  6690  001A26  EF45  F00D         	goto	l3043
  6691  001A2A                     u2760:
  6692  001A2A  0E01               	movlw	1
  6693  001A2C  6E17               	movwf	___almod@counter^0,c
  6694  001A2E  EF1F  F00D         	goto	l3033
  6695  001A32                     l3031:
  6696  001A32  90D8               	bcf	status,0,c
  6697  001A34  3613               	rlcf	___almod@divisor^0,f,c
  6698  001A36  3614               	rlcf	(___almod@divisor+1)^0,f,c
  6699  001A38  3615               	rlcf	(___almod@divisor+2)^0,f,c
  6700  001A3A  3616               	rlcf	(___almod@divisor+3)^0,f,c
  6701  001A3C  2A17               	incf	___almod@counter^0,f,c
  6702  001A3E                     l3033:
  6703  001A3E  AE16               	btfss	(___almod@divisor+3)^0,7,c
  6704  001A40  EF24  F00D         	goto	u2771
  6705  001A44  EF26  F00D         	goto	u2770
  6706  001A48                     u2771:
  6707  001A48  EF19  F00D         	goto	l3031
  6708  001A4C                     u2770:
  6709  001A4C                     l3035:
  6710  001A4C  5013               	movf	___almod@divisor^0,w,c
  6711  001A4E  5C0F               	subwf	___almod@dividend^0,w,c
  6712  001A50  5014               	movf	(___almod@divisor+1)^0,w,c
  6713  001A52  5810               	subwfb	(___almod@dividend+1)^0,w,c
  6714  001A54  5015               	movf	(___almod@divisor+2)^0,w,c
  6715  001A56  5811               	subwfb	(___almod@dividend+2)^0,w,c
  6716  001A58  5016               	movf	(___almod@divisor+3)^0,w,c
  6717  001A5A  5812               	subwfb	(___almod@dividend+3)^0,w,c
  6718  001A5C  A0D8               	btfss	status,0,c
  6719  001A5E  EF33  F00D         	goto	u2781
  6720  001A62  EF35  F00D         	goto	u2780
  6721  001A66                     u2781:
  6722  001A66  EF3D  F00D         	goto	l3039
  6723  001A6A                     u2780:
  6724  001A6A  5013               	movf	___almod@divisor^0,w,c
  6725  001A6C  5E0F               	subwf	___almod@dividend^0,f,c
  6726  001A6E  5014               	movf	(___almod@divisor+1)^0,w,c
  6727  001A70  5A10               	subwfb	(___almod@dividend+1)^0,f,c
  6728  001A72  5015               	movf	(___almod@divisor+2)^0,w,c
  6729  001A74  5A11               	subwfb	(___almod@dividend+2)^0,f,c
  6730  001A76  5016               	movf	(___almod@divisor+3)^0,w,c
  6731  001A78  5A12               	subwfb	(___almod@dividend+3)^0,f,c
  6732  001A7A                     l3039:
  6733  001A7A  90D8               	bcf	status,0,c
  6734  001A7C  3216               	rrcf	(___almod@divisor+3)^0,f,c
  6735  001A7E  3215               	rrcf	(___almod@divisor+2)^0,f,c
  6736  001A80  3214               	rrcf	(___almod@divisor+1)^0,f,c
  6737  001A82  3213               	rrcf	___almod@divisor^0,f,c
  6738  001A84  2E17               	decfsz	___almod@counter^0,f,c
  6739  001A86  EF26  F00D         	goto	l3035
  6740  001A8A                     l3043:
  6741  001A8A  5018               	movf	___almod@sign^0,w,c
  6742  001A8C  B4D8               	btfsc	status,2,c
  6743  001A8E  EF4B  F00D         	goto	u2791
  6744  001A92  EF4D  F00D         	goto	u2790
  6745  001A96                     u2791:
  6746  001A96  EF55  F00D         	goto	l3047
  6747  001A9A                     u2790:
  6748  001A9A  1E12               	comf	(___almod@dividend+3)^0,f,c
  6749  001A9C  1E11               	comf	(___almod@dividend+2)^0,f,c
  6750  001A9E  1E10               	comf	(___almod@dividend+1)^0,f,c
  6751  001AA0  6C0F               	negf	___almod@dividend^0,c
  6752  001AA2  0E00               	movlw	0
  6753  001AA4  2210               	addwfc	(___almod@dividend+1)^0,f,c
  6754  001AA6  2211               	addwfc	(___almod@dividend+2)^0,f,c
  6755  001AA8  2212               	addwfc	(___almod@dividend+3)^0,f,c
  6756  001AAA                     l3047:
  6757  001AAA  C00F  F00F         	movff	___almod@dividend,?___almod
  6758  001AAE  C010  F010         	movff	___almod@dividend+1,?___almod+1
  6759  001AB2  C011  F011         	movff	___almod@dividend+2,?___almod+2
  6760  001AB6  C012  F012         	movff	___almod@dividend+3,?___almod+3
  6761  001ABA  0012               	return		;funcret
  6762  001ABC                     __end_of___almod:
  6763                           	callstack 0
  6764                           
  6765                           	psect	rparam
  6766  0000                     
  6767                           	psect	idloc
  6768                           
  6769                           ;Config register IDLOC0 @ 0x200000
  6770                           ;	unspecified, using default values
  6771  200000                     	org	2097152
  6772  200000  FF                 	db	255
  6773                           
  6774                           ;Config register IDLOC1 @ 0x200001
  6775                           ;	unspecified, using default values
  6776  200001                     	org	2097153
  6777  200001  FF                 	db	255
  6778                           
  6779                           ;Config register IDLOC2 @ 0x200002
  6780                           ;	unspecified, using default values
  6781  200002                     	org	2097154
  6782  200002  FF                 	db	255
  6783                           
  6784                           ;Config register IDLOC3 @ 0x200003
  6785                           ;	unspecified, using default values
  6786  200003                     	org	2097155
  6787  200003  FF                 	db	255
  6788                           
  6789                           ;Config register IDLOC4 @ 0x200004
  6790                           ;	unspecified, using default values
  6791  200004                     	org	2097156
  6792  200004  FF                 	db	255
  6793                           
  6794                           ;Config register IDLOC5 @ 0x200005
  6795                           ;	unspecified, using default values
  6796  200005                     	org	2097157
  6797  200005  FF                 	db	255
  6798                           
  6799                           ;Config register IDLOC6 @ 0x200006
  6800                           ;	unspecified, using default values
  6801  200006                     	org	2097158
  6802  200006  FF                 	db	255
  6803                           
  6804                           ;Config register IDLOC7 @ 0x200007
  6805                           ;	unspecified, using default values
  6806  200007                     	org	2097159
  6807  200007  FF                 	db	255
  6808                           
  6809                           	psect	config
  6810                           
  6811                           ; Padding undefined space
  6812  300000                     	org	3145728
  6813  300000  FF                 	db	255
  6814                           
  6815                           ;Config register CONFIG1H @ 0x300001
  6816                           ;	Oscillator Selection bits
  6817                           ;	OSC = HS, HS oscillator
  6818                           ;	Fail-Safe Clock Monitor Enable bit
  6819                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6820                           ;	Internal/External Oscillator Switchover bit
  6821                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6822  300001                     	org	3145729
  6823  300001  02                 	db	2
  6824                           
  6825                           ;Config register CONFIG2L @ 0x300002
  6826                           ;	Power-up Timer Enable bit
  6827                           ;	PWRT = OFF, PWRT disabled
  6828                           ;	Brown-out Reset Enable bits
  6829                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6830                           ;	Brown Out Reset Voltage bits
  6831                           ;	BORV = 0x2E, user specified literal
  6832  300002                     	org	3145730
  6833  300002  71                 	db	369
  6834                           
  6835                           ;Config register CONFIG2H @ 0x300003
  6836                           ;	Watchdog Timer Enable bit
  6837                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6838                           ;	Watchdog Timer Postscale Select bits
  6839                           ;	WDTPS = 1, 1:1
  6840  300003                     	org	3145731
  6841  300003  00                 	db	0
  6842                           
  6843                           ; Padding undefined space
  6844  300004                     	org	3145732
  6845  300004  FF                 	db	255
  6846                           
  6847                           ;Config register CONFIG3H @ 0x300005
  6848                           ;	CCP2 MUX bit
  6849                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6850                           ;	PORTB A/D Enable bit
  6851                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6852                           ;	Low-Power Timer1 Oscillator Enable bit
  6853                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6854                           ;	MCLR Pin Enable bit
  6855                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6856  300005                     	org	3145733
  6857  300005  83                 	db	131
  6858                           
  6859                           ;Config register CONFIG4L @ 0x300006
  6860                           ;	Stack Full/Underflow Reset Enable bit
  6861                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6862                           ;	Single-Supply ICSP Enable bit
  6863                           ;	LVP = OFF, Single-Supply ICSP disabled
  6864                           ;	Extended Instruction Set Enable bit
  6865                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6866                           ;	Background Debugger Enable bit
  6867                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6868  300006                     	org	3145734
  6869  300006  80                 	db	128
  6870                           
  6871                           ; Padding undefined space
  6872  300007                     	org	3145735
  6873  300007  FF                 	db	255
  6874                           
  6875                           ;Config register CONFIG5L @ 0x300008
  6876                           ;	Code Protection bit
  6877                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6878                           ;	Code Protection bit
  6879                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6880                           ;	Code Protection bit
  6881                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6882                           ;	Code Protection bit
  6883                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6884  300008                     	org	3145736
  6885  300008  0F                 	db	15
  6886                           
  6887                           ;Config register CONFIG5H @ 0x300009
  6888                           ;	Boot Block Code Protection bit
  6889                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6890                           ;	Data EEPROM Code Protection bit
  6891                           ;	CPD = OFF, Data EEPROM not code-protected
  6892  300009                     	org	3145737
  6893  300009  C0                 	db	192
  6894                           
  6895                           ;Config register CONFIG6L @ 0x30000A
  6896                           ;	Write Protection bit
  6897                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6898                           ;	Write Protection bit
  6899                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6900                           ;	Write Protection bit
  6901                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6902                           ;	Write Protection bit
  6903                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6904  30000A                     	org	3145738
  6905  30000A  0F                 	db	15
  6906                           
  6907                           ;Config register CONFIG6H @ 0x30000B
  6908                           ;	Configuration Register Write Protection bit
  6909                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6910                           ;	Boot Block Write Protection bit
  6911                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6912                           ;	Data EEPROM Write Protection bit
  6913                           ;	WRTD = OFF, Data EEPROM not write-protected
  6914  30000B                     	org	3145739
  6915  30000B  E0                 	db	224
  6916                           
  6917                           ;Config register CONFIG7L @ 0x30000C
  6918                           ;	Table Read Protection bit
  6919                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6920                           ;	Table Read Protection bit
  6921                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6922                           ;	Table Read Protection bit
  6923                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6924                           ;	Table Read Protection bit
  6925                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6926  30000C                     	org	3145740
  6927  30000C  0F                 	db	15
  6928                           
  6929                           ;Config register CONFIG7H @ 0x30000D
  6930                           ;	Boot Block Table Read Protection bit
  6931                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6932  30000D                     	org	3145741
  6933  30000D  40                 	db	64
  6934                           tosu	equ	0xFFF
  6935                           tosh	equ	0xFFE
  6936                           tosl	equ	0xFFD
  6937                           stkptr	equ	0xFFC
  6938                           pclatu	equ	0xFFB
  6939                           pclath	equ	0xFFA
  6940                           pcl	equ	0xFF9
  6941                           tblptru	equ	0xFF8
  6942                           tblptrh	equ	0xFF7
  6943                           tblptrl	equ	0xFF6
  6944                           tablat	equ	0xFF5
  6945                           prodh	equ	0xFF4
  6946                           prodl	equ	0xFF3
  6947                           indf0	equ	0xFEF
  6948                           postinc0	equ	0xFEE
  6949                           postdec0	equ	0xFED
  6950                           preinc0	equ	0xFEC
  6951                           plusw0	equ	0xFEB
  6952                           fsr0h	equ	0xFEA
  6953                           fsr0l	equ	0xFE9
  6954                           wreg	equ	0xFE8
  6955                           indf1	equ	0xFE7
  6956                           postinc1	equ	0xFE6
  6957                           postdec1	equ	0xFE5
  6958                           preinc1	equ	0xFE4
  6959                           plusw1	equ	0xFE3
  6960                           fsr1h	equ	0xFE2
  6961                           fsr1l	equ	0xFE1
  6962                           bsr	equ	0xFE0
  6963                           indf2	equ	0xFDF
  6964                           postinc2	equ	0xFDE
  6965                           postdec2	equ	0xFDD
  6966                           preinc2	equ	0xFDC
  6967                           plusw2	equ	0xFDB
  6968                           fsr2h	equ	0xFDA
  6969                           fsr2l	equ	0xFD9
  6970                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    27
    Data        48
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     94     123
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 10
		 -> STR_25(CODE[4]), STR_24(CODE[3]), STR_23(CODE[4]), STR_22(CODE[2]), 
		 -> STR_21(CODE[5]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[10]), 
		 -> STR_9(CODE[2]), STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_desenhoInit
    _velocidade->_lcdString
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _ssdDigit->___almod
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _modo->_lcdString
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _desenhoOn->_lcdString
    _desenhoOff->_lcdString
    _desenhoInit->_lcdString
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdPosition->_lcdCommand
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _adcInit->_pinMode
    ___lwmod->___lwdiv
    ___awmod->___awdiv
    ___almod->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0  442459
                                             70 COMRAM    24    24      0
                            ___aldiv
                            ___almod
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                            _adcInit
                            _adcRead
                          _atraso_ms
                        _desenhoInit
                         _desenhoOff
                          _desenhoOn
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                            _lcdInit
                        _lcdPosition
                               _modo
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                          _timerInit
                         _timerReset
                          _timerWait
                         _velocidade
 ---------------------------------------------------------------------------------
 (1) _velocidade                                           2     0      2   63989
                                             20 COMRAM     2     0      2
                            _lcdChar
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   15297
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                             24 COMRAM     2     1      1
                            ___aldiv (ARG)
                            ___almod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmSet                                               5     5      0    1020
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0    1006
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2    1006
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     908
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _modo                                                 4     2      2   63835
                                             20 COMRAM     4     2      2
                            _lcdChar
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   47276
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   19661
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   12297
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _desenhoOn                                            0     0      0   43782
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _desenhoOff                                           0     0      0   43782
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _desenhoInit                                         50    50      0   84214
                                             20 COMRAM    50    50      0
                            _lcdChar
                         _lcdCommand
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   21945
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   19955
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          4     0      4   21837
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0   19925
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   19553
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _soWrite                                              3     1      2   11661
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseEnClock                                         0     0      0    3636
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseClockData                                       0     0      0    3636
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    4016
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         6     2      4    3636
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2    1126
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3480
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     463
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8     752
                                             14 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___almod
     ___aldiv (ARG)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _adcInit
     _pinMode
   _adcRead
   _atraso_ms
   _desenhoInit
     _lcdChar
       _delayMicro
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _lcdCommand
       _delayMili
       _pushByte
     _lcdPosition
       _lcdCommand
     _lcdString
       _lcdChar
   _desenhoOff
     _lcdPosition
     _lcdString
   _desenhoOn
     _lcdPosition
     _lcdString
   _kpDebounce
     _digitalRead
     _soWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdPosition
   _modo
     _lcdChar
     _lcdPosition
     _lcdString
   _pwmInit
     _pwmFrequency
       ___aldiv
   _pwmSet
     ___lwdiv
     ___wmul
   _ssdDigit
     ___aldiv (ARG)
     ___almod (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite
   _timerInit
   _timerReset
   _timerWait
   _velocidade
     _lcdChar
     _lcdPosition
     _lcdString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5E      7B       1       96.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9B      15        0.0%
DATA                 0      0      9B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 23:12:30 2021

         _pulseEnablePin 21DA             lcdString@msg 000F                       l41 242C  
                     l35 0E90                       l38 2322                       l83 10DE  
                     l92 1788                       l87 178C                       l88 1788  
           ___awdiv@sign 0006                       _v0 0079                       _v1 0078  
                     _v2 0077                       _v3 0076      ___wmul@multiplicand 0003  
                    l202 20F2                      l211 1CE6                      l117 132C  
                    l221 234C                      l134 24CC                      l224 2376  
                    l170 24D6                      l154 18AA                      l218 2258  
                    l156 18C2                      l229 2190                      l182 23E8  
                    l159 22C4                      l176 22F4                      l256 1FF0  
                    l352 24B4                      l185 1F98                      l193 2292  
                    l361 24D4                      l506 1C32                      l522 23C2  
                    l266 1622                      l179 221A                      l355 24C2  
                    l620 1ABA                      l380 2118                      l188 2488  
                    l196 246A                      l525 24A2                      l269 209C  
                    l453 0994                      l382 2126                      l358 240A  
                    l462 0A60                      l383 2142                      l607 19CE  
                    l519 1E76                      l376 21D8                      l528 239C  
                    l464 0AAE                      l456 09EC                      l393 1EDA  
                    l490 14B6                      l459 0A2A                      l468 0AE0  
                    l772 1D96                      l759 1B7E                      _PR2 000FCB  
           ___awmod@sign 000E                      wreg 000FE8                     l1026 1E0A  
                   l1019 1E02                     l1036 1F3E                     l1029 1F36  
                   l3001 1BD0                     l3003 1BE0                     l3021 19F2  
                   l3101 1D02                     l2301 0E92                     l3005 1BE6  
                   l3031 1A32                     l3023 19F6                     l3015 19D0  
                   l3111 1D36                     l3103 1D06                     l2311 0F1E  
                   l2303 0EAE                     l3041 1A84                     l3033 1A3E  
                   l3025 1A04                     l3017 19D4                     l3121 1D70  
                   l3113 1D3E                     l3105 1D14                     l2401 11E4  
                   l2321 0FB0                     l2313 0F38                     l2305 0EC0  
                   l3009 1BF6                     l3201 0646                     l3035 1A4C  
                   l3043 1A8A                     l3027 1A14                     l3019 19E2  
                   l3051 1ABC                     l3115 1D4C                     l3123 1D76  
                   l3107 1D1C                     l3131 1EDC                     l2411 126E  
                   l2403 11F6                     l2331 1048                     l2323 0FD0  
                   l2315 0F58                     l2307 0EE0                     l3211 067E  
                   l3203 066E                     l3045 1A9A                     l3037 1A6A  
                   l3029 1A2A                     l3061 1AE8                     l3053 1AC0  
                   l3125 1D86                     l3117 1D62                     l3109 1D2E  
                   l3141 1F22                     l3133 1EEE                     l2421 130A  
                   l2413 1292                     l2405 121A                     l2333 106A  
                   l2325 0FF2                     l2317 0F7A                     l2309 0F02  
                   l2341 2324                     l2501 16CC                     l3301 0A12  
                   l3221 06AC                     l3213 0682                     l3205 0672  
                   l3047 1AAA                     l3039 1A7A                     l3071 1B16  
                   l3063 1AF0                     l3055 1ACE                     l3127 1D8E  
                   l3119 1D6A                     l3143 1F2A                     l3135 1EF6  
                   l2415 12B8                     l2407 1240                     l2335 1086  
                   l2327 100E                     l2319 0F96                     l2343 234E  
                   l2431 18EA                     l2423 18C4                     l3311 0A50  
                   l3303 0A24                     l3231 06EA                     l3223 06C4  
                   l3215 0686                     l3207 0676                     l3081 1B50  
                   l3073 1B1E                     l3065 1AF4                     l3057 1AD6  
                   l3145 1F30                     l3137 1EFE                     l2417 12D4  
                   l2409 125C                     l2337 10A0                     l2329 1028  
                   l2361 218C                     l2353 215C                     l2345 2144  
                   l2601 0D16                     l2521 221C                     l2441 1932  
                   l2433 18F8                     l2425 18C8                     l3321 0A86  
                   l3313 0A54                     l3305 0A38                     l3241 0714  
                   l3233 06F0                     l3225 06D4                     l3217 068A  
                   l3209 067A                     l3091 1B76                     l3083 1B52  
                   l3075 1B2C                     l3067 1AFC                     l3059 1ADA  
                   l3139 1F0C                     l2419 12E6                     l2371 22D2  
                   l2339 10C0                     l2363 21DA                     l2355 2174  
                   l2347 2158                     l2611 0D34                     l2515 1740  
                   l2507 16F8                     l2523 23C6                     l2451 197C  
                   l2443 193A                     l2435 1908                     l2427 18D6  
                   l3331 0ACE                     l3323 0A9A                     l3315 0A6E  
                   l3307 0A3E                     l3251 0742                     l3243 0720  
                   l3235 06FC                     l3227 06D8                     l3219 069A  
                   l3085 1B58                     l3077 1B32                     l3069 1B0E  
                   l2373 22D6                     l2365 21EE                     l2357 217A  
                   l2381 246E                     l2621 0D5E                     l2613 0D50  
                   l2517 175C                     l2509 1714                     l2701 17BE  
                   l2461 19AE                     l2453 198C                     l2445 1946  
                   l2437 190C                     l2429 18E6                     l2541 2394  
                   l3341 0B06                     l3333 0AD4                     l3325 0AA6  
                   l3317 0A74                     l3309 0A4A                     l3261 0922  
                   l3245 0726                     l3237 0702                     l3229 06DE  
                   l3253 074E                     l3079 1B48                     l3087 1B5E  
                   l3095 1CE8                     l2391 1150                     l2383 10E0  
                   l2367 21FA                     l2359 217C                     l2375 1F42  
                   l2471 2276                     l2623 0D70                     l2615 0D56  
                   l2607 0D1E                     l2703 180A                     l2463 19BE  
                   l2455 198E                     l2447 1954                     l2439 191C  
                   l2551 1DBA                     l3351 0B48                     l3343 0B18  
                   l3335 0AEE                     l3327 0ABC                     l3319 0A80  
                   l3271 096A                     l3263 092A                     l3255 0756  
                   l3247 0732                     l3239 070E                     l3089 1B6E  
                   l3097 1CEC                     l2393 116C                     l2385 10FC  
                   l2369 22C6                     l2473 2288                     l2377 2450  
                   l2481 20CA                     l2641 0DD0                     l2625 0D74  
                   l2609 0D30                     l2721 18BA                     l2705 1830  
                   l2713 1880                     l2457 1998                     l2449 195E  
                   l2537 239E                     l2561 1DF4                     l2553 1DC2  
                   l2545 1D98                     l3353 0B50                     l3337 0AF4  
                   l3329 0AC2                     l3281 09A8                     l3273 0976  
                   l3265 094A                     l3345 0B20                     l3257 08BE  
                   l3249 073C                     l3361 0B64                     l3099 1CFA  
                   l2395 117E                     l2387 110E                     l2467 225A  
                   l2379 245E                     l2475 209E                     l2651 0DF0  
                   l2643 0DD6                     l2635 0D9E                     l2627 0D90  
                   l2571 0BDE                     l2491 1668                     l2483 1624  
                   l2715 1898                     l2707 184E                     l2723 2294  
                   l2731 1CA0                     l2459 199E                     l2563 1DF6  
                   l2555 1DD0                     l2547 1DA0                     l2539 2378  
                   l3355 0B5C                     l3347 0B28                     l3339 0B00  
                   l3291 09D8                     l3283 09B4                     l3275 097C  
                   l3267 0956                     l3259 08C6                     l3363 0BAE  
                   l2397 11A2                     l2389 112E                     l2901 2132  
                   l2469 226C                     l2477 20AA                     l2653 0DF4  
                   l2637 0DB0                     l2629 0D96                     l2581 0C5E  
                   l2573 0BFE                     l2493 1684                     l2485 1640  
                   l2717 189E                     l2709 1878                     l2725 22C0  
                   l2741 1CE0                     l2733 1CBA                     l2565 1DFC  
                   l2557 1DD6                     l2549 1DB2                     l3365 0BB2  
                   l3349 0B3C                     l3293 09E0                     l3285 09BA  
                   l3277 098E                     l3269 0964                     l2399 11C8  
                   l2903 213A                     l2911 1E88                     l2479 20C6  
                   l2671 0E56                     l2663 0E1E                     l2655 0E10  
                   l2639 0DB4                     l2591 0CC8                     l2583 0C72  
                   l2575 0C12                     l2567 0BBE                     l2719 18A2  
                   l2735 1CC8                     l2727 1C34                     l2559 1DEC  
                   l2751 1FC4                     l2743 1F9C                     l3383 0B78  
                   l3295 09FA                     l3287 09BE                     l3279 09A2  
                   l2921 1EB4                     l2681 0E74                     l2665 0E30  
                   l2657 0E16                     l2649 0DDE                     l2593 0CDA  
                   l2585 0C98                     l2577 0C32                     l2569 0BD2  
                   l2737 1CD4                     l2729 1C94                     l2753 1FD6  
                   l2745 1FAC                     l3385 15FC                     l2761 1518  
                   l3297 0A00                     l3289 09C6                     l2915 1E9C  
                   l2931 1EC4                     l2907 1E78                     l2667 0E34  
                   l2595 0CEC                     l2587 0CA4                     l2579 0C3E  
                   l2691 2420                     l2683 22F6                     l2499 16B0  
                   l2739 1CDA                     l3387 1C0C                     l2755 1FDA  
                   l2747 1FB0                     l2771 1578                     l2763 1530  
                   l3299 0A0C                     l2925 1EBA                     l2917 1EA0  
                   l2909 1E84                     l2677 0E5E                     l2669 0E50  
                   l2597 0CFE                     l2589 0CB6                     l2685 230A  
                   l2693 24C4                     l2941 2496                     l2933 248A  
                   l2757 1FEC                     l2749 1FC0                     l2781 15CC  
                   l2773 1580                     l2765 1544                     l2679 0E70  
                   l2599 0D10                     l2687 2316                     l2695 178E  
                   l2935 248C                     l2951 1E68                     l2943 1E0E  
                   l2783 15E0                     l2775 1598                     l2767 154C  
                   l2759 14B8                     l2871 23F4                     l2929 1EC0  
                   l2689 240C                     l2697 179E                     l2937 2490  
                   l2945 1E2C                     l2777 15AC                     l2769 1564  
                   l2881 24CE                     l2873 23F8                     l2961 138E  
                   l2953 132E                     l2891 21D4                     l2939 2492  
                   l2947 1E48                     l2795 2048                     l2779 15B4  
                   l2883 24D2                     l2875 2400                     l2867 24B4  
                   l2971 13F6                     l2963 13A6                     l2955 1342  
                   l2885 2192                     l2893 20F4                     l2949 1E50  
                   l2789 15E8                     l2877 2404                     l2869 23EA  
                   l2981 144A                     l2973 1402                     l2965 13B8  
                   l2957 135C                     l2887 21CE                     l2895 210E  
                   l2879 2408                     l2991 1486                     l2983 1450  
                   l2975 140E                     l2967 13C4                     l2959 1374  
                   l2889 21D0                     l2897 2116                     l2993 1B80  
                   l2985 145C                     l2969 13DE                     l2977 141A  
                   l2899 212C                     l2995 1B98                     l2987 1468  
                   l2979 1434                     l2997 1BA8                     l2989 1474  
                   l2999 1BC4                     STR_1 0642                     STR_2 0642  
                   STR_3 0642                     STR_4 0642                     STR_5 061C  
                   STR_6 062F                     STR_7 0640                     STR_8 0626  
                   STR_9 063C                     u2000 12E6                     u2001 12E2  
                   u2100 2288                     u2101 2284                     u2014 12FC  
                   u2110 20F2                     u2030 18D6                     u2015 12F8  
                   u2111 20EE                     u2031 18D2                     u2024 1320  
                   u2200 175C                     u2120 1640                     u2040 18F8  
                   u2025 131C                     u2201 1758                     u2121 163C  
                   u2041 18F4                     u2050 1932                     u2051 192E  
                   u2140 1684                     u2060 1954                     u3100 09FA  
                   u2301 0CC0                     u2141 1680                     u2061 1950  
                   u3101 09F6                     u2214 1772                     u2134 1652  
                   u2070 197C                     u3110 0A24                     u3030 06AC  
                   u2311 0CD2                     u2215 176E                     u2135 164E  
                   u2071 1978                     u3111 0A20                     u3031 06A8  
                   u2400 0E90                     u2160 16CC                     u2080 19AE  
                   u3120 0A38                     u3040 06C4                     u2401 0E8C  
                   u2321 0CE4                     u2161 16C8                     u2081 19AA  
                   u3121 0A34                     u3041 06C0                     u1610 0EAE  
                   u2090 226C                     u2154 169A                     u2410 17BA  
                   u3130 0A6E                     u3050 094A                     u1611 0EAA  
                   u2091 2268                     u2331 0CF6                     u2155 1696  
                   u2411 17B6                     u3131 0A6A                     u3051 0946  
                   u1700 0FB0                     u1620 0EC0                     u2180 1714  
                   u2260 1DB2                     u2500 1FC0                     u3140 0A9A  
                   u3060 0964                     u1701 0FAC                     u1621 0EBC  
                   u2341 0D08                     u2181 1710                     u2261 1DAE  
                   u2501 1FBC                     u3141 0A96                     u3061 0960  
                   u2350 0D50                     u2174 16E2                     u2430 180A  
                   u2270 1DD0                     u2510 1FD6                     u3150 0ABC  
                   u3070 098E                     u2351 0D4C                     u2175 16DE  
                   u2431 1806                     u2271 1DCC                     u2511 1FD2  
                   u3151 0AB8                     u3071 098A                     u2360 0D90  
                   u2424 17DA                     u2280 1DEC                     u2520 1FEC  
                   u2600 24C2                     u3160 0AEE                     u3080 09A2  
                   u2361 0D8C                     u2425 17D4                     u2281 1DE8  
                   u2521 1FE8                     u2601 24BE                     u3161 0AEA  
                   u3081 099E                     u2610 210E                     u1730 100E  
                   u1714 0FC2                     u1650 0F1E                     u1634 0ED2  
                   u1810 218C                     u2370 0DD0                     u2194 172A  
                   u2450 184E                     u3170 0B18                     u3090 09D8  
                   u2611 210A                     u1731 100A                     u1715 0FBE  
                   u1651 0F1A                     u1635 0ECE                     u1811 2188  
                   u2371 0DCC                     u2291 0CAE                     u2195 1726  
                   u2451 184A                     u3171 0B14                     u3091 09D4  
                   u2620 2126                     u1820 22F4                     u1804 10D2  
                   u1740 1028                     u1724 0FE2                     u1660 0F38  
                   u1644 0EF2                     u2380 0E10                     u2444 1822  
                   u2700 13F6                     u2621 2122                     u1821 22F0  
                   u1805 10CE                     u1741 1024                     u1725 0FDE  
                   u1661 0F34                     u1645 0EEE                     u2381 0E0C  
                   u2445 181C                     u2701 13F2                     u1910 11E4  
                   u1830 10FC                     u2630 1E98                     u2390 0E50  
                   u2470 1898                     u2710 1434                     u1911 11E0  
                   u1831 10F8                     u2631 1E94                     u2391 0E4C  
                   u2471 1894                     u2711 1430                     u2800 1ACE  
                   u1920 11F6                     u1904 11B8                     u1840 110E  
                   u2640 1EB0                     u2480 18BA                     u2464 186A  
                   u2720 144A                     u2801 1ACA                     u1921 11F2  
                   u1905 11B4                     u1841 110A                     u2641 1EAC  
                   u2481 18B6                     u2465 1864                     u2721 1446  
                   u2810 1AE8                     u2650 1EDA                     u1770 1086  
                   u1754 103A                     u1690 0F96                     u1674 0F4A  
                   u2490 1FAC                     u2730 1486                     u2811 1AE4  
                   u2651 1ED6                     u1771 1082                     u1755 1036  
                   u1691 0F92                     u1675 0F46                     u2491 1FA8  
                   u2731 1482                     u2740 19E2                     u2820 1B0E  
                   u2900 1D62                     u1780 10A0                     u1764 105A  
                   u1684 0F6A                     u2660 135C                     u2741 19DE  
                   u2821 1B0A                     u2901 1D5E                     u1781 109C  
                   u1765 1056                     u1685 0F66                     u2661 1358  
                   u2750 1A04                     u2830 1B2C                     u2910 1D86  
                   u1950 125C                     u1934 120C                     u1870 116C  
                   u1854 1120                     u2670 138E                     u2751 1A00  
                   u2831 1B28                     u2911 1D82                     u1951 1258  
                   u1935 1208                     u1871 1168                     u1855 111C  
                   u2671 138A                     u2760 1A2A                     u2840 1B48  
                   u2920 1EEE                     u1960 126E                     u1944 1230  
                   u1880 117E                     u1864 1140                     u2680 13A6  
                   u2761 1A26                     u2841 1B44                     u2921 1EEA  
                   u1961 126A                     u1945 122C                     u1881 117A  
                   u1865 113C                     u2681 13A2                     u2770 1A4C  
                   u2850 1B6E                     u2930 1F0C                     u1794 10B2  
                   u2690 13DE                     u2771 1A48                     u2851 1B6A  
                   u2931 1F08                     u1795 10AE                     u2691 13DA  
                   u2780 1A6A                     u2860 1CFA                     u2940 1F22  
                   u2781 1A66                     u2861 1CF6                     u2941 1F1E  
                   u2790 1A9A                     u2870 1D14                     u1990 12D4  
                   u1974 1284                     u1894 1194                     u2791 1A96  
                   u2871 1D10                     u1991 12D0                     u1975 1280  
                   u1895 1190                     u2880 1D2E                     u1984 12A8  
                   u2881 1D2A                     u1985 12A4                     u2890 1D4C  
                   u2891 1D48            velocidade@vel 0015                     _main 0646  
                   _keys 0073                     _modo 1B80         ??_PulseClockData 0007  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 221C  
         pwmSet@porcento 000A          __end_of___aldiv 19D0          __end_of___almod 1ABC  
                  ?_main 0001          __end_of_adcInit 21DA          __end_of_adcRead 2144  
        __end_of___awdiv 1B80                    ?_modo 0015                    STR_10 061C  
                  STR_11 063C                    STR_20 063C                    STR_12 063C  
                  STR_13 063C                    STR_21 0635                    STR_14 063C  
                  STR_22 063E                    STR_15 063C                    STR_23 063A  
                  STR_16 063C                    STR_24 063B                    STR_17 063C  
                  STR_25 063A                    STR_18 063C                    STR_19 063C  
        __end_of___awmod 1D98             main@controle 0055                    _T0CON 000FD5  
        ___awdiv@divisor 0003                    _T2CON 000FCA          __end_of___lwdiv 1E0C  
        __end_of___lwmod 1F40          ___awdiv@counter 0005                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061C                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdChar 246C          __end_of_lcdInit 1CE8          __end_of_pinMode 132E  
                  _valor 0601                    main@d 0053                    main@m 0057  
                  main@v 005B                    modo@m 0015          desenhoInit@v100 0015  
        __end_of_soWrite 2192                    tablat 000FF5          __end_of_ssdInit 209E  
        __end_of_pwmInit 24A4                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8          desenhoInit@vent 003D             pushNibble@rs 000A  
   __end_of_digitalWrite 10E0          __initialization 1FF2          ?_pulseEnablePin 0001  
           __end_of_main 0BBE             __end_of_modo 1C34                   ??_main 0047  
                 ??_modo 0017            __activetblptr 000002     __size_of_digitalRead 016A  
   __size_of_desenhoInit 02D4                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000FBB         ___awdiv@dividend 0001             atraso_ms@num 0001  
                 _INTCON 000FF2     __size_of_lcdPosition 003A                ??___aldiv 0009  
              ??___almod 0017                   ___wmul 2378                ??_adcInit 0007  
              ??_adcRead 0003                ??___awdiv 0005                ??___awmod 000D  
              ??___lwdiv 0005                ??___lwmod 000C                   _kpInit 2294  
                 _kpRead 24C4                   clear_0 2038                   _soInit 221C  
       ___awdiv@quotient 0007          ___awmod@divisor 000B                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F                   _pwmSet 1E0C  
        ___awmod@counter 000D         __end_of_ssdDigit 1FF2             __pdataCOMRAM 005F  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
              ??_ssdInit 0007                ??_pwmInit 0011         __end_of_pushByte 1F9A  
             __accesstop 0080  __end_of__initialization 203E            ___rparam_used 000001  
          pushByte@value 000D              pinMode@type 0003           __pcstackCOMRAM 0001  
           __pidataBANK0 242E            __end_of_valor 0612       __size_of_delayMili 0030  
     __size_of_desenhoOn 002E       __size_of_lcdString 0056       __size_of_atraso_ms 0064  
  __size_of_digitalWrite 024E               _delayMicro 24D6               _lcdCommand 246C  
                ?___wmul 0001                  ?_kpInit 0001                  ?_kpRead 0001  
             _desenhoOff 240C                  _CCP2CON 000FBA                  ?_soInit 0001  
             _kpDebounce 178E                  ?_pwmSet 0001       __size_of_timerInit 0008  
     __size_of_timerWait 0010       __size_of_ssdUpdate 016C             _digitalWrite 0E92  
      __end_of_delayMili 22F6         ??_pulseEnablePin 0007        __end_of_desenhoOn 2324  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 0019  
      __end_of_lcdString 20F4          kpDebounce@tempo 007B                  ___aldiv 18C4  
                ___almod 19D0                  _adcInit 2192                  _adcRead 20F4  
                ___awdiv 1ABC                  ___awmod 1CE8                ?_pushByte 000A  
        __size_of___wmul 0026                  ___lwdiv 1D98                  ___lwmod 1EDC  
      __end_of_atraso_ms 1EDC             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0612              ssdDigit@val 001A  
            ssdDigit@pos 0019                  __pcinit 1FF2                  _lcdChar 244E  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 1C34  
                __ptext0 0646                  __ptext1 132E                  __ptext2 24B4  
                __ptext3 23EA                  __ptext4 24CE                  __ptext5 14B8  
                __ptext6 2048                  __ptext7 1F9A                  __ptext8 1E0C  
                __ptext9 2378          __size_of_pwmSet 006C                  _display 007A  
                _pinMode 10E0         ___awmod@dividend 0009         ___aldiv@dividend 0001  
             delayMili@a 0001               delayMili@i 0004                  _soWrite 2144  
                _ssdInit 2048                  _pwmInit 248A                  _started 0075  
                main@vel 0051     end_of_initialization 203E            ?_PulseEnClock 0001  
          __Lmediumconst 0000           digitalRead@pin 0001            ?_pwmFrequency 000F  
            ?_delayMicro 0001        __end_of_timerInit 24D6        __end_of_timerWait 24C4  
      __end_of_ssdUpdate 1624               ??_ssdDigit 001A         ___aldiv@quotient 000B  
                postdec1 000FE5              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C              ?_desenhoOff 0001  __size_of_PulseClockData 002A  
          ??_digitalRead 0003               _timerReset 23EA              ?_kpDebounce 0001  
          ??_desenhoInit 0015               _velocidade 132E               _pushNibble 23C4  
             lcdString@i 0013            ??_lcdPosition 0013           ??_PulseEnClock 0007  
         ??_pwmFrequency 0011               atraso_ms@i 0003               atraso_ms@j 0005  
             atraso_ms@k 0006           adcRead@ADvalor 0003           __end_of___wmul 239E  
          __pidataCOMRAM 24A4           __end_of_kpInit 22C6           __end_of_kpRead 24CE  
         desenhoInit@F21 005F           desenhoInit@F23 0098           desenhoInit@F25 0090  
         desenhoInit@F27 0088           desenhoInit@F19 0067           desenhoInit@F29 0080  
         __end_of_soInit 225A           desenhoInit@v25 002D           desenhoInit@v50 0025  
         desenhoInit@v75 001D           __end_of_pwmSet 1E78      __size_of_delayMicro 0002  
    start_initialization 1FF2      __end_of_digitalRead 178E      __end_of_desenhoInit 0E92  
    __size_of_lcdCommand 001E      __size_of_desenhoOff 0022      __size_of_kpDebounce 0136  
    __end_of_lcdPosition 2294           adcRead@channel 0001        kpDebounce@oldRead 006F  
      kpDebounce@newRead 0071                 ??___wmul 0005                 ??_kpInit 0007  
               ??_kpRead 0003              __pdataBANK0 0080              ?_timerReset 0001  
               ??_soInit 0007                 ??_pwmSet 0008              ?_velocidade 0015  
            __pbssCOMRAM 006F              ?_pushNibble 000A               pinMode@pin 0001  
              _delayMili 22C6                _main$1284 0049                _main$1285 004D  
       ___lwdiv@dividend 0001                 ?___aldiv 0001                _desenhoOn 22F6  
               ?___almod 000F                 ?_adcInit 0001                 ?_adcRead 0001  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
         _PulseClockData 234E                 ?___lwdiv 0001                 ?___lwmod 0008  
   __end_of_PulseEnClock 234E                _lcdString 209E              _digitalRead 1624  
               ?_lcdChar 0001         ___almod@dividend 000F        __size_of_pushByte 005A  
               ?_lcdInit 0001     __end_of_pwmFrequency 23C4              _desenhoInit 0BBE  
              _atraso_ms 1E78              __smallconst 0600                 ?_pinMode 0001  
               ?_soWrite 0007                 ?_ssdInit 0001                 ?_pwmInit 0001  
       ___lwdiv@quotient 0005              _lcdPosition 225A         pwmFrequency@freq 000F  
        ___aldiv@divisor 0005          ___aldiv@counter 0009      __size_of_timerReset 0022  
         ___wmul@product 0005             ??_delayMicro 0003      __size_of_velocidade 018A  
             ?_delayMili 0001   __end_of_PulseClockData 2378      __size_of_pushNibble 0026  
           ??_lcdCommand 000E               ?_desenhoOn 0001                _timerInit 24CE  
              _timerWait 24B4                _ssdUpdate 14B8             ??_desenhoOff 0015  
             ?_lcdString 000F             ??_kpDebounce 000A        ___wmul@multiplier 0001  
             ?_atraso_ms 0001          lcdCommand@value 000E                main@tecla 005D  
     __end_of_delayMicro 24D8         timerReset@ciclos 0003                copy_data0 2006  
              copy_data1 2026       __end_of_lcdCommand 248A               pushByte@rs 000A  
           lcdChar@value 000E       __end_of_desenhoOff 242E       __end_of_kpDebounce 18C4  
               __Hrparam 0000                 __Lrparam 0000          lcdPosition@line 000F  
        ?_PulseClockData 0001               ?_timerInit 0001               ?_timerWait 0001  
             ?_ssdUpdate 0001         __size_of___aldiv 010C         __size_of___almod 00EC  
       __size_of_adcInit 0048         __size_of_adcRead 0050         __size_of___awdiv 00C4  
       __size_of___awmod 00B0  __size_of_pulseEnablePin 0042         __size_of___lwdiv 0074  
       __size_of___lwmod 0064         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 1D98                 __ptext11 248A                 __ptext20 178E  
               __ptext12 239E                 __ptext21 1624                 __ptext13 18C4  
               __ptext30 2144                 __ptext22 22F6                 __ptext14 1B80  
               __ptext31 2324                 __ptext23 240C                 __ptext15 1C34  
               __ptext40 10E0                 __ptext32 234E                 __ptext24 0BBE  
               __ptext16 23C4                 __ptext41 1EDC                 __ptext33 21DA  
               __ptext25 209E                 __ptext17 24C4                 __ptext42 1CE8  
               __ptext34 0E92                 __ptext26 244E                 __ptext18 2294  
               __ptext43 1ABC                 __ptext35 24D6                 __ptext27 225A  
               __ptext19 221C                 __ptext44 19D0                 __ptext36 22C6  
               __ptext28 246C                 __ptext37 1E78                 __ptext29 1F40  
               __ptext38 20F4                 __ptext39 2192         __size_of_soWrite 004E  
       __size_of_ssdInit 0056         __size_of_pwmInit 001A          ___almod@divisor 0013  
        ___almod@counter 0017            __size_of_main 0578            __size_of_modo 00B4  
            ??_delayMili 0003    __size_of_PulseEnClock 002A                 _ssdDigit 1F9A  
            delayMicro@a 0001                 isa$xinst 000000             soWrite@value 0007  
            ??_desenhoOn 0015    __size_of_pwmFrequency 0026                 _pushByte 1F40  
              pwmSet@val 000B              ??_lcdString 0011             ??_timerReset 0003  
               main@temp 005A                 main@slot 0059             ??_velocidade 0017  
           desenhoInit@i 0045              ??_atraso_ms 0003          timerReset@tempo 0001  
           ??_pushNibble 000C           lcdPosition@col 0011            ?_digitalWrite 0001  
           _PulseEnClock 2324        digitalWrite@value 0003         ___lwmod@dividend 0008  
     __end_of_timerReset 240C             _pwmFrequency 239E       __end_of_velocidade 14B8  
               soWrite@i 0009              ??_timerInit 0001              ??_timerWait 0001  
            ??_ssdUpdate 000A       __end_of_pushNibble 23EA       desenhoInit@aquecer 0035  
           ?_digitalRead 0001             ?_desenhoInit 0001          ___lwmod@divisor 000A  
            kpDebounce@i 000D          ___lwmod@counter 000C           ??_digitalWrite 0005  
           ___aldiv@sign 000A             ?_lcdPosition 000F          digitalWrite@pin 0001  
           ___almod@sign 0018  
